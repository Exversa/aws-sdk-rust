// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteLimit`](crate::operation::delete_limit::builders::DeleteLimitFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`farm_id(impl Into<String>)`](crate::operation::delete_limit::builders::DeleteLimitFluentBuilder::farm_id) / [`set_farm_id(Option<String>)`](crate::operation::delete_limit::builders::DeleteLimitFluentBuilder::set_farm_id):<br>required: **true**<br><p>The unique identifier of the farm that contains the limit to delete.</p><br>
    ///   - [`limit_id(impl Into<String>)`](crate::operation::delete_limit::builders::DeleteLimitFluentBuilder::limit_id) / [`set_limit_id(Option<String>)`](crate::operation::delete_limit::builders::DeleteLimitFluentBuilder::set_limit_id):<br>required: **true**<br><p>The unique identifier of the limit to delete.</p><br>
    /// - On success, responds with [`DeleteLimitOutput`](crate::operation::delete_limit::DeleteLimitOutput)
    /// - On failure, responds with [`SdkError<DeleteLimitError>`](crate::operation::delete_limit::DeleteLimitError)
    pub fn delete_limit(&self) -> crate::operation::delete_limit::builders::DeleteLimitFluentBuilder {
        crate::operation::delete_limit::builders::DeleteLimitFluentBuilder::new(self.handle.clone())
    }
}
