// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateFleet`](crate::operation::update_fleet::builders::UpdateFleetFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::update_fleet::builders::UpdateFleetFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::update_fleet::builders::UpdateFleetFluentBuilder::set_client_token):<br>required: **false**<br><p>The unique token which the server uses to recognize retries of the same request.</p><br>
    ///   - [`farm_id(impl Into<String>)`](crate::operation::update_fleet::builders::UpdateFleetFluentBuilder::farm_id) / [`set_farm_id(Option<String>)`](crate::operation::update_fleet::builders::UpdateFleetFluentBuilder::set_farm_id):<br>required: **true**<br><p>The farm ID to update.</p><br>
    ///   - [`fleet_id(impl Into<String>)`](crate::operation::update_fleet::builders::UpdateFleetFluentBuilder::fleet_id) / [`set_fleet_id(Option<String>)`](crate::operation::update_fleet::builders::UpdateFleetFluentBuilder::set_fleet_id):<br>required: **true**<br><p>The fleet ID to update.</p><br>
    ///   - [`display_name(impl Into<String>)`](crate::operation::update_fleet::builders::UpdateFleetFluentBuilder::display_name) / [`set_display_name(Option<String>)`](crate::operation::update_fleet::builders::UpdateFleetFluentBuilder::set_display_name):<br>required: **false**<br><p>The display name of the fleet to update.</p><important>  <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important><br>
    ///   - [`description(impl Into<String>)`](crate::operation::update_fleet::builders::UpdateFleetFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_fleet::builders::UpdateFleetFluentBuilder::set_description):<br>required: **false**<br><p>The description of the fleet to update.</p><important>  <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important><br>
    ///   - [`role_arn(impl Into<String>)`](crate::operation::update_fleet::builders::UpdateFleetFluentBuilder::role_arn) / [`set_role_arn(Option<String>)`](crate::operation::update_fleet::builders::UpdateFleetFluentBuilder::set_role_arn):<br>required: **false**<br><p>The IAM role ARN that the fleet's workers assume while running jobs.</p><br>
    ///   - [`min_worker_count(i32)`](crate::operation::update_fleet::builders::UpdateFleetFluentBuilder::min_worker_count) / [`set_min_worker_count(Option<i32>)`](crate::operation::update_fleet::builders::UpdateFleetFluentBuilder::set_min_worker_count):<br>required: **false**<br><p>The minimum number of workers in the fleet.</p><br>
    ///   - [`max_worker_count(i32)`](crate::operation::update_fleet::builders::UpdateFleetFluentBuilder::max_worker_count) / [`set_max_worker_count(Option<i32>)`](crate::operation::update_fleet::builders::UpdateFleetFluentBuilder::set_max_worker_count):<br>required: **false**<br><p>The maximum number of workers in the fleet.</p><br>
    ///   - [`configuration(FleetConfiguration)`](crate::operation::update_fleet::builders::UpdateFleetFluentBuilder::configuration) / [`set_configuration(Option<FleetConfiguration>)`](crate::operation::update_fleet::builders::UpdateFleetFluentBuilder::set_configuration):<br>required: **false**<br><p>The fleet configuration to update.</p><br>
    /// - On success, responds with [`UpdateFleetOutput`](crate::operation::update_fleet::UpdateFleetOutput)
    /// - On failure, responds with [`SdkError<UpdateFleetError>`](crate::operation::update_fleet::UpdateFleetError)
    pub fn update_fleet(&self) -> crate::operation::update_fleet::builders::UpdateFleetFluentBuilder {
        crate::operation::update_fleet::builders::UpdateFleetFluentBuilder::new(self.handle.clone())
    }
}
