// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetLimit`](crate::operation::get_limit::builders::GetLimitFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`farm_id(impl Into<String>)`](crate::operation::get_limit::builders::GetLimitFluentBuilder::farm_id) / [`set_farm_id(Option<String>)`](crate::operation::get_limit::builders::GetLimitFluentBuilder::set_farm_id):<br>required: **true**<br><p>The unique identifier of the farm that contains the limit.</p><br>
    ///   - [`limit_id(impl Into<String>)`](crate::operation::get_limit::builders::GetLimitFluentBuilder::limit_id) / [`set_limit_id(Option<String>)`](crate::operation::get_limit::builders::GetLimitFluentBuilder::set_limit_id):<br>required: **true**<br><p>The unique identifier of the limit to return.</p><br>
    /// - On success, responds with [`GetLimitOutput`](crate::operation::get_limit::GetLimitOutput) with field(s):
    ///   - [`display_name(String)`](crate::operation::get_limit::GetLimitOutput::display_name): <p>The display name of the limit.</p><important>  <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>
    ///   - [`amount_requirement_name(String)`](crate::operation::get_limit::GetLimitOutput::amount_requirement_name): <p>The value that you specify as the <code>name</code> in the <code>amounts</code> field of the <code>hostRequirements</code> in a step of a job template to declare the limit requirement.</p>
    ///   - [`max_count(i32)`](crate::operation::get_limit::GetLimitOutput::max_count): <p>The maximum number of resources constrained by this limit. When all of the resources are in use, steps that require the limit won't be scheduled until the resource is available.</p> <p>The <code>maxValue</code> must not be 0. If the value is -1, there is no restriction on the number of resources that can be acquired for this limit.</p>
    ///   - [`created_at(DateTime)`](crate::operation::get_limit::GetLimitOutput::created_at): <p>The Unix timestamp of the date and time that the limit was created.</p>
    ///   - [`created_by(String)`](crate::operation::get_limit::GetLimitOutput::created_by): <p>The user identifier of the person that created the limit.</p>
    ///   - [`updated_at(Option<DateTime>)`](crate::operation::get_limit::GetLimitOutput::updated_at): <p>The Unix timestamp of the date and time that the limit was last updated.</p>
    ///   - [`updated_by(Option<String>)`](crate::operation::get_limit::GetLimitOutput::updated_by): <p>The user identifier of the person that last updated the limit.</p>
    ///   - [`farm_id(String)`](crate::operation::get_limit::GetLimitOutput::farm_id): <p>The unique identifier of the farm that contains the limit.</p>
    ///   - [`limit_id(String)`](crate::operation::get_limit::GetLimitOutput::limit_id): <p>The unique identifier of the limit.</p>
    ///   - [`current_count(i32)`](crate::operation::get_limit::GetLimitOutput::current_count): <p>The number of resources from the limit that are being used by jobs. The result is delayed and may not be the count at the time that you called the operation.</p>
    ///   - [`description(Option<String>)`](crate::operation::get_limit::GetLimitOutput::description): <p>The description of the limit that helps identify what the limit is used for.</p><important>  <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>
    /// - On failure, responds with [`SdkError<GetLimitError>`](crate::operation::get_limit::GetLimitError)
    pub fn get_limit(&self) -> crate::operation::get_limit::builders::GetLimitFluentBuilder {
        crate::operation::get_limit::builders::GetLimitFluentBuilder::new(self.handle.clone())
    }
}
