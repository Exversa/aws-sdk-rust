// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_budget_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_budget::UpdateBudgetInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.actions_to_add {
        let mut array_2 = object.key("actionsToAdd").start_array();
        for item_3 in var_1 {
            {
                #[allow(unused_mut)]
                let mut object_4 = array_2.value().start_object();
                crate::protocol_serde::shape_budget_action_to_add::ser_budget_action_to_add(&mut object_4, item_3)?;
                object_4.finish();
            }
        }
        array_2.finish();
    }
    if let Some(var_5) = &input.actions_to_remove {
        let mut array_6 = object.key("actionsToRemove").start_array();
        for item_7 in var_5 {
            {
                #[allow(unused_mut)]
                let mut object_8 = array_6.value().start_object();
                crate::protocol_serde::shape_budget_action_to_remove::ser_budget_action_to_remove(&mut object_8, item_7)?;
                object_8.finish();
            }
        }
        array_6.finish();
    }
    if let Some(var_9) = &input.approximate_dollar_limit {
        object.key("approximateDollarLimit").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::Float((*var_9).into()),
        );
    }
    if let Some(var_10) = &input.description {
        object.key("description").string(var_10.as_str());
    }
    if let Some(var_11) = &input.display_name {
        object.key("displayName").string(var_11.as_str());
    }
    if let Some(var_12) = &input.schedule {
        #[allow(unused_mut)]
        let mut object_13 = object.key("schedule").start_object();
        crate::protocol_serde::shape_budget_schedule::ser_budget_schedule(&mut object_13, var_12)?;
        object_13.finish();
    }
    if let Some(var_14) = &input.status {
        object.key("status").string(var_14.as_str());
    }
    Ok(())
}
