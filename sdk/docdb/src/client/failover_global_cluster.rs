// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`FailoverGlobalCluster`](crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`global_cluster_identifier(impl Into<String>)`](crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder::global_cluster_identifier) / [`set_global_cluster_identifier(Option<String>)`](crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder::set_global_cluster_identifier):<br>required: **true**<br><p>The identifier of the Amazon DocumentDB global cluster to apply this operation. The identifier is the unique key assigned by the user when the cluster is created. In other words, it's the name of the global cluster.</p> <p>Constraints:</p> <ul>  <li>   <p>Must match the identifier of an existing global cluster.</p></li>  <li>   <p>Minimum length of 1. Maximum length of 255.</p></li> </ul> <p>Pattern: <code>\[A-Za-z\]\[0-9A-Za-z-:._\]*</code></p><br>
    ///   - [`target_db_cluster_identifier(impl Into<String>)`](crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder::target_db_cluster_identifier) / [`set_target_db_cluster_identifier(Option<String>)`](crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder::set_target_db_cluster_identifier):<br>required: **true**<br><p>The identifier of the secondary Amazon DocumentDB cluster that you want to promote to the primary for the global cluster. Use the Amazon Resource Name (ARN) for the identifier so that Amazon DocumentDB can locate the cluster in its Amazon Web Services region.</p> <p>Constraints:</p> <ul>  <li>   <p>Must match the identifier of an existing secondary cluster.</p></li>  <li>   <p>Minimum length of 1. Maximum length of 255.</p></li> </ul> <p>Pattern: <code>\[A-Za-z\]\[0-9A-Za-z-:._\]*</code></p><br>
    ///   - [`allow_data_loss(bool)`](crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder::allow_data_loss) / [`set_allow_data_loss(Option<bool>)`](crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder::set_allow_data_loss):<br>required: **false**<br><p>Specifies whether to allow data loss for this global cluster operation. Allowing data loss triggers a global failover operation.</p> <p>If you don't specify <code>AllowDataLoss</code>, the global cluster operation defaults to a switchover.</p> <p>Constraints:</p> <ul>  <li>   <p>Can't be specified together with the <code>Switchover</code> parameter.</p></li> </ul><br>
    ///   - [`switchover(bool)`](crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder::switchover) / [`set_switchover(Option<bool>)`](crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder::set_switchover):<br>required: **false**<br><p>Specifies whether to switch over this global database cluster.</p> <p>Constraints:</p> <ul>  <li>   <p>Can't be specified together with the <code>AllowDataLoss</code> parameter.</p></li> </ul><br>
    /// - On success, responds with [`FailoverGlobalClusterOutput`](crate::operation::failover_global_cluster::FailoverGlobalClusterOutput) with field(s):
    ///   - [`global_cluster(Option<GlobalCluster>)`](crate::operation::failover_global_cluster::FailoverGlobalClusterOutput::global_cluster): <p>A data type representing an Amazon DocumentDB global cluster.</p>
    /// - On failure, responds with [`SdkError<FailoverGlobalClusterError>`](crate::operation::failover_global_cluster::FailoverGlobalClusterError)
    pub fn failover_global_cluster(&self) -> crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder {
        crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder::new(self.handle.clone())
    }
}
