// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_message_template_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_message_template::CreateMessageTemplateInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.channel_subtype {
        object.key("channelSubtype").string(var_1.as_str());
    }
    if let Some(var_2) = &input.client_token {
        object.key("clientToken").string(var_2.as_str());
    }
    if let Some(var_3) = &input.content {
        #[allow(unused_mut)]
        let mut object_4 = object.key("content").start_object();
        crate::protocol_serde::shape_message_template_content_provider::ser_message_template_content_provider(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.default_attributes {
        #[allow(unused_mut)]
        let mut object_6 = object.key("defaultAttributes").start_object();
        crate::protocol_serde::shape_message_template_attributes::ser_message_template_attributes(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.description {
        object.key("description").string(var_7.as_str());
    }
    if let Some(var_8) = &input.grouping_configuration {
        #[allow(unused_mut)]
        let mut object_9 = object.key("groupingConfiguration").start_object();
        crate::protocol_serde::shape_grouping_configuration::ser_grouping_configuration(&mut object_9, var_8)?;
        object_9.finish();
    }
    if let Some(var_10) = &input.language {
        object.key("language").string(var_10.as_str());
    }
    if let Some(var_11) = &input.name {
        object.key("name").string(var_11.as_str());
    }
    if let Some(var_12) = &input.tags {
        #[allow(unused_mut)]
        let mut object_13 = object.key("tags").start_object();
        for (key_14, value_15) in var_12 {
            {
                object_13.key(key_14.as_str()).string(value_15.as_str());
            }
        }
        object_13.finish();
    }
    Ok(())
}
