// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateLicenseServerEndpoint`](crate::operation::create_license_server_endpoint::builders::CreateLicenseServerEndpointFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`identity_provider_arn(impl Into<String>)`](crate::operation::create_license_server_endpoint::builders::CreateLicenseServerEndpointFluentBuilder::identity_provider_arn) / [`set_identity_provider_arn(Option<String>)`](crate::operation::create_license_server_endpoint::builders::CreateLicenseServerEndpointFluentBuilder::set_identity_provider_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) that identifies the <code>IdentityProvider</code> resource that contains details about a registered identity provider. In the case of Active Directory, that can be a self-managed Active Directory or an Amazon Web Services Managed Active Directory that contains user identity details.</p><br>
    ///   - [`license_server_settings(LicenseServerSettings)`](crate::operation::create_license_server_endpoint::builders::CreateLicenseServerEndpointFluentBuilder::license_server_settings) / [`set_license_server_settings(Option<LicenseServerSettings>)`](crate::operation::create_license_server_endpoint::builders::CreateLicenseServerEndpointFluentBuilder::set_license_server_settings):<br>required: **true**<br><p>The <code>LicenseServerSettings</code> resource to create for the endpoint. The settings include the type of license server and the Secrets Manager secret that enables administrators to add or remove users associated with the license server.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_license_server_endpoint::builders::CreateLicenseServerEndpointFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_license_server_endpoint::builders::CreateLicenseServerEndpointFluentBuilder::set_tags):<br>required: **false**<br><p>The tags that apply for the license server endpoint.</p><br>
    /// - On success, responds with [`CreateLicenseServerEndpointOutput`](crate::operation::create_license_server_endpoint::CreateLicenseServerEndpointOutput) with field(s):
    ///   - [`identity_provider_arn(Option<String>)`](crate::operation::create_license_server_endpoint::CreateLicenseServerEndpointOutput::identity_provider_arn): <p>The Amazon Resource Name (ARN) of the identity provider specified in the request.</p>
    ///   - [`license_server_endpoint_arn(Option<String>)`](crate::operation::create_license_server_endpoint::CreateLicenseServerEndpointOutput::license_server_endpoint_arn): <p>The ARN of the <code>LicenseServerEndpoint</code> resource.</p>
    /// - On failure, responds with [`SdkError<CreateLicenseServerEndpointError>`](crate::operation::create_license_server_endpoint::CreateLicenseServerEndpointError)
    pub fn create_license_server_endpoint(
        &self,
    ) -> crate::operation::create_license_server_endpoint::builders::CreateLicenseServerEndpointFluentBuilder {
        crate::operation::create_license_server_endpoint::builders::CreateLicenseServerEndpointFluentBuilder::new(self.handle.clone())
    }
}
