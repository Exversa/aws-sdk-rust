// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_register_identity_provider_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::register_identity_provider::RegisterIdentityProviderInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.identity_provider {
        #[allow(unused_mut)]
        let mut object_2 = object.key("IdentityProvider").start_object();
        crate::protocol_serde::shape_identity_provider::ser_identity_provider(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.product {
        object.key("Product").string(var_3.as_str());
    }
    if let Some(var_4) = &input.settings {
        #[allow(unused_mut)]
        let mut object_5 = object.key("Settings").start_object();
        crate::protocol_serde::shape_settings::ser_settings(&mut object_5, var_4)?;
        object_5.finish();
    }
    if let Some(var_6) = &input.tags {
        #[allow(unused_mut)]
        let mut object_7 = object.key("Tags").start_object();
        for (key_8, value_9) in var_6 {
            {
                object_7.key(key_8.as_str()).string(value_9.as_str());
            }
        }
        object_7.finish();
    }
    Ok(())
}
