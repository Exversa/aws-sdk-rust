// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateWorkspacesPool`](crate::operation::update_workspaces_pool::builders::UpdateWorkspacesPoolFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`pool_id(impl Into<String>)`](crate::operation::update_workspaces_pool::builders::UpdateWorkspacesPoolFluentBuilder::pool_id) / [`set_pool_id(Option<String>)`](crate::operation::update_workspaces_pool::builders::UpdateWorkspacesPoolFluentBuilder::set_pool_id):<br>required: **true**<br><p>The identifier of the specified pool to update.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::update_workspaces_pool::builders::UpdateWorkspacesPoolFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_workspaces_pool::builders::UpdateWorkspacesPoolFluentBuilder::set_description):<br>required: **false**<br><p>Describes the specified pool to update.</p><br>
    ///   - [`bundle_id(impl Into<String>)`](crate::operation::update_workspaces_pool::builders::UpdateWorkspacesPoolFluentBuilder::bundle_id) / [`set_bundle_id(Option<String>)`](crate::operation::update_workspaces_pool::builders::UpdateWorkspacesPoolFluentBuilder::set_bundle_id):<br>required: **false**<br><p>The identifier of the bundle.</p><br>
    ///   - [`directory_id(impl Into<String>)`](crate::operation::update_workspaces_pool::builders::UpdateWorkspacesPoolFluentBuilder::directory_id) / [`set_directory_id(Option<String>)`](crate::operation::update_workspaces_pool::builders::UpdateWorkspacesPoolFluentBuilder::set_directory_id):<br>required: **false**<br><p>The identifier of the directory.</p><br>
    ///   - [`capacity(Capacity)`](crate::operation::update_workspaces_pool::builders::UpdateWorkspacesPoolFluentBuilder::capacity) / [`set_capacity(Option<Capacity>)`](crate::operation::update_workspaces_pool::builders::UpdateWorkspacesPoolFluentBuilder::set_capacity):<br>required: **false**<br><p>The desired capacity for the pool.</p><br>
    ///   - [`application_settings(ApplicationSettingsRequest)`](crate::operation::update_workspaces_pool::builders::UpdateWorkspacesPoolFluentBuilder::application_settings) / [`set_application_settings(Option<ApplicationSettingsRequest>)`](crate::operation::update_workspaces_pool::builders::UpdateWorkspacesPoolFluentBuilder::set_application_settings):<br>required: **false**<br><p>The persistent application settings for users in the pool.</p><br>
    ///   - [`timeout_settings(TimeoutSettings)`](crate::operation::update_workspaces_pool::builders::UpdateWorkspacesPoolFluentBuilder::timeout_settings) / [`set_timeout_settings(Option<TimeoutSettings>)`](crate::operation::update_workspaces_pool::builders::UpdateWorkspacesPoolFluentBuilder::set_timeout_settings):<br>required: **false**<br><p>Indicates the timeout settings of the specified pool.</p><br>
    ///   - [`running_mode(PoolsRunningMode)`](crate::operation::update_workspaces_pool::builders::UpdateWorkspacesPoolFluentBuilder::running_mode) / [`set_running_mode(Option<PoolsRunningMode>)`](crate::operation::update_workspaces_pool::builders::UpdateWorkspacesPoolFluentBuilder::set_running_mode):<br>required: **false**<br><p>The desired running mode for the pool. The running mode can only be updated when the pool is in a stopped state.</p><br>
    /// - On success, responds with [`UpdateWorkspacesPoolOutput`](crate::operation::update_workspaces_pool::UpdateWorkspacesPoolOutput) with field(s):
    ///   - [`workspaces_pool(Option<WorkspacesPool>)`](crate::operation::update_workspaces_pool::UpdateWorkspacesPoolOutput::workspaces_pool): <p>Describes the specified pool.</p>
    /// - On failure, responds with [`SdkError<UpdateWorkspacesPoolError>`](crate::operation::update_workspaces_pool::UpdateWorkspacesPoolError)
    pub fn update_workspaces_pool(&self) -> crate::operation::update_workspaces_pool::builders::UpdateWorkspacesPoolFluentBuilder {
        crate::operation::update_workspaces_pool::builders::UpdateWorkspacesPoolFluentBuilder::new(self.handle.clone())
    }
}
