// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteStreamGroupInput {
    /// <p>The unique ID value of the stream group resource to delete. Format example: <code>sg-1AB2C3De4</code>.</p>
    pub identifier: ::std::option::Option<::std::string::String>,
}
impl DeleteStreamGroupInput {
    /// <p>The unique ID value of the stream group resource to delete. Format example: <code>sg-1AB2C3De4</code>.</p>
    pub fn identifier(&self) -> ::std::option::Option<&str> {
        self.identifier.as_deref()
    }
}
impl DeleteStreamGroupInput {
    /// Creates a new builder-style object to manufacture [`DeleteStreamGroupInput`](crate::operation::delete_stream_group::DeleteStreamGroupInput).
    pub fn builder() -> crate::operation::delete_stream_group::builders::DeleteStreamGroupInputBuilder {
        crate::operation::delete_stream_group::builders::DeleteStreamGroupInputBuilder::default()
    }
}

/// A builder for [`DeleteStreamGroupInput`](crate::operation::delete_stream_group::DeleteStreamGroupInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeleteStreamGroupInputBuilder {
    pub(crate) identifier: ::std::option::Option<::std::string::String>,
}
impl DeleteStreamGroupInputBuilder {
    /// <p>The unique ID value of the stream group resource to delete. Format example: <code>sg-1AB2C3De4</code>.</p>
    /// This field is required.
    pub fn identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique ID value of the stream group resource to delete. Format example: <code>sg-1AB2C3De4</code>.</p>
    pub fn set_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.identifier = input;
        self
    }
    /// <p>The unique ID value of the stream group resource to delete. Format example: <code>sg-1AB2C3De4</code>.</p>
    pub fn get_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.identifier
    }
    /// Consumes the builder and constructs a [`DeleteStreamGroupInput`](crate::operation::delete_stream_group::DeleteStreamGroupInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::delete_stream_group::DeleteStreamGroupInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::delete_stream_group::DeleteStreamGroupInput { identifier: self.identifier })
    }
}
