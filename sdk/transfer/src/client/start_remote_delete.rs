// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartRemoteDelete`](crate::operation::start_remote_delete::builders::StartRemoteDeleteFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`connector_id(impl Into<String>)`](crate::operation::start_remote_delete::builders::StartRemoteDeleteFluentBuilder::connector_id) / [`set_connector_id(Option<String>)`](crate::operation::start_remote_delete::builders::StartRemoteDeleteFluentBuilder::set_connector_id):<br>required: **true**<br><p>The unique identifier for the connector.</p><br>
    ///   - [`delete_path(impl Into<String>)`](crate::operation::start_remote_delete::builders::StartRemoteDeleteFluentBuilder::delete_path) / [`set_delete_path(Option<String>)`](crate::operation::start_remote_delete::builders::StartRemoteDeleteFluentBuilder::set_delete_path):<br>required: **true**<br><p>The absolute path of the file or directory to delete. You can only specify one path per call to this operation.</p><br>
    /// - On success, responds with [`StartRemoteDeleteOutput`](crate::operation::start_remote_delete::StartRemoteDeleteOutput) with field(s):
    ///   - [`delete_id(String)`](crate::operation::start_remote_delete::StartRemoteDeleteOutput::delete_id): <p>Returns a unique identifier for the delete operation.</p>
    /// - On failure, responds with [`SdkError<StartRemoteDeleteError>`](crate::operation::start_remote_delete::StartRemoteDeleteError)
    pub fn start_remote_delete(&self) -> crate::operation::start_remote_delete::builders::StartRemoteDeleteFluentBuilder {
        crate::operation::start_remote_delete::builders::StartRemoteDeleteFluentBuilder::new(self.handle.clone())
    }
}
