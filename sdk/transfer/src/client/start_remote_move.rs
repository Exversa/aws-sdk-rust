// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartRemoteMove`](crate::operation::start_remote_move::builders::StartRemoteMoveFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`connector_id(impl Into<String>)`](crate::operation::start_remote_move::builders::StartRemoteMoveFluentBuilder::connector_id) / [`set_connector_id(Option<String>)`](crate::operation::start_remote_move::builders::StartRemoteMoveFluentBuilder::set_connector_id):<br>required: **true**<br><p>The unique identifier for the connector.</p><br>
    ///   - [`source_path(impl Into<String>)`](crate::operation::start_remote_move::builders::StartRemoteMoveFluentBuilder::source_path) / [`set_source_path(Option<String>)`](crate::operation::start_remote_move::builders::StartRemoteMoveFluentBuilder::set_source_path):<br>required: **true**<br><p>The absolute path of the file or directory to move or rename. You can only specify one path per call to this operation.</p><br>
    ///   - [`target_path(impl Into<String>)`](crate::operation::start_remote_move::builders::StartRemoteMoveFluentBuilder::target_path) / [`set_target_path(Option<String>)`](crate::operation::start_remote_move::builders::StartRemoteMoveFluentBuilder::set_target_path):<br>required: **true**<br><p>The absolute path for the target of the move/rename operation.</p><br>
    /// - On success, responds with [`StartRemoteMoveOutput`](crate::operation::start_remote_move::StartRemoteMoveOutput) with field(s):
    ///   - [`move_id(String)`](crate::operation::start_remote_move::StartRemoteMoveOutput::move_id): <p>Returns a unique identifier for the move/rename operation.</p>
    /// - On failure, responds with [`SdkError<StartRemoteMoveError>`](crate::operation::start_remote_move::StartRemoteMoveError)
    pub fn start_remote_move(&self) -> crate::operation::start_remote_move::builders::StartRemoteMoveFluentBuilder {
        crate::operation::start_remote_move::builders::StartRemoteMoveFluentBuilder::new(self.handle.clone())
    }
}
