// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteDomainUnit`](crate::operation::delete_domain_unit::builders::DeleteDomainUnitFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_identifier(impl Into<String>)`](crate::operation::delete_domain_unit::builders::DeleteDomainUnitFluentBuilder::domain_identifier) / [`set_domain_identifier(Option<String>)`](crate::operation::delete_domain_unit::builders::DeleteDomainUnitFluentBuilder::set_domain_identifier):<br>required: **true**<br><p>The ID of the domain where you want to delete a domain unit.</p><br>
    ///   - [`identifier(impl Into<String>)`](crate::operation::delete_domain_unit::builders::DeleteDomainUnitFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::delete_domain_unit::builders::DeleteDomainUnitFluentBuilder::set_identifier):<br>required: **true**<br><p>The ID of the domain unit that you want to delete.</p><br>
    /// - On success, responds with [`DeleteDomainUnitOutput`](crate::operation::delete_domain_unit::DeleteDomainUnitOutput)
    /// - On failure, responds with [`SdkError<DeleteDomainUnitError>`](crate::operation::delete_domain_unit::DeleteDomainUnitError)
    pub fn delete_domain_unit(&self) -> crate::operation::delete_domain_unit::builders::DeleteDomainUnitFluentBuilder {
        crate::operation::delete_domain_unit::builders::DeleteDomainUnitFluentBuilder::new(self.handle.clone())
    }
}
