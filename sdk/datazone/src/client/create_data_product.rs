// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateDataProduct`](crate::operation::create_data_product::builders::CreateDataProductFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_identifier(impl Into<String>)`](crate::operation::create_data_product::builders::CreateDataProductFluentBuilder::domain_identifier) / [`set_domain_identifier(Option<String>)`](crate::operation::create_data_product::builders::CreateDataProductFluentBuilder::set_domain_identifier):<br>required: **true**<br><p>The ID of the domain where the data product is created.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_data_product::builders::CreateDataProductFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_data_product::builders::CreateDataProductFluentBuilder::set_name):<br>required: **true**<br><p>The name of the data product.</p><br>
    ///   - [`owning_project_identifier(impl Into<String>)`](crate::operation::create_data_product::builders::CreateDataProductFluentBuilder::owning_project_identifier) / [`set_owning_project_identifier(Option<String>)`](crate::operation::create_data_product::builders::CreateDataProductFluentBuilder::set_owning_project_identifier):<br>required: **true**<br><p>The ID of the owning project of the data product.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_data_product::builders::CreateDataProductFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_data_product::builders::CreateDataProductFluentBuilder::set_description):<br>required: **false**<br><p>The description of the data product.</p><br>
    ///   - [`glossary_terms(impl Into<String>)`](crate::operation::create_data_product::builders::CreateDataProductFluentBuilder::glossary_terms) / [`set_glossary_terms(Option<Vec::<String>>)`](crate::operation::create_data_product::builders::CreateDataProductFluentBuilder::set_glossary_terms):<br>required: **false**<br><p>The glossary terms of the data product.</p><br>
    ///   - [`forms_input(FormInput)`](crate::operation::create_data_product::builders::CreateDataProductFluentBuilder::forms_input) / [`set_forms_input(Option<Vec::<FormInput>>)`](crate::operation::create_data_product::builders::CreateDataProductFluentBuilder::set_forms_input):<br>required: **false**<br><p>The metadata forms of the data product.</p><br>
    ///   - [`items(DataProductItem)`](crate::operation::create_data_product::builders::CreateDataProductFluentBuilder::items) / [`set_items(Option<Vec::<DataProductItem>>)`](crate::operation::create_data_product::builders::CreateDataProductFluentBuilder::set_items):<br>required: **false**<br><p>The data assets of the data product.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_data_product::builders::CreateDataProductFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_data_product::builders::CreateDataProductFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p><br>
    /// - On success, responds with [`CreateDataProductOutput`](crate::operation::create_data_product::CreateDataProductOutput) with field(s):
    ///   - [`domain_id(String)`](crate::operation::create_data_product::CreateDataProductOutput::domain_id): <p>The ID of the domain where the data product lives.</p>
    ///   - [`id(String)`](crate::operation::create_data_product::CreateDataProductOutput::id): <p>The ID of the data product.</p>
    ///   - [`revision(String)`](crate::operation::create_data_product::CreateDataProductOutput::revision): <p>The revision of the data product.</p>
    ///   - [`owning_project_id(String)`](crate::operation::create_data_product::CreateDataProductOutput::owning_project_id): <p>The ID of the owning project of the data product.</p>
    ///   - [`name(String)`](crate::operation::create_data_product::CreateDataProductOutput::name): <p>The name of the data product.</p>
    ///   - [`status(DataProductStatus)`](crate::operation::create_data_product::CreateDataProductOutput::status): <p>The status of the data product.</p>
    ///   - [`description(Option<String>)`](crate::operation::create_data_product::CreateDataProductOutput::description): <p>The description of the data product.</p>
    ///   - [`glossary_terms(Option<Vec::<String>>)`](crate::operation::create_data_product::CreateDataProductOutput::glossary_terms): <p>The glossary terms of the data product.</p>
    ///   - [`items(Option<Vec::<DataProductItem>>)`](crate::operation::create_data_product::CreateDataProductOutput::items): <p>The data assets of the data product.</p>
    ///   - [`forms_output(Option<Vec::<FormOutput>>)`](crate::operation::create_data_product::CreateDataProductOutput::forms_output): <p>The metadata forms of the data product.</p>
    ///   - [`created_at(Option<DateTime>)`](crate::operation::create_data_product::CreateDataProductOutput::created_at): <p>The timestamp at which the data product was created.</p>
    ///   - [`created_by(Option<String>)`](crate::operation::create_data_product::CreateDataProductOutput::created_by): <p>The user who created the data product.</p>
    ///   - [`first_revision_created_at(Option<DateTime>)`](crate::operation::create_data_product::CreateDataProductOutput::first_revision_created_at): <p>The timestamp at which the first revision of the data product was created.</p>
    ///   - [`first_revision_created_by(Option<String>)`](crate::operation::create_data_product::CreateDataProductOutput::first_revision_created_by): <p>The user who created the first revision of the data product.</p>
    /// - On failure, responds with [`SdkError<CreateDataProductError>`](crate::operation::create_data_product::CreateDataProductError)
    pub fn create_data_product(&self) -> crate::operation::create_data_product::builders::CreateDataProductFluentBuilder {
        crate::operation::create_data_product::builders::CreateDataProductFluentBuilder::new(self.handle.clone())
    }
}
