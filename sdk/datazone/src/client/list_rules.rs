// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListRules`](crate::operation::list_rules::builders::ListRulesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_rules::builders::ListRulesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_identifier(impl Into<String>)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::domain_identifier) / [`set_domain_identifier(Option<String>)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::set_domain_identifier):<br>required: **true**<br><p>The ID of the domain in which the rules are to be listed.</p><br>
    ///   - [`target_type(RuleTargetType)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::target_type) / [`set_target_type(Option<RuleTargetType>)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::set_target_type):<br>required: **true**<br><p>The target type of the rule.</p><br>
    ///   - [`target_identifier(impl Into<String>)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::target_identifier) / [`set_target_identifier(Option<String>)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::set_target_identifier):<br>required: **true**<br><p>The target ID of the rule.</p><br>
    ///   - [`rule_type(RuleType)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::rule_type) / [`set_rule_type(Option<RuleType>)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::set_rule_type):<br>required: **false**<br><p>The type of the rule.</p><br>
    ///   - [`action(RuleAction)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::action) / [`set_action(Option<RuleAction>)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::set_action):<br>required: **false**<br><p>The action of the rule.</p><br>
    ///   - [`project_ids(impl Into<String>)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::project_ids) / [`set_project_ids(Option<Vec::<String>>)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::set_project_ids):<br>required: **false**<br><p>The IDs of projects in which rules are to be listed.</p><br>
    ///   - [`asset_types(impl Into<String>)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::asset_types) / [`set_asset_types(Option<Vec::<String>>)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::set_asset_types):<br>required: **false**<br><p>The asset types of the rule.</p><br>
    ///   - [`data_product(bool)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::data_product) / [`set_data_product(Option<bool>)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::set_data_product):<br>required: **false**<br><p>The data product of the rule.</p><br>
    ///   - [`include_cascaded(bool)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::include_cascaded) / [`set_include_cascaded(Option<bool>)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::set_include_cascaded):<br>required: **false**<br><p>Specifies whether to include cascading rules in the results.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of rules to return in a single call to <code>ListRules</code>. When the number of rules to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListRules</code> to list the next set of rules.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_rules::builders::ListRulesFluentBuilder::set_next_token):<br>required: **false**<br><p>When the number of rules is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of rules, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListRules</code> to list the next set of rules.</p><br>
    /// - On success, responds with [`ListRulesOutput`](crate::operation::list_rules::ListRulesOutput) with field(s):
    ///   - [`items(Vec::<RuleSummary>)`](crate::operation::list_rules::ListRulesOutput::items): <p>The results of the <code>ListRules</code> action.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_rules::ListRulesOutput::next_token): <p>When the number of rules is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of rules, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListRules</code> to list the next set of rules.</p>
    /// - On failure, responds with [`SdkError<ListRulesError>`](crate::operation::list_rules::ListRulesError)
    pub fn list_rules(&self) -> crate::operation::list_rules::builders::ListRulesFluentBuilder {
        crate::operation::list_rules::builders::ListRulesFluentBuilder::new(self.handle.clone())
    }
}
