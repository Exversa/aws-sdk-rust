// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_put_environment_blueprint_configuration_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::put_environment_blueprint_configuration::PutEnvironmentBlueprintConfigurationInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.enabled_regions {
        let mut array_2 = object.key("enabledRegions").start_array();
        for item_3 in var_1 {
            {
                array_2.value().string(item_3.as_str());
            }
        }
        array_2.finish();
    }
    if let Some(var_4) = &input.environment_role_permission_boundary {
        object.key("environmentRolePermissionBoundary").string(var_4.as_str());
    }
    if let Some(var_5) = &input.manage_access_role_arn {
        object.key("manageAccessRoleArn").string(var_5.as_str());
    }
    if let Some(var_6) = &input.provisioning_configurations {
        let mut array_7 = object.key("provisioningConfigurations").start_array();
        for item_8 in var_6 {
            {
                #[allow(unused_mut)]
                let mut object_9 = array_7.value().start_object();
                crate::protocol_serde::shape_provisioning_configuration::ser_provisioning_configuration(&mut object_9, item_8)?;
                object_9.finish();
            }
        }
        array_7.finish();
    }
    if let Some(var_10) = &input.provisioning_role_arn {
        object.key("provisioningRoleArn").string(var_10.as_str());
    }
    if let Some(var_11) = &input.regional_parameters {
        #[allow(unused_mut)]
        let mut object_12 = object.key("regionalParameters").start_object();
        for (key_13, value_14) in var_11 {
            {
                #[allow(unused_mut)]
                let mut object_15 = object_12.key(key_13.as_str()).start_object();
                for (key_16, value_17) in value_14 {
                    {
                        object_15.key(key_16.as_str()).string(value_17.as_str());
                    }
                }
                object_15.finish();
            }
        }
        object_12.finish();
    }
    Ok(())
}
