// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateMultiRegionCluster`](crate::operation::update_multi_region_cluster::builders::UpdateMultiRegionClusterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`multi_region_cluster_name(impl Into<String>)`](crate::operation::update_multi_region_cluster::builders::UpdateMultiRegionClusterFluentBuilder::multi_region_cluster_name) / [`set_multi_region_cluster_name(Option<String>)`](crate::operation::update_multi_region_cluster::builders::UpdateMultiRegionClusterFluentBuilder::set_multi_region_cluster_name):<br>required: **true**<br><p>The name of the multi-Region cluster to be updated.</p><br>
    ///   - [`node_type(impl Into<String>)`](crate::operation::update_multi_region_cluster::builders::UpdateMultiRegionClusterFluentBuilder::node_type) / [`set_node_type(Option<String>)`](crate::operation::update_multi_region_cluster::builders::UpdateMultiRegionClusterFluentBuilder::set_node_type):<br>required: **false**<br><p>The new node type to be used for the multi-Region cluster.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::update_multi_region_cluster::builders::UpdateMultiRegionClusterFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_multi_region_cluster::builders::UpdateMultiRegionClusterFluentBuilder::set_description):<br>required: **false**<br><p>A new description for the multi-Region cluster.</p><br>
    ///   - [`engine_version(impl Into<String>)`](crate::operation::update_multi_region_cluster::builders::UpdateMultiRegionClusterFluentBuilder::engine_version) / [`set_engine_version(Option<String>)`](crate::operation::update_multi_region_cluster::builders::UpdateMultiRegionClusterFluentBuilder::set_engine_version):<br>required: **false**<br><p>The new engine version to be used for the multi-Region cluster.</p><br>
    ///   - [`shard_configuration(ShardConfigurationRequest)`](crate::operation::update_multi_region_cluster::builders::UpdateMultiRegionClusterFluentBuilder::shard_configuration) / [`set_shard_configuration(Option<ShardConfigurationRequest>)`](crate::operation::update_multi_region_cluster::builders::UpdateMultiRegionClusterFluentBuilder::set_shard_configuration):<br>required: **false**<br><p>A request to configure the sharding properties of a cluster</p><br>
    ///   - [`multi_region_parameter_group_name(impl Into<String>)`](crate::operation::update_multi_region_cluster::builders::UpdateMultiRegionClusterFluentBuilder::multi_region_parameter_group_name) / [`set_multi_region_parameter_group_name(Option<String>)`](crate::operation::update_multi_region_cluster::builders::UpdateMultiRegionClusterFluentBuilder::set_multi_region_parameter_group_name):<br>required: **false**<br><p>The new multi-Region parameter group to be associated with the cluster.</p><br>
    ///   - [`update_strategy(UpdateStrategy)`](crate::operation::update_multi_region_cluster::builders::UpdateMultiRegionClusterFluentBuilder::update_strategy) / [`set_update_strategy(Option<UpdateStrategy>)`](crate::operation::update_multi_region_cluster::builders::UpdateMultiRegionClusterFluentBuilder::set_update_strategy):<br>required: **false**<br><p>Whether to force the update even if it may cause data loss.</p><br>
    /// - On success, responds with [`UpdateMultiRegionClusterOutput`](crate::operation::update_multi_region_cluster::UpdateMultiRegionClusterOutput) with field(s):
    ///   - [`multi_region_cluster(Option<MultiRegionCluster>)`](crate::operation::update_multi_region_cluster::UpdateMultiRegionClusterOutput::multi_region_cluster): <p>The status of updating the multi-Region cluster.</p>
    /// - On failure, responds with [`SdkError<UpdateMultiRegionClusterError>`](crate::operation::update_multi_region_cluster::UpdateMultiRegionClusterError)
    pub fn update_multi_region_cluster(&self) -> crate::operation::update_multi_region_cluster::builders::UpdateMultiRegionClusterFluentBuilder {
        crate::operation::update_multi_region_cluster::builders::UpdateMultiRegionClusterFluentBuilder::new(self.handle.clone())
    }
}
