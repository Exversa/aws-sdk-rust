// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`FailoverGlobalCluster`](crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`global_cluster_identifier(impl Into<String>)`](crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder::global_cluster_identifier) / [`set_global_cluster_identifier(Option<String>)`](crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder::set_global_cluster_identifier):<br>required: **true**<br><p>Identifier of the Neptune global database that should be failed over. The identifier is the unique key assigned by the user when the Neptune global database was created. In other words, it's the name of the global database that you want to fail over.</p> <p>Constraints: Must match the identifier of an existing Neptune global database.</p><br>
    ///   - [`target_db_cluster_identifier(impl Into<String>)`](crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder::target_db_cluster_identifier) / [`set_target_db_cluster_identifier(Option<String>)`](crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder::set_target_db_cluster_identifier):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the secondary Neptune DB cluster that you want to promote to primary for the global database.</p><br>
    ///   - [`allow_data_loss(bool)`](crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder::allow_data_loss) / [`set_allow_data_loss(Option<bool>)`](crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder::set_allow_data_loss):<br>required: **false**<br><p>Specifies whether to allow data loss for this global database cluster operation. Allowing data loss triggers a global failover operation.</p> <p>If you don't specify <code>AllowDataLoss</code>, the global database cluster operation defaults to a switchover.</p> <p>Constraints:Can't be specified together with the <code>Switchover</code> parameter.</p><br>
    ///   - [`switchover(bool)`](crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder::switchover) / [`set_switchover(Option<bool>)`](crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder::set_switchover):<br>required: **false**<br><p>Specifies whether to switch over this global database cluster.</p> <p>Constraints:Can't be specified together with the <code>AllowDataLoss</code> parameter.</p><br>
    /// - On success, responds with [`FailoverGlobalClusterOutput`](crate::operation::failover_global_cluster::FailoverGlobalClusterOutput) with field(s):
    ///   - [`global_cluster(Option<GlobalCluster>)`](crate::operation::failover_global_cluster::FailoverGlobalClusterOutput::global_cluster): <p>Contains the details of an Amazon Neptune global database.</p> <p>This data type is used as a response element for the <code>CreateGlobalCluster</code>, <code>DescribeGlobalClusters</code>, <code>ModifyGlobalCluster</code>, <code>DeleteGlobalCluster</code>, <code>FailoverGlobalCluster</code>, and <code>RemoveFromGlobalCluster</code> actions.</p>
    /// - On failure, responds with [`SdkError<FailoverGlobalClusterError>`](crate::operation::failover_global_cluster::FailoverGlobalClusterError)
    pub fn failover_global_cluster(&self) -> crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder {
        crate::operation::failover_global_cluster::builders::FailoverGlobalClusterFluentBuilder::new(self.handle.clone())
    }
}
