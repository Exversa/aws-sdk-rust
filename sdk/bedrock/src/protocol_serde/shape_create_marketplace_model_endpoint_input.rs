// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_marketplace_model_endpoint_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_marketplace_model_endpoint::CreateMarketplaceModelEndpointInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.accept_eula {
        object.key("acceptEula").boolean(*var_1);
    }
    if let Some(var_2) = &input.client_request_token {
        object.key("clientRequestToken").string(var_2.as_str());
    }
    if let Some(var_3) = &input.endpoint_config {
        #[allow(unused_mut)]
        let mut object_4 = object.key("endpointConfig").start_object();
        crate::protocol_serde::shape_endpoint_config::ser_endpoint_config(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.endpoint_name {
        object.key("endpointName").string(var_5.as_str());
    }
    if let Some(var_6) = &input.model_source_identifier {
        object.key("modelSourceIdentifier").string(var_6.as_str());
    }
    if let Some(var_7) = &input.tags {
        let mut array_8 = object.key("tags").start_array();
        for item_9 in var_7 {
            {
                #[allow(unused_mut)]
                let mut object_10 = array_8.value().start_object();
                crate::protocol_serde::shape_tag::ser_tag(&mut object_10, item_9)?;
                object_10.finish();
            }
        }
        array_8.finish();
    }
    Ok(())
}
