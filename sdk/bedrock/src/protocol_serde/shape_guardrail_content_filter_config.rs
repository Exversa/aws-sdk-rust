// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_guardrail_content_filter_config(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::GuardrailContentFilterConfig,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    {
        object.key("type").string(input.r#type.as_str());
    }
    {
        object.key("inputStrength").string(input.input_strength.as_str());
    }
    {
        object.key("outputStrength").string(input.output_strength.as_str());
    }
    if let Some(var_1) = &input.input_modalities {
        let mut array_2 = object.key("inputModalities").start_array();
        for item_3 in var_1 {
            {
                array_2.value().string(item_3.as_str());
            }
        }
        array_2.finish();
    }
    if let Some(var_4) = &input.output_modalities {
        let mut array_5 = object.key("outputModalities").start_array();
        for item_6 in var_4 {
            {
                array_5.value().string(item_6.as_str());
            }
        }
        array_5.finish();
    }
    if let Some(var_7) = &input.input_action {
        object.key("inputAction").string(var_7.as_str());
    }
    if let Some(var_8) = &input.output_action {
        object.key("outputAction").string(var_8.as_str());
    }
    if let Some(var_9) = &input.input_enabled {
        object.key("inputEnabled").boolean(*var_9);
    }
    if let Some(var_10) = &input.output_enabled {
        object.key("outputEnabled").boolean(*var_10);
    }
    Ok(())
}
