// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetEvaluationJob`](crate::operation::get_evaluation_job::builders::GetEvaluationJobFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`job_identifier(impl Into<String>)`](crate::operation::get_evaluation_job::builders::GetEvaluationJobFluentBuilder::job_identifier) / [`set_job_identifier(Option<String>)`](crate::operation::get_evaluation_job::builders::GetEvaluationJobFluentBuilder::set_job_identifier):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the evaluation job you want get information on.</p><br>
    /// - On success, responds with [`GetEvaluationJobOutput`](crate::operation::get_evaluation_job::GetEvaluationJobOutput) with field(s):
    ///   - [`job_name(String)`](crate::operation::get_evaluation_job::GetEvaluationJobOutput::job_name): <p>The name for the evaluation job.</p>
    ///   - [`status(EvaluationJobStatus)`](crate::operation::get_evaluation_job::GetEvaluationJobOutput::status): <p>The current status of the evaluation job.</p>
    ///   - [`job_arn(String)`](crate::operation::get_evaluation_job::GetEvaluationJobOutput::job_arn): <p>The Amazon Resource Name (ARN) of the evaluation job.</p>
    ///   - [`job_description(Option<String>)`](crate::operation::get_evaluation_job::GetEvaluationJobOutput::job_description): <p>The description of the evaluation job.</p>
    ///   - [`role_arn(String)`](crate::operation::get_evaluation_job::GetEvaluationJobOutput::role_arn): <p>The Amazon Resource Name (ARN) of the IAM service role used in the evaluation job.</p>
    ///   - [`customer_encryption_key_id(Option<String>)`](crate::operation::get_evaluation_job::GetEvaluationJobOutput::customer_encryption_key_id): <p>The Amazon Resource Name (ARN) of the customer managed encryption key specified when the evaluation job was created.</p>
    ///   - [`job_type(EvaluationJobType)`](crate::operation::get_evaluation_job::GetEvaluationJobOutput::job_type): <p>Specifies whether the evaluation job is automated or human-based.</p>
    ///   - [`application_type(Option<ApplicationType>)`](crate::operation::get_evaluation_job::GetEvaluationJobOutput::application_type): <p>Specifies whether the evaluation job is for evaluating a model or evaluating a knowledge base (retrieval and response generation).</p>
    ///   - [`evaluation_config(Option<EvaluationConfig>)`](crate::operation::get_evaluation_job::GetEvaluationJobOutput::evaluation_config): <p>Contains the configuration details of either an automated or human-based evaluation job.</p>
    ///   - [`inference_config(Option<EvaluationInferenceConfig>)`](crate::operation::get_evaluation_job::GetEvaluationJobOutput::inference_config): <p>Contains the configuration details of the inference model used for the evaluation job.</p>
    ///   - [`output_data_config(Option<EvaluationOutputDataConfig>)`](crate::operation::get_evaluation_job::GetEvaluationJobOutput::output_data_config): <p>Contains the configuration details of the Amazon S3 bucket for storing the results of the evaluation job.</p>
    ///   - [`creation_time(DateTime)`](crate::operation::get_evaluation_job::GetEvaluationJobOutput::creation_time): <p>The time the evaluation job was created.</p>
    ///   - [`last_modified_time(Option<DateTime>)`](crate::operation::get_evaluation_job::GetEvaluationJobOutput::last_modified_time): <p>The time the evaluation job was last modified.</p>
    ///   - [`failure_messages(Option<Vec::<String>>)`](crate::operation::get_evaluation_job::GetEvaluationJobOutput::failure_messages): <p>A list of strings that specify why the evaluation job failed to create.</p>
    /// - On failure, responds with [`SdkError<GetEvaluationJobError>`](crate::operation::get_evaluation_job::GetEvaluationJobError)
    pub fn get_evaluation_job(&self) -> crate::operation::get_evaluation_job::builders::GetEvaluationJobFluentBuilder {
        crate::operation::get_evaluation_job::builders::GetEvaluationJobFluentBuilder::new(self.handle.clone())
    }
}
