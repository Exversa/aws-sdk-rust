// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateInferenceProfile`](crate::operation::create_inference_profile::builders::CreateInferenceProfileFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`inference_profile_name(impl Into<String>)`](crate::operation::create_inference_profile::builders::CreateInferenceProfileFluentBuilder::inference_profile_name) / [`set_inference_profile_name(Option<String>)`](crate::operation::create_inference_profile::builders::CreateInferenceProfileFluentBuilder::set_inference_profile_name):<br>required: **true**<br><p>A name for the inference profile.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_inference_profile::builders::CreateInferenceProfileFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_inference_profile::builders::CreateInferenceProfileFluentBuilder::set_description):<br>required: **false**<br><p>A description for the inference profile.</p><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_inference_profile::builders::CreateInferenceProfileFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_inference_profile::builders::CreateInferenceProfileFluentBuilder::set_client_request_token):<br>required: **false**<br><p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring idempotency</a>.</p><br>
    ///   - [`model_source(InferenceProfileModelSource)`](crate::operation::create_inference_profile::builders::CreateInferenceProfileFluentBuilder::model_source) / [`set_model_source(Option<InferenceProfileModelSource>)`](crate::operation::create_inference_profile::builders::CreateInferenceProfileFluentBuilder::set_model_source):<br>required: **true**<br><p>The foundation model or system-defined inference profile that the inference profile will track metrics and costs for.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_inference_profile::builders::CreateInferenceProfileFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_inference_profile::builders::CreateInferenceProfileFluentBuilder::set_tags):<br>required: **false**<br><p>An array of objects, each of which contains a tag and its value. For more information, see <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html">Tagging resources</a> in the <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html">Amazon Bedrock User Guide</a>.</p><br>
    /// - On success, responds with [`CreateInferenceProfileOutput`](crate::operation::create_inference_profile::CreateInferenceProfileOutput) with field(s):
    ///   - [`inference_profile_arn(String)`](crate::operation::create_inference_profile::CreateInferenceProfileOutput::inference_profile_arn): <p>The ARN of the inference profile that you created.</p>
    ///   - [`status(Option<InferenceProfileStatus>)`](crate::operation::create_inference_profile::CreateInferenceProfileOutput::status): <p>The status of the inference profile. <code>ACTIVE</code> means that the inference profile is ready to be used.</p>
    /// - On failure, responds with [`SdkError<CreateInferenceProfileError>`](crate::operation::create_inference_profile::CreateInferenceProfileError)
    pub fn create_inference_profile(&self) -> crate::operation::create_inference_profile::builders::CreateInferenceProfileFluentBuilder {
        crate::operation::create_inference_profile::builders::CreateInferenceProfileFluentBuilder::new(self.handle.clone())
    }
}
