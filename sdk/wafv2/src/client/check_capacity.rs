// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CheckCapacity`](crate::operation::check_capacity::builders::CheckCapacityFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`scope(Scope)`](crate::operation::check_capacity::builders::CheckCapacityFluentBuilder::scope) / [`set_scope(Option<Scope>)`](crate::operation::check_capacity::builders::CheckCapacityFluentBuilder::set_scope):<br>required: **true**<br><p>Specifies whether this is for a global resource type, such as a Amazon CloudFront distribution.</p> <p>To work with CloudFront, you must also specify the Region US East (N. Virginia) as follows:</p> <ul>  <li>   <p>CLI - Specify the Region when you use the CloudFront scope: <code>--scope=CLOUDFRONT --region=us-east-1</code>.</p></li>  <li>   <p>API and SDKs - For all calls, use the Region endpoint us-east-1.</p></li> </ul><br>
    ///   - [`rules(Rule)`](crate::operation::check_capacity::builders::CheckCapacityFluentBuilder::rules) / [`set_rules(Option<Vec::<Rule>>)`](crate::operation::check_capacity::builders::CheckCapacityFluentBuilder::set_rules):<br>required: **true**<br><p>An array of <code>Rule</code> that you're configuring to use in a rule group or web ACL.</p><br>
    /// - On success, responds with [`CheckCapacityOutput`](crate::operation::check_capacity::CheckCapacityOutput) with field(s):
    ///   - [`capacity(i64)`](crate::operation::check_capacity::CheckCapacityOutput::capacity): <p>The capacity required by the rules and scope.</p>
    /// - On failure, responds with [`SdkError<CheckCapacityError>`](crate::operation::check_capacity::CheckCapacityError)
    pub fn check_capacity(&self) -> crate::operation::check_capacity::builders::CheckCapacityFluentBuilder {
        crate::operation::check_capacity::builders::CheckCapacityFluentBuilder::new(self.handle.clone())
    }
}
