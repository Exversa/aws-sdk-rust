// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListLoggingConfigurations`](crate::operation::list_logging_configurations::builders::ListLoggingConfigurationsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`scope(Scope)`](crate::operation::list_logging_configurations::builders::ListLoggingConfigurationsFluentBuilder::scope) / [`set_scope(Option<Scope>)`](crate::operation::list_logging_configurations::builders::ListLoggingConfigurationsFluentBuilder::set_scope):<br>required: **true**<br><p>Specifies whether this is for a global resource type, such as a Amazon CloudFront distribution.</p> <p>To work with CloudFront, you must also specify the Region US East (N. Virginia) as follows:</p> <ul>  <li>   <p>CLI - Specify the Region when you use the CloudFront scope: <code>--scope=CLOUDFRONT --region=us-east-1</code>.</p></li>  <li>   <p>API and SDKs - For all calls, use the Region endpoint us-east-1.</p></li> </ul><br>
    ///   - [`next_marker(impl Into<String>)`](crate::operation::list_logging_configurations::builders::ListLoggingConfigurationsFluentBuilder::next_marker) / [`set_next_marker(Option<String>)`](crate::operation::list_logging_configurations::builders::ListLoggingConfigurationsFluentBuilder::set_next_marker):<br>required: **false**<br><p>When you request a list of objects with a <code>Limit</code> setting, if the number of objects that are still available for retrieval exceeds the limit, WAF returns a <code>NextMarker</code> value in the response. To retrieve the next batch of objects, provide the marker from the prior call in your next request.</p><br>
    ///   - [`limit(i32)`](crate::operation::list_logging_configurations::builders::ListLoggingConfigurationsFluentBuilder::limit) / [`set_limit(Option<i32>)`](crate::operation::list_logging_configurations::builders::ListLoggingConfigurationsFluentBuilder::set_limit):<br>required: **false**<br><p>The maximum number of objects that you want WAF to return for this request. If more objects are available, in the response, WAF provides a <code>NextMarker</code> value that you can use in a subsequent call to get the next batch of objects.</p><br>
    ///   - [`log_scope(LogScope)`](crate::operation::list_logging_configurations::builders::ListLoggingConfigurationsFluentBuilder::log_scope) / [`set_log_scope(Option<LogScope>)`](crate::operation::list_logging_configurations::builders::ListLoggingConfigurationsFluentBuilder::set_log_scope):<br>required: **false**<br><p>The owner of the logging configuration, which must be set to <code>CUSTOMER</code> for the configurations that you manage.</p> <p>The log scope <code>SECURITY_LAKE</code> indicates a configuration that is managed through Amazon Security Lake. You can use Security Lake to collect log and event data from various sources for normalization, analysis, and management. For information, see <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/internal-sources.html">Collecting data from Amazon Web Services services</a> in the <i>Amazon Security Lake user guide</i>.</p> <p>Default: <code>CUSTOMER</code></p><br>
    /// - On success, responds with [`ListLoggingConfigurationsOutput`](crate::operation::list_logging_configurations::ListLoggingConfigurationsOutput) with field(s):
    ///   - [`logging_configurations(Option<Vec::<LoggingConfiguration>>)`](crate::operation::list_logging_configurations::ListLoggingConfigurationsOutput::logging_configurations): <p>Array of logging configurations. If you specified a <code>Limit</code> in your request, this might not be the full list.</p>
    ///   - [`next_marker(Option<String>)`](crate::operation::list_logging_configurations::ListLoggingConfigurationsOutput::next_marker): <p>When you request a list of objects with a <code>Limit</code> setting, if the number of objects that are still available for retrieval exceeds the limit, WAF returns a <code>NextMarker</code> value in the response. To retrieve the next batch of objects, provide the marker from the prior call in your next request.</p>
    /// - On failure, responds with [`SdkError<ListLoggingConfigurationsError>`](crate::operation::list_logging_configurations::ListLoggingConfigurationsError)
    pub fn list_logging_configurations(&self) -> crate::operation::list_logging_configurations::builders::ListLoggingConfigurationsFluentBuilder {
        crate::operation::list_logging_configurations::builders::ListLoggingConfigurationsFluentBuilder::new(self.handle.clone())
    }
}
