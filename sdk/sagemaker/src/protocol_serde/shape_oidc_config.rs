// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_oidc_config(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::OidcConfig,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.client_id {
        object.key("ClientId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.client_secret {
        object.key("ClientSecret").string(var_2.as_str());
    }
    if let Some(var_3) = &input.issuer {
        object.key("Issuer").string(var_3.as_str());
    }
    if let Some(var_4) = &input.authorization_endpoint {
        object.key("AuthorizationEndpoint").string(var_4.as_str());
    }
    if let Some(var_5) = &input.token_endpoint {
        object.key("TokenEndpoint").string(var_5.as_str());
    }
    if let Some(var_6) = &input.user_info_endpoint {
        object.key("UserInfoEndpoint").string(var_6.as_str());
    }
    if let Some(var_7) = &input.logout_endpoint {
        object.key("LogoutEndpoint").string(var_7.as_str());
    }
    if let Some(var_8) = &input.jwks_uri {
        object.key("JwksUri").string(var_8.as_str());
    }
    if let Some(var_9) = &input.scope {
        object.key("Scope").string(var_9.as_str());
    }
    if let Some(var_10) = &input.authentication_request_extra_params {
        #[allow(unused_mut)]
        let mut object_11 = object.key("AuthenticationRequestExtraParams").start_object();
        for (key_12, value_13) in var_10 {
            {
                object_11.key(key_12.as_str()).string(value_13.as_str());
            }
        }
        object_11.finish();
    }
    Ok(())
}
