// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Studio settings. If these settings are applied on a user level, they take priority over the settings applied on a domain level.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StudioWebPortalSettings {
    /// <p>The machine learning tools that are hidden from the Studio left navigation pane.</p>
    pub hidden_ml_tools: ::std::option::Option<::std::vec::Vec<crate::types::MlTools>>,
    /// <p>The <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/studio-updated-apps.html">Applications supported in Studio</a> that are hidden from the Studio left navigation pane.</p>
    pub hidden_app_types: ::std::option::Option<::std::vec::Vec<crate::types::AppType>>,
}
impl StudioWebPortalSettings {
    /// <p>The machine learning tools that are hidden from the Studio left navigation pane.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.hidden_ml_tools.is_none()`.
    pub fn hidden_ml_tools(&self) -> &[crate::types::MlTools] {
        self.hidden_ml_tools.as_deref().unwrap_or_default()
    }
    /// <p>The <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/studio-updated-apps.html">Applications supported in Studio</a> that are hidden from the Studio left navigation pane.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.hidden_app_types.is_none()`.
    pub fn hidden_app_types(&self) -> &[crate::types::AppType] {
        self.hidden_app_types.as_deref().unwrap_or_default()
    }
}
impl StudioWebPortalSettings {
    /// Creates a new builder-style object to manufacture [`StudioWebPortalSettings`](crate::types::StudioWebPortalSettings).
    pub fn builder() -> crate::types::builders::StudioWebPortalSettingsBuilder {
        crate::types::builders::StudioWebPortalSettingsBuilder::default()
    }
}

/// A builder for [`StudioWebPortalSettings`](crate::types::StudioWebPortalSettings).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct StudioWebPortalSettingsBuilder {
    pub(crate) hidden_ml_tools: ::std::option::Option<::std::vec::Vec<crate::types::MlTools>>,
    pub(crate) hidden_app_types: ::std::option::Option<::std::vec::Vec<crate::types::AppType>>,
}
impl StudioWebPortalSettingsBuilder {
    /// Appends an item to `hidden_ml_tools`.
    ///
    /// To override the contents of this collection use [`set_hidden_ml_tools`](Self::set_hidden_ml_tools).
    ///
    /// <p>The machine learning tools that are hidden from the Studio left navigation pane.</p>
    pub fn hidden_ml_tools(mut self, input: crate::types::MlTools) -> Self {
        let mut v = self.hidden_ml_tools.unwrap_or_default();
        v.push(input);
        self.hidden_ml_tools = ::std::option::Option::Some(v);
        self
    }
    /// <p>The machine learning tools that are hidden from the Studio left navigation pane.</p>
    pub fn set_hidden_ml_tools(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::MlTools>>) -> Self {
        self.hidden_ml_tools = input;
        self
    }
    /// <p>The machine learning tools that are hidden from the Studio left navigation pane.</p>
    pub fn get_hidden_ml_tools(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::MlTools>> {
        &self.hidden_ml_tools
    }
    /// Appends an item to `hidden_app_types`.
    ///
    /// To override the contents of this collection use [`set_hidden_app_types`](Self::set_hidden_app_types).
    ///
    /// <p>The <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/studio-updated-apps.html">Applications supported in Studio</a> that are hidden from the Studio left navigation pane.</p>
    pub fn hidden_app_types(mut self, input: crate::types::AppType) -> Self {
        let mut v = self.hidden_app_types.unwrap_or_default();
        v.push(input);
        self.hidden_app_types = ::std::option::Option::Some(v);
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/studio-updated-apps.html">Applications supported in Studio</a> that are hidden from the Studio left navigation pane.</p>
    pub fn set_hidden_app_types(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::AppType>>) -> Self {
        self.hidden_app_types = input;
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/studio-updated-apps.html">Applications supported in Studio</a> that are hidden from the Studio left navigation pane.</p>
    pub fn get_hidden_app_types(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::AppType>> {
        &self.hidden_app_types
    }
    /// Consumes the builder and constructs a [`StudioWebPortalSettings`](crate::types::StudioWebPortalSettings).
    pub fn build(self) -> crate::types::StudioWebPortalSettings {
        crate::types::StudioWebPortalSettings {
            hidden_ml_tools: self.hidden_ml_tools,
            hidden_app_types: self.hidden_app_types,
        }
    }
}
