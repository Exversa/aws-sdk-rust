// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListClusterSchedulerConfigs`](crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`created_after(DateTime)`](crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder::created_after) / [`set_created_after(Option<DateTime>)`](crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder::set_created_after):<br>required: **false**<br><p>Filter for after this creation time. The input for this parameter is a Unix timestamp. To convert a date and time into a Unix timestamp, see <a href="https://www.epochconverter.com/">EpochConverter</a>.</p><br>
    ///   - [`created_before(DateTime)`](crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder::created_before) / [`set_created_before(Option<DateTime>)`](crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder::set_created_before):<br>required: **false**<br><p>Filter for before this creation time. The input for this parameter is a Unix timestamp. To convert a date and time into a Unix timestamp, see <a href="https://www.epochconverter.com/">EpochConverter</a>.</p><br>
    ///   - [`name_contains(impl Into<String>)`](crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder::name_contains) / [`set_name_contains(Option<String>)`](crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder::set_name_contains):<br>required: **false**<br><p>Filter for name containing this string.</p><br>
    ///   - [`cluster_arn(impl Into<String>)`](crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder::cluster_arn) / [`set_cluster_arn(Option<String>)`](crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder::set_cluster_arn):<br>required: **false**<br><p>Filter for ARN of the cluster.</p><br>
    ///   - [`status(SchedulerResourceStatus)`](crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder::status) / [`set_status(Option<SchedulerResourceStatus>)`](crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder::set_status):<br>required: **false**<br><p>Filter for status.</p><br>
    ///   - [`sort_by(SortClusterSchedulerConfigBy)`](crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder::sort_by) / [`set_sort_by(Option<SortClusterSchedulerConfigBy>)`](crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder::set_sort_by):<br>required: **false**<br><p>Filter for sorting the list by a given value. For example, sort by name, creation time, or status.</p><br>
    ///   - [`sort_order(SortOrder)`](crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder::sort_order) / [`set_sort_order(Option<SortOrder>)`](crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder::set_sort_order):<br>required: **false**<br><p>The order of the list. By default, listed in <code>Descending</code> order according to by <code>SortBy</code>. To change the list order, you can specify <code>SortOrder</code> to be <code>Ascending</code>.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder::set_next_token):<br>required: **false**<br><p>If the previous response was truncated, you will receive this token. Use it in your next request to receive the next set of results.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of cluster policies to list.</p><br>
    /// - On success, responds with [`ListClusterSchedulerConfigsOutput`](crate::operation::list_cluster_scheduler_configs::ListClusterSchedulerConfigsOutput) with field(s):
    ///   - [`cluster_scheduler_config_summaries(Option<Vec::<ClusterSchedulerConfigSummary>>)`](crate::operation::list_cluster_scheduler_configs::ListClusterSchedulerConfigsOutput::cluster_scheduler_config_summaries): <p>Summaries of the cluster policies.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_cluster_scheduler_configs::ListClusterSchedulerConfigsOutput::next_token): <p>If the previous response was truncated, you will receive this token. Use it in your next request to receive the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListClusterSchedulerConfigsError>`](crate::operation::list_cluster_scheduler_configs::ListClusterSchedulerConfigsError)
    pub fn list_cluster_scheduler_configs(
        &self,
    ) -> crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder {
        crate::operation::list_cluster_scheduler_configs::builders::ListClusterSchedulerConfigsFluentBuilder::new(self.handle.clone())
    }
}
