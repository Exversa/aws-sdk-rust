// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateComputeQuota`](crate::operation::update_compute_quota::builders::UpdateComputeQuotaFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`compute_quota_id(impl Into<String>)`](crate::operation::update_compute_quota::builders::UpdateComputeQuotaFluentBuilder::compute_quota_id) / [`set_compute_quota_id(Option<String>)`](crate::operation::update_compute_quota::builders::UpdateComputeQuotaFluentBuilder::set_compute_quota_id):<br>required: **true**<br><p>ID of the compute allocation definition.</p><br>
    ///   - [`target_version(i32)`](crate::operation::update_compute_quota::builders::UpdateComputeQuotaFluentBuilder::target_version) / [`set_target_version(Option<i32>)`](crate::operation::update_compute_quota::builders::UpdateComputeQuotaFluentBuilder::set_target_version):<br>required: **true**<br><p>Target version.</p><br>
    ///   - [`compute_quota_config(ComputeQuotaConfig)`](crate::operation::update_compute_quota::builders::UpdateComputeQuotaFluentBuilder::compute_quota_config) / [`set_compute_quota_config(Option<ComputeQuotaConfig>)`](crate::operation::update_compute_quota::builders::UpdateComputeQuotaFluentBuilder::set_compute_quota_config):<br>required: **false**<br><p>Configuration of the compute allocation definition. This includes the resource sharing option, and the setting to preempt low priority tasks.</p><br>
    ///   - [`compute_quota_target(ComputeQuotaTarget)`](crate::operation::update_compute_quota::builders::UpdateComputeQuotaFluentBuilder::compute_quota_target) / [`set_compute_quota_target(Option<ComputeQuotaTarget>)`](crate::operation::update_compute_quota::builders::UpdateComputeQuotaFluentBuilder::set_compute_quota_target):<br>required: **false**<br><p>The target entity to allocate compute resources to.</p><br>
    ///   - [`activation_state(ActivationState)`](crate::operation::update_compute_quota::builders::UpdateComputeQuotaFluentBuilder::activation_state) / [`set_activation_state(Option<ActivationState>)`](crate::operation::update_compute_quota::builders::UpdateComputeQuotaFluentBuilder::set_activation_state):<br>required: **false**<br><p>The state of the compute allocation being described. Use to enable or disable compute allocation.</p> <p>Default is <code>Enabled</code>.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::update_compute_quota::builders::UpdateComputeQuotaFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_compute_quota::builders::UpdateComputeQuotaFluentBuilder::set_description):<br>required: **false**<br><p>Description of the compute allocation definition.</p><br>
    /// - On success, responds with [`UpdateComputeQuotaOutput`](crate::operation::update_compute_quota::UpdateComputeQuotaOutput) with field(s):
    ///   - [`compute_quota_arn(Option<String>)`](crate::operation::update_compute_quota::UpdateComputeQuotaOutput::compute_quota_arn): <p>ARN of the compute allocation definition.</p>
    ///   - [`compute_quota_version(Option<i32>)`](crate::operation::update_compute_quota::UpdateComputeQuotaOutput::compute_quota_version): <p>Version of the compute allocation definition.</p>
    /// - On failure, responds with [`SdkError<UpdateComputeQuotaError>`](crate::operation::update_compute_quota::UpdateComputeQuotaError)
    pub fn update_compute_quota(&self) -> crate::operation::update_compute_quota::builders::UpdateComputeQuotaFluentBuilder {
        crate::operation::update_compute_quota::builders::UpdateComputeQuotaFluentBuilder::new(self.handle.clone())
    }
}
