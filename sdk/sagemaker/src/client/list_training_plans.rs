// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListTrainingPlans`](crate::operation::list_training_plans::builders::ListTrainingPlansFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_training_plans::builders::ListTrainingPlansFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_training_plans::builders::ListTrainingPlansFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_training_plans::builders::ListTrainingPlansFluentBuilder::set_next_token):<br>required: **false**<br><p>A token to continue pagination if more results are available.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_training_plans::builders::ListTrainingPlansFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_training_plans::builders::ListTrainingPlansFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return in the response.</p><br>
    ///   - [`start_time_after(DateTime)`](crate::operation::list_training_plans::builders::ListTrainingPlansFluentBuilder::start_time_after) / [`set_start_time_after(Option<DateTime>)`](crate::operation::list_training_plans::builders::ListTrainingPlansFluentBuilder::set_start_time_after):<br>required: **false**<br><p>Filter to list only training plans with an actual start time after this date.</p><br>
    ///   - [`start_time_before(DateTime)`](crate::operation::list_training_plans::builders::ListTrainingPlansFluentBuilder::start_time_before) / [`set_start_time_before(Option<DateTime>)`](crate::operation::list_training_plans::builders::ListTrainingPlansFluentBuilder::set_start_time_before):<br>required: **false**<br><p>Filter to list only training plans with an actual start time before this date.</p><br>
    ///   - [`sort_by(TrainingPlanSortBy)`](crate::operation::list_training_plans::builders::ListTrainingPlansFluentBuilder::sort_by) / [`set_sort_by(Option<TrainingPlanSortBy>)`](crate::operation::list_training_plans::builders::ListTrainingPlansFluentBuilder::set_sort_by):<br>required: **false**<br><p>The training plan field to sort the results by (e.g., StartTime, Status).</p><br>
    ///   - [`sort_order(TrainingPlanSortOrder)`](crate::operation::list_training_plans::builders::ListTrainingPlansFluentBuilder::sort_order) / [`set_sort_order(Option<TrainingPlanSortOrder>)`](crate::operation::list_training_plans::builders::ListTrainingPlansFluentBuilder::set_sort_order):<br>required: **false**<br><p>The order to sort the results (Ascending or Descending).</p><br>
    ///   - [`filters(TrainingPlanFilter)`](crate::operation::list_training_plans::builders::ListTrainingPlansFluentBuilder::filters) / [`set_filters(Option<Vec::<TrainingPlanFilter>>)`](crate::operation::list_training_plans::builders::ListTrainingPlansFluentBuilder::set_filters):<br>required: **false**<br><p>Additional filters to apply to the list of training plans.</p><br>
    /// - On success, responds with [`ListTrainingPlansOutput`](crate::operation::list_training_plans::ListTrainingPlansOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::operation::list_training_plans::ListTrainingPlansOutput::next_token): <p>A token to continue pagination if more results are available.</p>
    ///   - [`training_plan_summaries(Option<Vec::<TrainingPlanSummary>>)`](crate::operation::list_training_plans::ListTrainingPlansOutput::training_plan_summaries): <p>A list of summary information for the training plans.</p>
    /// - On failure, responds with [`SdkError<ListTrainingPlansError>`](crate::operation::list_training_plans::ListTrainingPlansError)
    pub fn list_training_plans(&self) -> crate::operation::list_training_plans::builders::ListTrainingPlansFluentBuilder {
        crate::operation::list_training_plans::builders::ListTrainingPlansFluentBuilder::new(self.handle.clone())
    }
}
