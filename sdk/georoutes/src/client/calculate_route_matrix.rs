// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CalculateRouteMatrix`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`allow(RouteMatrixAllowOptions)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::allow) / [`set_allow(Option<RouteMatrixAllowOptions>)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::set_allow):<br>required: **false**<br><p>Features that are allowed while calculating a route.</p><br>
    ///   - [`avoid(RouteMatrixAvoidanceOptions)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::avoid) / [`set_avoid(Option<RouteMatrixAvoidanceOptions>)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::set_avoid):<br>required: **false**<br><p>Features that are avoided while calculating a route. Avoidance is on a best-case basis. If an avoidance can't be satisfied for a particular case, it violates the avoidance and the returned response produces a notice for the violation.</p><br>
    ///   - [`depart_now(bool)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::depart_now) / [`set_depart_now(Option<bool>)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::set_depart_now):<br>required: **false**<br><p>Uses the current time as the time of departure.</p><br>
    ///   - [`departure_time(impl Into<String>)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::departure_time) / [`set_departure_time(Option<String>)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::set_departure_time):<br>required: **false**<br><p>Time of departure from thr origin.</p> <p>Time format:<code>YYYY-MM-DDThh:mm:ss.sssZ | YYYY-MM-DDThh:mm:ss.sss+hh:mm</code></p> <p>Examples:</p> <p><code>2020-04-22T17:57:24Z</code></p> <p><code>2020-04-22T17:57:24+02:00</code></p><br>
    ///   - [`destinations(RouteMatrixDestination)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::destinations) / [`set_destinations(Option<Vec::<RouteMatrixDestination>>)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::set_destinations):<br>required: **true**<br><p>List of destinations for the route.</p><note>  <p>Route calculations are billed for each origin and destination pair. If you use a large matrix of origins and destinations, your costs will increase accordingly. See <a href="https://docs.aws.amazon.com/location/latest/developerguide/routes-pricing.html`"> Amazon Location's pricing page</a> for more information.</p> </note><br>
    ///   - [`exclude(RouteMatrixExclusionOptions)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::exclude) / [`set_exclude(Option<RouteMatrixExclusionOptions>)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::set_exclude):<br>required: **false**<br><p>Features to be strictly excluded while calculating the route.</p><br>
    ///   - [`key(impl Into<String>)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::key) / [`set_key(Option<String>)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::set_key):<br>required: **false**<br><p>Optional: The API key to be used for authorization. Either an API key or valid SigV4 signature must be provided when making a request.</p><br>
    ///   - [`optimize_routing_for(RoutingObjective)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::optimize_routing_for) / [`set_optimize_routing_for(Option<RoutingObjective>)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::set_optimize_routing_for):<br>required: **false**<br><p>Specifies the optimization criteria for calculating a route.</p> <p>Default Value: <code>FastestRoute</code></p><br>
    ///   - [`origins(RouteMatrixOrigin)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::origins) / [`set_origins(Option<Vec::<RouteMatrixOrigin>>)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::set_origins):<br>required: **true**<br><p>The position in longitude and latitude for the origin.</p><note>  <p>Route calculations are billed for each origin and destination pair. Using a large amount of Origins in a request can lead you to incur unexpected charges. See <a href="https://docs.aws.amazon.com/location/latest/developerguide/routes-pricing.html`"> Amazon Location's pricing page</a> for more information.</p> </note><br>
    ///   - [`routing_boundary(RouteMatrixBoundary)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::routing_boundary) / [`set_routing_boundary(Option<RouteMatrixBoundary>)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::set_routing_boundary):<br>required: **true**<br><p>Boundary within which the matrix is to be calculated. All data, origins and destinations outside the boundary are considered invalid.</p><note>  <p>When request routing boundary was set as AutoCircle, the response routing boundary will return Circle derived from the AutoCircle settings.</p> </note><br>
    ///   - [`traffic(RouteMatrixTrafficOptions)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::traffic) / [`set_traffic(Option<RouteMatrixTrafficOptions>)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::set_traffic):<br>required: **false**<br><p>Traffic related options.</p><br>
    ///   - [`travel_mode(RouteMatrixTravelMode)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::travel_mode) / [`set_travel_mode(Option<RouteMatrixTravelMode>)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::set_travel_mode):<br>required: **false**<br><p>Specifies the mode of transport when calculating a route. Used in estimating the speed of travel and road compatibility.</p> <p>Default Value: <code>Car</code></p><br>
    ///   - [`travel_mode_options(RouteMatrixTravelModeOptions)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::travel_mode_options) / [`set_travel_mode_options(Option<RouteMatrixTravelModeOptions>)`](crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::set_travel_mode_options):<br>required: **false**<br><p>Travel mode related options for the provided travel mode.</p><br>
    /// - On success, responds with [`CalculateRouteMatrixOutput`](crate::operation::calculate_route_matrix::CalculateRouteMatrixOutput) with field(s):
    ///   - [`error_count(i32)`](crate::operation::calculate_route_matrix::CalculateRouteMatrixOutput::error_count): <p>The count of error results in the route matrix. If this number is 0, all routes were calculated successfully.</p>
    ///   - [`pricing_bucket(String)`](crate::operation::calculate_route_matrix::CalculateRouteMatrixOutput::pricing_bucket): <p>The pricing bucket for which the query is charged at.</p>
    ///   - [`route_matrix(Vec::<Vec::<RouteMatrixEntry>>)`](crate::operation::calculate_route_matrix::CalculateRouteMatrixOutput::route_matrix): <p>The calculated route matrix containing the results for all pairs of Origins to Destination positions. Each row corresponds to one entry in Origins. Each entry in the row corresponds to the route from that entry in Origins to an entry in Destination positions.</p>
    ///   - [`routing_boundary(Option<RouteMatrixBoundary>)`](crate::operation::calculate_route_matrix::CalculateRouteMatrixOutput::routing_boundary): <p>Boundary within which the matrix is to be calculated. All data, origins and destinations outside the boundary are considered invalid.</p><note>  <p>When request routing boundary was set as AutoCircle, the response routing boundary will return Circle derived from the AutoCircle settings.</p> </note>
    /// - On failure, responds with [`SdkError<CalculateRouteMatrixError>`](crate::operation::calculate_route_matrix::CalculateRouteMatrixError)
    pub fn calculate_route_matrix(&self) -> crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder {
        crate::operation::calculate_route_matrix::builders::CalculateRouteMatrixFluentBuilder::new(self.handle.clone())
    }
}
