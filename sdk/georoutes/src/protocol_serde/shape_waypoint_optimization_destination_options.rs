// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_waypoint_optimization_destination_options(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::WaypointOptimizationDestinationOptions,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.access_hours {
        #[allow(unused_mut)]
        let mut object_2 = object.key("AccessHours").start_object();
        crate::protocol_serde::shape_waypoint_optimization_access_hours::ser_waypoint_optimization_access_hours(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.appointment_time {
        object.key("AppointmentTime").string(var_3.as_str());
    }
    if input.heading != 0.0 {
        object.key("Heading").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::Float((input.heading).into()),
        );
    }
    if let Some(var_4) = &input.id {
        object.key("Id").string(var_4.as_str());
    }
    if input.service_duration != 0 {
        object.key("ServiceDuration").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((input.service_duration).into()),
        );
    }
    if let Some(var_5) = &input.side_of_street {
        #[allow(unused_mut)]
        let mut object_6 = object.key("SideOfStreet").start_object();
        crate::protocol_serde::shape_waypoint_optimization_side_of_street_options::ser_waypoint_optimization_side_of_street_options(
            &mut object_6,
            var_5,
        )?;
        object_6.finish();
    }
    Ok(())
}
