// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_snap_to_roads_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::snap_to_roads::SnapToRoadsInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.snap_radius {
        object.key("SnapRadius").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_1).into()),
        );
    }
    if let Some(var_2) = &input.snapped_geometry_format {
        object.key("SnappedGeometryFormat").string(var_2.as_str());
    }
    if let Some(var_3) = &input.trace_points {
        let mut array_4 = object.key("TracePoints").start_array();
        for item_5 in var_3 {
            {
                #[allow(unused_mut)]
                let mut object_6 = array_4.value().start_object();
                crate::protocol_serde::shape_road_snap_trace_point::ser_road_snap_trace_point(&mut object_6, item_5)?;
                object_6.finish();
            }
        }
        array_4.finish();
    }
    if let Some(var_7) = &input.travel_mode {
        object.key("TravelMode").string(var_7.as_str());
    }
    if let Some(var_8) = &input.travel_mode_options {
        #[allow(unused_mut)]
        let mut object_9 = object.key("TravelModeOptions").start_object();
        crate::protocol_serde::shape_road_snap_travel_mode_options::ser_road_snap_travel_mode_options(&mut object_9, var_8)?;
        object_9.finish();
    }
    Ok(())
}
