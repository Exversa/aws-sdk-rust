// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetPredictiveScalingForecast`](crate::operation::get_predictive_scaling_forecast::builders::GetPredictiveScalingForecastFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_namespace(ServiceNamespace)`](crate::operation::get_predictive_scaling_forecast::builders::GetPredictiveScalingForecastFluentBuilder::service_namespace) / [`set_service_namespace(Option<ServiceNamespace>)`](crate::operation::get_predictive_scaling_forecast::builders::GetPredictiveScalingForecastFluentBuilder::set_service_namespace):<br>required: **true**<br><p>The namespace of the Amazon Web Services service that provides the resource. For a resource provided by your own application or service, use <code>custom-resource</code> instead.</p><br>
    ///   - [`resource_id(impl Into<String>)`](crate::operation::get_predictive_scaling_forecast::builders::GetPredictiveScalingForecastFluentBuilder::resource_id) / [`set_resource_id(Option<String>)`](crate::operation::get_predictive_scaling_forecast::builders::GetPredictiveScalingForecastFluentBuilder::set_resource_id):<br>required: **true**<br><p>The identifier of the resource.</p><br>
    ///   - [`scalable_dimension(ScalableDimension)`](crate::operation::get_predictive_scaling_forecast::builders::GetPredictiveScalingForecastFluentBuilder::scalable_dimension) / [`set_scalable_dimension(Option<ScalableDimension>)`](crate::operation::get_predictive_scaling_forecast::builders::GetPredictiveScalingForecastFluentBuilder::set_scalable_dimension):<br>required: **true**<br><p>The scalable dimension.</p><br>
    ///   - [`policy_name(impl Into<String>)`](crate::operation::get_predictive_scaling_forecast::builders::GetPredictiveScalingForecastFluentBuilder::policy_name) / [`set_policy_name(Option<String>)`](crate::operation::get_predictive_scaling_forecast::builders::GetPredictiveScalingForecastFluentBuilder::set_policy_name):<br>required: **true**<br><p>The name of the policy.</p><br>
    ///   - [`start_time(DateTime)`](crate::operation::get_predictive_scaling_forecast::builders::GetPredictiveScalingForecastFluentBuilder::start_time) / [`set_start_time(Option<DateTime>)`](crate::operation::get_predictive_scaling_forecast::builders::GetPredictiveScalingForecastFluentBuilder::set_start_time):<br>required: **true**<br><p>The inclusive start time of the time range for the forecast data to get. At most, the date and time can be one year before the current date and time</p><br>
    ///   - [`end_time(DateTime)`](crate::operation::get_predictive_scaling_forecast::builders::GetPredictiveScalingForecastFluentBuilder::end_time) / [`set_end_time(Option<DateTime>)`](crate::operation::get_predictive_scaling_forecast::builders::GetPredictiveScalingForecastFluentBuilder::set_end_time):<br>required: **true**<br><p>The exclusive end time of the time range for the forecast data to get. The maximum time duration between the start and end time is 30 days.</p><br>
    /// - On success, responds with [`GetPredictiveScalingForecastOutput`](crate::operation::get_predictive_scaling_forecast::GetPredictiveScalingForecastOutput) with field(s):
    ///   - [`load_forecast(Option<Vec::<LoadForecast>>)`](crate::operation::get_predictive_scaling_forecast::GetPredictiveScalingForecastOutput::load_forecast): <p>The load forecast.</p>
    ///   - [`capacity_forecast(Option<CapacityForecast>)`](crate::operation::get_predictive_scaling_forecast::GetPredictiveScalingForecastOutput::capacity_forecast): <p>The capacity forecast.</p>
    ///   - [`update_time(Option<DateTime>)`](crate::operation::get_predictive_scaling_forecast::GetPredictiveScalingForecastOutput::update_time): <p>The time the forecast was made.</p>
    /// - On failure, responds with [`SdkError<GetPredictiveScalingForecastError>`](crate::operation::get_predictive_scaling_forecast::GetPredictiveScalingForecastError)
    pub fn get_predictive_scaling_forecast(
        &self,
    ) -> crate::operation::get_predictive_scaling_forecast::builders::GetPredictiveScalingForecastFluentBuilder {
        crate::operation::get_predictive_scaling_forecast::builders::GetPredictiveScalingForecastFluentBuilder::new(self.handle.clone())
    }
}
