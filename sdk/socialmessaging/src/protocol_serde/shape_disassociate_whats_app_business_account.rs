// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::unnecessary_wraps)]
pub fn de_disassociate_whats_app_business_account_http_error(
    _response_status: u16,
    _response_headers: &::aws_smithy_runtime_api::http::Headers,
    _response_body: &[u8],
) -> std::result::Result<
    crate::operation::disassociate_whats_app_business_account::DisassociateWhatsAppBusinessAccountOutput,
    crate::operation::disassociate_whats_app_business_account::DisassociateWhatsAppBusinessAccountError,
> {
    #[allow(unused_mut)]
    let mut generic_builder = crate::protocol_serde::parse_http_error_metadata(_response_status, _response_headers, _response_body)
        .map_err(crate::operation::disassociate_whats_app_business_account::DisassociateWhatsAppBusinessAccountError::unhandled)?;
    generic_builder = ::aws_types::request_id::apply_request_id(generic_builder, _response_headers);
    let generic = generic_builder.build();
    let error_code = match generic.code() {
        Some(code) => code,
        None => return Err(crate::operation::disassociate_whats_app_business_account::DisassociateWhatsAppBusinessAccountError::unhandled(generic)),
    };

    let _error_message = generic.message().map(|msg| msg.to_owned());
    Err(match error_code {
        "DependencyException" => {
            crate::operation::disassociate_whats_app_business_account::DisassociateWhatsAppBusinessAccountError::DependencyException({
                #[allow(unused_mut)]
                let mut tmp = {
                    #[allow(unused_mut)]
                    let mut output = crate::types::error::builders::DependencyExceptionBuilder::default();
                    output = crate::protocol_serde::shape_dependency_exception::de_dependency_exception_json_err(_response_body, output)
                        .map_err(crate::operation::disassociate_whats_app_business_account::DisassociateWhatsAppBusinessAccountError::unhandled)?;
                    let output = output.meta(generic);
                    output.build()
                };
                if tmp.message.is_none() {
                    tmp.message = _error_message;
                }
                tmp
            })
        }
        "InvalidParametersException" => {
            crate::operation::disassociate_whats_app_business_account::DisassociateWhatsAppBusinessAccountError::InvalidParametersException({
                #[allow(unused_mut)]
                let mut tmp = {
                    #[allow(unused_mut)]
                    let mut output = crate::types::error::builders::InvalidParametersExceptionBuilder::default();
                    output =
                        crate::protocol_serde::shape_invalid_parameters_exception::de_invalid_parameters_exception_json_err(_response_body, output)
                            .map_err(crate::operation::disassociate_whats_app_business_account::DisassociateWhatsAppBusinessAccountError::unhandled)?;
                    let output = output.meta(generic);
                    output.build()
                };
                if tmp.message.is_none() {
                    tmp.message = _error_message;
                }
                tmp
            })
        }
        "ResourceNotFoundException" => {
            crate::operation::disassociate_whats_app_business_account::DisassociateWhatsAppBusinessAccountError::ResourceNotFoundException({
                #[allow(unused_mut)]
                let mut tmp = {
                    #[allow(unused_mut)]
                    let mut output = crate::types::error::builders::ResourceNotFoundExceptionBuilder::default();
                    output =
                        crate::protocol_serde::shape_resource_not_found_exception::de_resource_not_found_exception_json_err(_response_body, output)
                            .map_err(crate::operation::disassociate_whats_app_business_account::DisassociateWhatsAppBusinessAccountError::unhandled)?;
                    let output = output.meta(generic);
                    output.build()
                };
                if tmp.message.is_none() {
                    tmp.message = _error_message;
                }
                tmp
            })
        }
        "ThrottledRequestException" => {
            crate::operation::disassociate_whats_app_business_account::DisassociateWhatsAppBusinessAccountError::ThrottledRequestException({
                #[allow(unused_mut)]
                let mut tmp = {
                    #[allow(unused_mut)]
                    let mut output = crate::types::error::builders::ThrottledRequestExceptionBuilder::default();
                    output =
                        crate::protocol_serde::shape_throttled_request_exception::de_throttled_request_exception_json_err(_response_body, output)
                            .map_err(
                                crate::operation::disassociate_whats_app_business_account::DisassociateWhatsAppBusinessAccountError::unhandled,
                            )?;
                    let output = output.meta(generic);
                    output.build()
                };
                if tmp.message.is_none() {
                    tmp.message = _error_message;
                }
                tmp
            })
        }
        "AccessDeniedException" => {
            crate::operation::disassociate_whats_app_business_account::DisassociateWhatsAppBusinessAccountError::AccessDeniedException({
                #[allow(unused_mut)]
                let mut tmp = {
                    #[allow(unused_mut)]
                    let mut output = crate::types::error::builders::AccessDeniedExceptionBuilder::default();
                    output = crate::protocol_serde::shape_access_denied_exception::de_access_denied_exception_json_err(_response_body, output)
                        .map_err(crate::operation::disassociate_whats_app_business_account::DisassociateWhatsAppBusinessAccountError::unhandled)?;
                    let output = output.meta(generic);
                    output.build()
                };
                if tmp.message.is_none() {
                    tmp.message = _error_message;
                }
                tmp
            })
        }
        "ValidationException" => {
            crate::operation::disassociate_whats_app_business_account::DisassociateWhatsAppBusinessAccountError::ValidationException({
                #[allow(unused_mut)]
                let mut tmp = {
                    #[allow(unused_mut)]
                    let mut output = crate::types::error::builders::ValidationExceptionBuilder::default();
                    output = crate::protocol_serde::shape_validation_exception::de_validation_exception_json_err(_response_body, output)
                        .map_err(crate::operation::disassociate_whats_app_business_account::DisassociateWhatsAppBusinessAccountError::unhandled)?;
                    let output = output.meta(generic);
                    output.build()
                };
                if tmp.message.is_none() {
                    tmp.message = _error_message;
                }
                tmp
            })
        }
        _ => crate::operation::disassociate_whats_app_business_account::DisassociateWhatsAppBusinessAccountError::generic(generic),
    })
}

#[allow(clippy::unnecessary_wraps)]
pub fn de_disassociate_whats_app_business_account_http_response(
    _response_status: u16,
    _response_headers: &::aws_smithy_runtime_api::http::Headers,
    _response_body: &[u8],
) -> std::result::Result<
    crate::operation::disassociate_whats_app_business_account::DisassociateWhatsAppBusinessAccountOutput,
    crate::operation::disassociate_whats_app_business_account::DisassociateWhatsAppBusinessAccountError,
> {
    Ok({
        #[allow(unused_mut)]
        let mut output =
            crate::operation::disassociate_whats_app_business_account::builders::DisassociateWhatsAppBusinessAccountOutputBuilder::default();
        output._set_request_id(::aws_types::request_id::RequestId::request_id(_response_headers).map(str::to_string));
        output.build()
    })
}
