// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateRoutingRule`](crate::operation::create_routing_rule::builders::CreateRoutingRuleFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`actions(RoutingRuleAction)`](crate::operation::create_routing_rule::builders::CreateRoutingRuleFluentBuilder::actions) / [`set_actions(Option<Vec::<RoutingRuleAction>>)`](crate::operation::create_routing_rule::builders::CreateRoutingRuleFluentBuilder::set_actions):<br>required: **true**<br><p>Represents a routing rule action. The only supported action is invokeApi.</p><br>
    ///   - [`conditions(RoutingRuleCondition)`](crate::operation::create_routing_rule::builders::CreateRoutingRuleFluentBuilder::conditions) / [`set_conditions(Option<Vec::<RoutingRuleCondition>>)`](crate::operation::create_routing_rule::builders::CreateRoutingRuleFluentBuilder::set_conditions):<br>required: **true**<br><p>Represents a condition. Conditions can contain up to two matchHeaders conditions and one matchBasePaths conditions. API Gateway evaluates header conditions and base path conditions together. You can only use AND between header and base path conditions.</p><br>
    ///   - [`domain_name(impl Into<String>)`](crate::operation::create_routing_rule::builders::CreateRoutingRuleFluentBuilder::domain_name) / [`set_domain_name(Option<String>)`](crate::operation::create_routing_rule::builders::CreateRoutingRuleFluentBuilder::set_domain_name):<br>required: **true**<br><p>The domain name.</p><br>
    ///   - [`domain_name_id(impl Into<String>)`](crate::operation::create_routing_rule::builders::CreateRoutingRuleFluentBuilder::domain_name_id) / [`set_domain_name_id(Option<String>)`](crate::operation::create_routing_rule::builders::CreateRoutingRuleFluentBuilder::set_domain_name_id):<br>required: **false**<br><p>The domain name ID.</p><br>
    ///   - [`priority(i32)`](crate::operation::create_routing_rule::builders::CreateRoutingRuleFluentBuilder::priority) / [`set_priority(Option<i32>)`](crate::operation::create_routing_rule::builders::CreateRoutingRuleFluentBuilder::set_priority):<br>required: **true**<br>Represents the priority of the routing rule.<br>
    /// - On success, responds with [`CreateRoutingRuleOutput`](crate::operation::create_routing_rule::CreateRoutingRuleOutput) with field(s):
    ///   - [`actions(Option<Vec::<RoutingRuleAction>>)`](crate::operation::create_routing_rule::CreateRoutingRuleOutput::actions): <p>Represents a routing rule action. The only supported action is invokeApi.</p>
    ///   - [`conditions(Option<Vec::<RoutingRuleCondition>>)`](crate::operation::create_routing_rule::CreateRoutingRuleOutput::conditions): <p>Represents a condition. Conditions can contain up to two matchHeaders conditions and one matchBasePaths conditions. API Gateway evaluates header conditions and base path conditions together. You can only use AND between header and base path conditions.</p>
    ///   - [`priority(Option<i32>)`](crate::operation::create_routing_rule::CreateRoutingRuleOutput::priority): <p>Represents the priority of the routing rule.</p> <p></p>
    ///   - [`routing_rule_arn(Option<String>)`](crate::operation::create_routing_rule::CreateRoutingRuleOutput::routing_rule_arn): <p>The ARN of the domain name.</p> <p></p>
    ///   - [`routing_rule_id(Option<String>)`](crate::operation::create_routing_rule::CreateRoutingRuleOutput::routing_rule_id): <p>The routing rule ID.</p>
    /// - On failure, responds with [`SdkError<CreateRoutingRuleError>`](crate::operation::create_routing_rule::CreateRoutingRuleError)
    pub fn create_routing_rule(&self) -> crate::operation::create_routing_rule::builders::CreateRoutingRuleFluentBuilder {
        crate::operation::create_routing_rule::builders::CreateRoutingRuleFluentBuilder::new(self.handle.clone())
    }
}
