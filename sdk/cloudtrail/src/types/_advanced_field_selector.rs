// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A single selector statement in an advanced event selector.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AdvancedFieldSelector {
    /// <p>A field in a CloudTrail event record on which to filter events to be logged. For event data stores for CloudTrail Insights events, Config configuration items, Audit Manager evidence, or events outside of Amazon Web Services, the field is used only for selecting events as filtering is not supported.</p>
    /// <p>For CloudTrail management events, supported fields include <code>eventCategory</code> (required), <code>eventSource</code>, and <code>readOnly</code>. The following additional fields are available for event data stores: <code>eventName</code>, <code>eventType</code>, <code>sessionCredentialFromConsole</code>, and <code>userIdentity.arn</code>.</p>
    /// <p>For CloudTrail data events, supported fields include <code>eventCategory</code> (required), <code>resources.type</code> (required), <code>eventName</code>, <code>readOnly</code>, and <code>resources.ARN</code>. The following additional fields are available for event data stores: <code>eventSource</code>, <code>eventType</code>, <code>sessionCredentialFromConsole</code>, and <code>userIdentity.arn</code>.</p>
    /// <p>For CloudTrail network activity events, supported fields include <code>eventCategory</code> (required), <code>eventSource</code> (required), <code>eventName</code>, <code>errorCode</code>, and <code>vpcEndpointId</code>.</p>
    /// <p>For event data stores for CloudTrail Insights events, Config configuration items, Audit Manager evidence, or events outside of Amazon Web Services, the only supported field is <code>eventCategory</code>.</p>
    /// <ul>
    /// <li>
    /// <p><b> <code>readOnly</code> </b> - This is an optional field that is only used for management events and data events. This field can be set to <code>Equals</code> with a value of <code>true</code> or <code>false</code>. If you do not add this field, CloudTrail logs both <code>read</code> and <code>write</code> events. A value of <code>true</code> logs only <code>read</code> events. A value of <code>false</code> logs only <code>write</code> events.</p></li>
    /// <li>
    /// <p><b> <code>eventSource</code> </b> - This field is only used for management events, data events (for event data stores only), and network activity events.</p>
    /// <p>For management events for trails, this is an optional field that can be set to <code>NotEquals</code> <code>kms.amazonaws.com</code> to exclude KMS management events, or <code>NotEquals</code> <code>rdsdata.amazonaws.com</code> to exclude RDS management events.</p>
    /// <p>For management and data events for event data stores, you can use it to include or exclude any event source and can use any operator.</p>
    /// <p>For network activity events, this is a required field that only uses the <code>Equals</code> operator. Set this field to the event source for which you want to log network activity events. If you want to log network activity events for multiple event sources, you must create a separate field selector for each event source.</p>
    /// <p>The following are valid values for network activity events:</p>
    /// <ul>
    /// <li>
    /// <p><code>cloudtrail.amazonaws.com</code></p></li>
    /// <li>
    /// <p><code>ec2.amazonaws.com</code></p></li>
    /// <li>
    /// <p><code>kms.amazonaws.com</code></p></li>
    /// <li>
    /// <p><code>secretsmanager.amazonaws.com</code></p></li>
    /// </ul></li>
    /// <li>
    /// <p><b> <code>eventName</code> </b> - This is an optional field that is only used for data events, management events (for event data stores only), and network activity events. You can use any operator with <code>eventName</code>. You can use it to ﬁlter in or ﬁlter out specific events. You can have multiple values for this ﬁeld, separated by commas.</p></li>
    /// <li>
    /// <p><b> <code>eventCategory</code> </b> - This field is required and must be set to <code>Equals</code>.</p>
    /// <ul>
    /// <li>
    /// <p>For CloudTrail management events, the value must be <code>Management</code>.</p></li>
    /// <li>
    /// <p>For CloudTrail data events, the value must be <code>Data</code>.</p></li>
    /// <li>
    /// <p>For CloudTrail network activity events, the value must be <code>NetworkActivity</code>.</p></li>
    /// </ul>
    /// <p>The following are used only for event data stores:</p>
    /// <ul>
    /// <li>
    /// <p>For CloudTrail Insights events, the value must be <code>Insight</code>.</p></li>
    /// <li>
    /// <p>For Config configuration items, the value must be <code>ConfigurationItem</code>.</p></li>
    /// <li>
    /// <p>For Audit Manager evidence, the value must be <code>Evidence</code>.</p></li>
    /// <li>
    /// <p>For events outside of Amazon Web Services, the value must be <code>ActivityAuditLog</code>.</p></li>
    /// </ul></li>
    /// <li>
    /// <p><b> <code>eventType</code> </b> - This is an optional field available only for event data stores, which is used to filter management and data events on the event type. For information about available event types, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-event-reference-record-contents.html#ct-event-type">CloudTrail record contents</a> in the <i>CloudTrail user guide</i>.</p></li>
    /// <li>
    /// <p><b> <code>errorCode</code> </b> - This ﬁeld is only used to filter CloudTrail network activity events and is optional. This is the error code to filter on. Currently, the only valid <code>errorCode</code> is <code>VpceAccessDenied</code>. <code>errorCode</code> can only use the <code>Equals</code> operator.</p></li>
    /// <li>
    /// <p><b> <code>sessionCredentialFromConsole</code> </b> - This is an optional field available only for event data stores, which is used to filter management and data events based on whether the events originated from an Amazon Web Services Management Console session. <code>sessionCredentialFromConsole</code> can only use the <code>Equals</code> and <code>NotEquals</code> operators.</p></li>
    /// <li>
    /// <p><b> <code>resources.type</code> </b> - This ﬁeld is required for CloudTrail data events. <code>resources.type</code> can only use the <code>Equals</code> operator.</p>
    /// <p>For a list of available resource types for data events, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#logging-data-events">Data events</a> in the <i>CloudTrail User Guide</i>.</p>
    /// <p>You can have only one <code>resources.type</code> ﬁeld per selector. To log events on more than one resource type, add another selector.</p></li>
    /// <li>
    /// <p><b> <code>resources.ARN</code> </b> - The <code>resources.ARN</code> is an optional field for data events. You can use any operator with <code>resources.ARN</code>, but if you use <code>Equals</code> or <code>NotEquals</code>, the value must exactly match the ARN of a valid resource of the type you've speciﬁed in the template as the value of resources.type. To log all data events for all objects in a specific S3 bucket, use the <code>StartsWith</code> operator, and include only the bucket ARN as the matching value.</p>
    /// <p>For information about filtering data events on the <code>resources.ARN</code> field, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/filtering-data-events.html#filtering-data-events-resourcearn">Filtering data events by resources.ARN</a> in the <i>CloudTrail User Guide</i>.</p><note>
    /// <p>You can't use the <code>resources.ARN</code> field to filter resource types that do not have ARNs.</p>
    /// </note></li>
    /// <li>
    /// <p><b> <code>userIdentity.arn</code> </b> - This is an optional field available only for event data stores, which is used to filter management and data events on the userIdentity ARN. You can use any operator with <code>userIdentity.arn</code>. For more information on the userIdentity element, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-event-reference-user-identity.html">CloudTrail userIdentity element</a> in the <i>CloudTrail User Guide</i>.</p></li>
    /// <li>
    /// <p><b> <code>vpcEndpointId</code> </b> - This ﬁeld is only used to filter CloudTrail network activity events and is optional. This field identifies the VPC endpoint that the request passed through. You can use any operator with <code>vpcEndpointId</code>.</p></li>
    /// </ul>
    pub field: ::std::string::String,
    /// <p>An operator that includes events that match the exact value of the event record field specified as the value of <code>Field</code>. This is the only valid operator that you can use with the <code>readOnly</code>, <code>eventCategory</code>, and <code>resources.type</code> fields.</p>
    pub equals: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>An operator that includes events that match the first few characters of the event record field specified as the value of <code>Field</code>.</p>
    pub starts_with: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>An operator that includes events that match the last few characters of the event record field specified as the value of <code>Field</code>.</p>
    pub ends_with: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>An operator that excludes events that match the exact value of the event record field specified as the value of <code>Field</code>.</p>
    pub not_equals: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>An operator that excludes events that match the first few characters of the event record field specified as the value of <code>Field</code>.</p>
    pub not_starts_with: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>An operator that excludes events that match the last few characters of the event record field specified as the value of <code>Field</code>.</p>
    pub not_ends_with: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl AdvancedFieldSelector {
    /// <p>A field in a CloudTrail event record on which to filter events to be logged. For event data stores for CloudTrail Insights events, Config configuration items, Audit Manager evidence, or events outside of Amazon Web Services, the field is used only for selecting events as filtering is not supported.</p>
    /// <p>For CloudTrail management events, supported fields include <code>eventCategory</code> (required), <code>eventSource</code>, and <code>readOnly</code>. The following additional fields are available for event data stores: <code>eventName</code>, <code>eventType</code>, <code>sessionCredentialFromConsole</code>, and <code>userIdentity.arn</code>.</p>
    /// <p>For CloudTrail data events, supported fields include <code>eventCategory</code> (required), <code>resources.type</code> (required), <code>eventName</code>, <code>readOnly</code>, and <code>resources.ARN</code>. The following additional fields are available for event data stores: <code>eventSource</code>, <code>eventType</code>, <code>sessionCredentialFromConsole</code>, and <code>userIdentity.arn</code>.</p>
    /// <p>For CloudTrail network activity events, supported fields include <code>eventCategory</code> (required), <code>eventSource</code> (required), <code>eventName</code>, <code>errorCode</code>, and <code>vpcEndpointId</code>.</p>
    /// <p>For event data stores for CloudTrail Insights events, Config configuration items, Audit Manager evidence, or events outside of Amazon Web Services, the only supported field is <code>eventCategory</code>.</p>
    /// <ul>
    /// <li>
    /// <p><b> <code>readOnly</code> </b> - This is an optional field that is only used for management events and data events. This field can be set to <code>Equals</code> with a value of <code>true</code> or <code>false</code>. If you do not add this field, CloudTrail logs both <code>read</code> and <code>write</code> events. A value of <code>true</code> logs only <code>read</code> events. A value of <code>false</code> logs only <code>write</code> events.</p></li>
    /// <li>
    /// <p><b> <code>eventSource</code> </b> - This field is only used for management events, data events (for event data stores only), and network activity events.</p>
    /// <p>For management events for trails, this is an optional field that can be set to <code>NotEquals</code> <code>kms.amazonaws.com</code> to exclude KMS management events, or <code>NotEquals</code> <code>rdsdata.amazonaws.com</code> to exclude RDS management events.</p>
    /// <p>For management and data events for event data stores, you can use it to include or exclude any event source and can use any operator.</p>
    /// <p>For network activity events, this is a required field that only uses the <code>Equals</code> operator. Set this field to the event source for which you want to log network activity events. If you want to log network activity events for multiple event sources, you must create a separate field selector for each event source.</p>
    /// <p>The following are valid values for network activity events:</p>
    /// <ul>
    /// <li>
    /// <p><code>cloudtrail.amazonaws.com</code></p></li>
    /// <li>
    /// <p><code>ec2.amazonaws.com</code></p></li>
    /// <li>
    /// <p><code>kms.amazonaws.com</code></p></li>
    /// <li>
    /// <p><code>secretsmanager.amazonaws.com</code></p></li>
    /// </ul></li>
    /// <li>
    /// <p><b> <code>eventName</code> </b> - This is an optional field that is only used for data events, management events (for event data stores only), and network activity events. You can use any operator with <code>eventName</code>. You can use it to ﬁlter in or ﬁlter out specific events. You can have multiple values for this ﬁeld, separated by commas.</p></li>
    /// <li>
    /// <p><b> <code>eventCategory</code> </b> - This field is required and must be set to <code>Equals</code>.</p>
    /// <ul>
    /// <li>
    /// <p>For CloudTrail management events, the value must be <code>Management</code>.</p></li>
    /// <li>
    /// <p>For CloudTrail data events, the value must be <code>Data</code>.</p></li>
    /// <li>
    /// <p>For CloudTrail network activity events, the value must be <code>NetworkActivity</code>.</p></li>
    /// </ul>
    /// <p>The following are used only for event data stores:</p>
    /// <ul>
    /// <li>
    /// <p>For CloudTrail Insights events, the value must be <code>Insight</code>.</p></li>
    /// <li>
    /// <p>For Config configuration items, the value must be <code>ConfigurationItem</code>.</p></li>
    /// <li>
    /// <p>For Audit Manager evidence, the value must be <code>Evidence</code>.</p></li>
    /// <li>
    /// <p>For events outside of Amazon Web Services, the value must be <code>ActivityAuditLog</code>.</p></li>
    /// </ul></li>
    /// <li>
    /// <p><b> <code>eventType</code> </b> - This is an optional field available only for event data stores, which is used to filter management and data events on the event type. For information about available event types, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-event-reference-record-contents.html#ct-event-type">CloudTrail record contents</a> in the <i>CloudTrail user guide</i>.</p></li>
    /// <li>
    /// <p><b> <code>errorCode</code> </b> - This ﬁeld is only used to filter CloudTrail network activity events and is optional. This is the error code to filter on. Currently, the only valid <code>errorCode</code> is <code>VpceAccessDenied</code>. <code>errorCode</code> can only use the <code>Equals</code> operator.</p></li>
    /// <li>
    /// <p><b> <code>sessionCredentialFromConsole</code> </b> - This is an optional field available only for event data stores, which is used to filter management and data events based on whether the events originated from an Amazon Web Services Management Console session. <code>sessionCredentialFromConsole</code> can only use the <code>Equals</code> and <code>NotEquals</code> operators.</p></li>
    /// <li>
    /// <p><b> <code>resources.type</code> </b> - This ﬁeld is required for CloudTrail data events. <code>resources.type</code> can only use the <code>Equals</code> operator.</p>
    /// <p>For a list of available resource types for data events, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#logging-data-events">Data events</a> in the <i>CloudTrail User Guide</i>.</p>
    /// <p>You can have only one <code>resources.type</code> ﬁeld per selector. To log events on more than one resource type, add another selector.</p></li>
    /// <li>
    /// <p><b> <code>resources.ARN</code> </b> - The <code>resources.ARN</code> is an optional field for data events. You can use any operator with <code>resources.ARN</code>, but if you use <code>Equals</code> or <code>NotEquals</code>, the value must exactly match the ARN of a valid resource of the type you've speciﬁed in the template as the value of resources.type. To log all data events for all objects in a specific S3 bucket, use the <code>StartsWith</code> operator, and include only the bucket ARN as the matching value.</p>
    /// <p>For information about filtering data events on the <code>resources.ARN</code> field, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/filtering-data-events.html#filtering-data-events-resourcearn">Filtering data events by resources.ARN</a> in the <i>CloudTrail User Guide</i>.</p><note>
    /// <p>You can't use the <code>resources.ARN</code> field to filter resource types that do not have ARNs.</p>
    /// </note></li>
    /// <li>
    /// <p><b> <code>userIdentity.arn</code> </b> - This is an optional field available only for event data stores, which is used to filter management and data events on the userIdentity ARN. You can use any operator with <code>userIdentity.arn</code>. For more information on the userIdentity element, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-event-reference-user-identity.html">CloudTrail userIdentity element</a> in the <i>CloudTrail User Guide</i>.</p></li>
    /// <li>
    /// <p><b> <code>vpcEndpointId</code> </b> - This ﬁeld is only used to filter CloudTrail network activity events and is optional. This field identifies the VPC endpoint that the request passed through. You can use any operator with <code>vpcEndpointId</code>.</p></li>
    /// </ul>
    pub fn field(&self) -> &str {
        use std::ops::Deref;
        self.field.deref()
    }
    /// <p>An operator that includes events that match the exact value of the event record field specified as the value of <code>Field</code>. This is the only valid operator that you can use with the <code>readOnly</code>, <code>eventCategory</code>, and <code>resources.type</code> fields.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.equals.is_none()`.
    pub fn equals(&self) -> &[::std::string::String] {
        self.equals.as_deref().unwrap_or_default()
    }
    /// <p>An operator that includes events that match the first few characters of the event record field specified as the value of <code>Field</code>.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.starts_with.is_none()`.
    pub fn starts_with(&self) -> &[::std::string::String] {
        self.starts_with.as_deref().unwrap_or_default()
    }
    /// <p>An operator that includes events that match the last few characters of the event record field specified as the value of <code>Field</code>.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.ends_with.is_none()`.
    pub fn ends_with(&self) -> &[::std::string::String] {
        self.ends_with.as_deref().unwrap_or_default()
    }
    /// <p>An operator that excludes events that match the exact value of the event record field specified as the value of <code>Field</code>.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.not_equals.is_none()`.
    pub fn not_equals(&self) -> &[::std::string::String] {
        self.not_equals.as_deref().unwrap_or_default()
    }
    /// <p>An operator that excludes events that match the first few characters of the event record field specified as the value of <code>Field</code>.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.not_starts_with.is_none()`.
    pub fn not_starts_with(&self) -> &[::std::string::String] {
        self.not_starts_with.as_deref().unwrap_or_default()
    }
    /// <p>An operator that excludes events that match the last few characters of the event record field specified as the value of <code>Field</code>.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.not_ends_with.is_none()`.
    pub fn not_ends_with(&self) -> &[::std::string::String] {
        self.not_ends_with.as_deref().unwrap_or_default()
    }
}
impl AdvancedFieldSelector {
    /// Creates a new builder-style object to manufacture [`AdvancedFieldSelector`](crate::types::AdvancedFieldSelector).
    pub fn builder() -> crate::types::builders::AdvancedFieldSelectorBuilder {
        crate::types::builders::AdvancedFieldSelectorBuilder::default()
    }
}

/// A builder for [`AdvancedFieldSelector`](crate::types::AdvancedFieldSelector).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AdvancedFieldSelectorBuilder {
    pub(crate) field: ::std::option::Option<::std::string::String>,
    pub(crate) equals: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) starts_with: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) ends_with: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) not_equals: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) not_starts_with: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) not_ends_with: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl AdvancedFieldSelectorBuilder {
    /// <p>A field in a CloudTrail event record on which to filter events to be logged. For event data stores for CloudTrail Insights events, Config configuration items, Audit Manager evidence, or events outside of Amazon Web Services, the field is used only for selecting events as filtering is not supported.</p>
    /// <p>For CloudTrail management events, supported fields include <code>eventCategory</code> (required), <code>eventSource</code>, and <code>readOnly</code>. The following additional fields are available for event data stores: <code>eventName</code>, <code>eventType</code>, <code>sessionCredentialFromConsole</code>, and <code>userIdentity.arn</code>.</p>
    /// <p>For CloudTrail data events, supported fields include <code>eventCategory</code> (required), <code>resources.type</code> (required), <code>eventName</code>, <code>readOnly</code>, and <code>resources.ARN</code>. The following additional fields are available for event data stores: <code>eventSource</code>, <code>eventType</code>, <code>sessionCredentialFromConsole</code>, and <code>userIdentity.arn</code>.</p>
    /// <p>For CloudTrail network activity events, supported fields include <code>eventCategory</code> (required), <code>eventSource</code> (required), <code>eventName</code>, <code>errorCode</code>, and <code>vpcEndpointId</code>.</p>
    /// <p>For event data stores for CloudTrail Insights events, Config configuration items, Audit Manager evidence, or events outside of Amazon Web Services, the only supported field is <code>eventCategory</code>.</p>
    /// <ul>
    /// <li>
    /// <p><b> <code>readOnly</code> </b> - This is an optional field that is only used for management events and data events. This field can be set to <code>Equals</code> with a value of <code>true</code> or <code>false</code>. If you do not add this field, CloudTrail logs both <code>read</code> and <code>write</code> events. A value of <code>true</code> logs only <code>read</code> events. A value of <code>false</code> logs only <code>write</code> events.</p></li>
    /// <li>
    /// <p><b> <code>eventSource</code> </b> - This field is only used for management events, data events (for event data stores only), and network activity events.</p>
    /// <p>For management events for trails, this is an optional field that can be set to <code>NotEquals</code> <code>kms.amazonaws.com</code> to exclude KMS management events, or <code>NotEquals</code> <code>rdsdata.amazonaws.com</code> to exclude RDS management events.</p>
    /// <p>For management and data events for event data stores, you can use it to include or exclude any event source and can use any operator.</p>
    /// <p>For network activity events, this is a required field that only uses the <code>Equals</code> operator. Set this field to the event source for which you want to log network activity events. If you want to log network activity events for multiple event sources, you must create a separate field selector for each event source.</p>
    /// <p>The following are valid values for network activity events:</p>
    /// <ul>
    /// <li>
    /// <p><code>cloudtrail.amazonaws.com</code></p></li>
    /// <li>
    /// <p><code>ec2.amazonaws.com</code></p></li>
    /// <li>
    /// <p><code>kms.amazonaws.com</code></p></li>
    /// <li>
    /// <p><code>secretsmanager.amazonaws.com</code></p></li>
    /// </ul></li>
    /// <li>
    /// <p><b> <code>eventName</code> </b> - This is an optional field that is only used for data events, management events (for event data stores only), and network activity events. You can use any operator with <code>eventName</code>. You can use it to ﬁlter in or ﬁlter out specific events. You can have multiple values for this ﬁeld, separated by commas.</p></li>
    /// <li>
    /// <p><b> <code>eventCategory</code> </b> - This field is required and must be set to <code>Equals</code>.</p>
    /// <ul>
    /// <li>
    /// <p>For CloudTrail management events, the value must be <code>Management</code>.</p></li>
    /// <li>
    /// <p>For CloudTrail data events, the value must be <code>Data</code>.</p></li>
    /// <li>
    /// <p>For CloudTrail network activity events, the value must be <code>NetworkActivity</code>.</p></li>
    /// </ul>
    /// <p>The following are used only for event data stores:</p>
    /// <ul>
    /// <li>
    /// <p>For CloudTrail Insights events, the value must be <code>Insight</code>.</p></li>
    /// <li>
    /// <p>For Config configuration items, the value must be <code>ConfigurationItem</code>.</p></li>
    /// <li>
    /// <p>For Audit Manager evidence, the value must be <code>Evidence</code>.</p></li>
    /// <li>
    /// <p>For events outside of Amazon Web Services, the value must be <code>ActivityAuditLog</code>.</p></li>
    /// </ul></li>
    /// <li>
    /// <p><b> <code>eventType</code> </b> - This is an optional field available only for event data stores, which is used to filter management and data events on the event type. For information about available event types, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-event-reference-record-contents.html#ct-event-type">CloudTrail record contents</a> in the <i>CloudTrail user guide</i>.</p></li>
    /// <li>
    /// <p><b> <code>errorCode</code> </b> - This ﬁeld is only used to filter CloudTrail network activity events and is optional. This is the error code to filter on. Currently, the only valid <code>errorCode</code> is <code>VpceAccessDenied</code>. <code>errorCode</code> can only use the <code>Equals</code> operator.</p></li>
    /// <li>
    /// <p><b> <code>sessionCredentialFromConsole</code> </b> - This is an optional field available only for event data stores, which is used to filter management and data events based on whether the events originated from an Amazon Web Services Management Console session. <code>sessionCredentialFromConsole</code> can only use the <code>Equals</code> and <code>NotEquals</code> operators.</p></li>
    /// <li>
    /// <p><b> <code>resources.type</code> </b> - This ﬁeld is required for CloudTrail data events. <code>resources.type</code> can only use the <code>Equals</code> operator.</p>
    /// <p>For a list of available resource types for data events, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#logging-data-events">Data events</a> in the <i>CloudTrail User Guide</i>.</p>
    /// <p>You can have only one <code>resources.type</code> ﬁeld per selector. To log events on more than one resource type, add another selector.</p></li>
    /// <li>
    /// <p><b> <code>resources.ARN</code> </b> - The <code>resources.ARN</code> is an optional field for data events. You can use any operator with <code>resources.ARN</code>, but if you use <code>Equals</code> or <code>NotEquals</code>, the value must exactly match the ARN of a valid resource of the type you've speciﬁed in the template as the value of resources.type. To log all data events for all objects in a specific S3 bucket, use the <code>StartsWith</code> operator, and include only the bucket ARN as the matching value.</p>
    /// <p>For information about filtering data events on the <code>resources.ARN</code> field, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/filtering-data-events.html#filtering-data-events-resourcearn">Filtering data events by resources.ARN</a> in the <i>CloudTrail User Guide</i>.</p><note>
    /// <p>You can't use the <code>resources.ARN</code> field to filter resource types that do not have ARNs.</p>
    /// </note></li>
    /// <li>
    /// <p><b> <code>userIdentity.arn</code> </b> - This is an optional field available only for event data stores, which is used to filter management and data events on the userIdentity ARN. You can use any operator with <code>userIdentity.arn</code>. For more information on the userIdentity element, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-event-reference-user-identity.html">CloudTrail userIdentity element</a> in the <i>CloudTrail User Guide</i>.</p></li>
    /// <li>
    /// <p><b> <code>vpcEndpointId</code> </b> - This ﬁeld is only used to filter CloudTrail network activity events and is optional. This field identifies the VPC endpoint that the request passed through. You can use any operator with <code>vpcEndpointId</code>.</p></li>
    /// </ul>
    /// This field is required.
    pub fn field(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.field = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A field in a CloudTrail event record on which to filter events to be logged. For event data stores for CloudTrail Insights events, Config configuration items, Audit Manager evidence, or events outside of Amazon Web Services, the field is used only for selecting events as filtering is not supported.</p>
    /// <p>For CloudTrail management events, supported fields include <code>eventCategory</code> (required), <code>eventSource</code>, and <code>readOnly</code>. The following additional fields are available for event data stores: <code>eventName</code>, <code>eventType</code>, <code>sessionCredentialFromConsole</code>, and <code>userIdentity.arn</code>.</p>
    /// <p>For CloudTrail data events, supported fields include <code>eventCategory</code> (required), <code>resources.type</code> (required), <code>eventName</code>, <code>readOnly</code>, and <code>resources.ARN</code>. The following additional fields are available for event data stores: <code>eventSource</code>, <code>eventType</code>, <code>sessionCredentialFromConsole</code>, and <code>userIdentity.arn</code>.</p>
    /// <p>For CloudTrail network activity events, supported fields include <code>eventCategory</code> (required), <code>eventSource</code> (required), <code>eventName</code>, <code>errorCode</code>, and <code>vpcEndpointId</code>.</p>
    /// <p>For event data stores for CloudTrail Insights events, Config configuration items, Audit Manager evidence, or events outside of Amazon Web Services, the only supported field is <code>eventCategory</code>.</p>
    /// <ul>
    /// <li>
    /// <p><b> <code>readOnly</code> </b> - This is an optional field that is only used for management events and data events. This field can be set to <code>Equals</code> with a value of <code>true</code> or <code>false</code>. If you do not add this field, CloudTrail logs both <code>read</code> and <code>write</code> events. A value of <code>true</code> logs only <code>read</code> events. A value of <code>false</code> logs only <code>write</code> events.</p></li>
    /// <li>
    /// <p><b> <code>eventSource</code> </b> - This field is only used for management events, data events (for event data stores only), and network activity events.</p>
    /// <p>For management events for trails, this is an optional field that can be set to <code>NotEquals</code> <code>kms.amazonaws.com</code> to exclude KMS management events, or <code>NotEquals</code> <code>rdsdata.amazonaws.com</code> to exclude RDS management events.</p>
    /// <p>For management and data events for event data stores, you can use it to include or exclude any event source and can use any operator.</p>
    /// <p>For network activity events, this is a required field that only uses the <code>Equals</code> operator. Set this field to the event source for which you want to log network activity events. If you want to log network activity events for multiple event sources, you must create a separate field selector for each event source.</p>
    /// <p>The following are valid values for network activity events:</p>
    /// <ul>
    /// <li>
    /// <p><code>cloudtrail.amazonaws.com</code></p></li>
    /// <li>
    /// <p><code>ec2.amazonaws.com</code></p></li>
    /// <li>
    /// <p><code>kms.amazonaws.com</code></p></li>
    /// <li>
    /// <p><code>secretsmanager.amazonaws.com</code></p></li>
    /// </ul></li>
    /// <li>
    /// <p><b> <code>eventName</code> </b> - This is an optional field that is only used for data events, management events (for event data stores only), and network activity events. You can use any operator with <code>eventName</code>. You can use it to ﬁlter in or ﬁlter out specific events. You can have multiple values for this ﬁeld, separated by commas.</p></li>
    /// <li>
    /// <p><b> <code>eventCategory</code> </b> - This field is required and must be set to <code>Equals</code>.</p>
    /// <ul>
    /// <li>
    /// <p>For CloudTrail management events, the value must be <code>Management</code>.</p></li>
    /// <li>
    /// <p>For CloudTrail data events, the value must be <code>Data</code>.</p></li>
    /// <li>
    /// <p>For CloudTrail network activity events, the value must be <code>NetworkActivity</code>.</p></li>
    /// </ul>
    /// <p>The following are used only for event data stores:</p>
    /// <ul>
    /// <li>
    /// <p>For CloudTrail Insights events, the value must be <code>Insight</code>.</p></li>
    /// <li>
    /// <p>For Config configuration items, the value must be <code>ConfigurationItem</code>.</p></li>
    /// <li>
    /// <p>For Audit Manager evidence, the value must be <code>Evidence</code>.</p></li>
    /// <li>
    /// <p>For events outside of Amazon Web Services, the value must be <code>ActivityAuditLog</code>.</p></li>
    /// </ul></li>
    /// <li>
    /// <p><b> <code>eventType</code> </b> - This is an optional field available only for event data stores, which is used to filter management and data events on the event type. For information about available event types, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-event-reference-record-contents.html#ct-event-type">CloudTrail record contents</a> in the <i>CloudTrail user guide</i>.</p></li>
    /// <li>
    /// <p><b> <code>errorCode</code> </b> - This ﬁeld is only used to filter CloudTrail network activity events and is optional. This is the error code to filter on. Currently, the only valid <code>errorCode</code> is <code>VpceAccessDenied</code>. <code>errorCode</code> can only use the <code>Equals</code> operator.</p></li>
    /// <li>
    /// <p><b> <code>sessionCredentialFromConsole</code> </b> - This is an optional field available only for event data stores, which is used to filter management and data events based on whether the events originated from an Amazon Web Services Management Console session. <code>sessionCredentialFromConsole</code> can only use the <code>Equals</code> and <code>NotEquals</code> operators.</p></li>
    /// <li>
    /// <p><b> <code>resources.type</code> </b> - This ﬁeld is required for CloudTrail data events. <code>resources.type</code> can only use the <code>Equals</code> operator.</p>
    /// <p>For a list of available resource types for data events, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#logging-data-events">Data events</a> in the <i>CloudTrail User Guide</i>.</p>
    /// <p>You can have only one <code>resources.type</code> ﬁeld per selector. To log events on more than one resource type, add another selector.</p></li>
    /// <li>
    /// <p><b> <code>resources.ARN</code> </b> - The <code>resources.ARN</code> is an optional field for data events. You can use any operator with <code>resources.ARN</code>, but if you use <code>Equals</code> or <code>NotEquals</code>, the value must exactly match the ARN of a valid resource of the type you've speciﬁed in the template as the value of resources.type. To log all data events for all objects in a specific S3 bucket, use the <code>StartsWith</code> operator, and include only the bucket ARN as the matching value.</p>
    /// <p>For information about filtering data events on the <code>resources.ARN</code> field, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/filtering-data-events.html#filtering-data-events-resourcearn">Filtering data events by resources.ARN</a> in the <i>CloudTrail User Guide</i>.</p><note>
    /// <p>You can't use the <code>resources.ARN</code> field to filter resource types that do not have ARNs.</p>
    /// </note></li>
    /// <li>
    /// <p><b> <code>userIdentity.arn</code> </b> - This is an optional field available only for event data stores, which is used to filter management and data events on the userIdentity ARN. You can use any operator with <code>userIdentity.arn</code>. For more information on the userIdentity element, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-event-reference-user-identity.html">CloudTrail userIdentity element</a> in the <i>CloudTrail User Guide</i>.</p></li>
    /// <li>
    /// <p><b> <code>vpcEndpointId</code> </b> - This ﬁeld is only used to filter CloudTrail network activity events and is optional. This field identifies the VPC endpoint that the request passed through. You can use any operator with <code>vpcEndpointId</code>.</p></li>
    /// </ul>
    pub fn set_field(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.field = input;
        self
    }
    /// <p>A field in a CloudTrail event record on which to filter events to be logged. For event data stores for CloudTrail Insights events, Config configuration items, Audit Manager evidence, or events outside of Amazon Web Services, the field is used only for selecting events as filtering is not supported.</p>
    /// <p>For CloudTrail management events, supported fields include <code>eventCategory</code> (required), <code>eventSource</code>, and <code>readOnly</code>. The following additional fields are available for event data stores: <code>eventName</code>, <code>eventType</code>, <code>sessionCredentialFromConsole</code>, and <code>userIdentity.arn</code>.</p>
    /// <p>For CloudTrail data events, supported fields include <code>eventCategory</code> (required), <code>resources.type</code> (required), <code>eventName</code>, <code>readOnly</code>, and <code>resources.ARN</code>. The following additional fields are available for event data stores: <code>eventSource</code>, <code>eventType</code>, <code>sessionCredentialFromConsole</code>, and <code>userIdentity.arn</code>.</p>
    /// <p>For CloudTrail network activity events, supported fields include <code>eventCategory</code> (required), <code>eventSource</code> (required), <code>eventName</code>, <code>errorCode</code>, and <code>vpcEndpointId</code>.</p>
    /// <p>For event data stores for CloudTrail Insights events, Config configuration items, Audit Manager evidence, or events outside of Amazon Web Services, the only supported field is <code>eventCategory</code>.</p>
    /// <ul>
    /// <li>
    /// <p><b> <code>readOnly</code> </b> - This is an optional field that is only used for management events and data events. This field can be set to <code>Equals</code> with a value of <code>true</code> or <code>false</code>. If you do not add this field, CloudTrail logs both <code>read</code> and <code>write</code> events. A value of <code>true</code> logs only <code>read</code> events. A value of <code>false</code> logs only <code>write</code> events.</p></li>
    /// <li>
    /// <p><b> <code>eventSource</code> </b> - This field is only used for management events, data events (for event data stores only), and network activity events.</p>
    /// <p>For management events for trails, this is an optional field that can be set to <code>NotEquals</code> <code>kms.amazonaws.com</code> to exclude KMS management events, or <code>NotEquals</code> <code>rdsdata.amazonaws.com</code> to exclude RDS management events.</p>
    /// <p>For management and data events for event data stores, you can use it to include or exclude any event source and can use any operator.</p>
    /// <p>For network activity events, this is a required field that only uses the <code>Equals</code> operator. Set this field to the event source for which you want to log network activity events. If you want to log network activity events for multiple event sources, you must create a separate field selector for each event source.</p>
    /// <p>The following are valid values for network activity events:</p>
    /// <ul>
    /// <li>
    /// <p><code>cloudtrail.amazonaws.com</code></p></li>
    /// <li>
    /// <p><code>ec2.amazonaws.com</code></p></li>
    /// <li>
    /// <p><code>kms.amazonaws.com</code></p></li>
    /// <li>
    /// <p><code>secretsmanager.amazonaws.com</code></p></li>
    /// </ul></li>
    /// <li>
    /// <p><b> <code>eventName</code> </b> - This is an optional field that is only used for data events, management events (for event data stores only), and network activity events. You can use any operator with <code>eventName</code>. You can use it to ﬁlter in or ﬁlter out specific events. You can have multiple values for this ﬁeld, separated by commas.</p></li>
    /// <li>
    /// <p><b> <code>eventCategory</code> </b> - This field is required and must be set to <code>Equals</code>.</p>
    /// <ul>
    /// <li>
    /// <p>For CloudTrail management events, the value must be <code>Management</code>.</p></li>
    /// <li>
    /// <p>For CloudTrail data events, the value must be <code>Data</code>.</p></li>
    /// <li>
    /// <p>For CloudTrail network activity events, the value must be <code>NetworkActivity</code>.</p></li>
    /// </ul>
    /// <p>The following are used only for event data stores:</p>
    /// <ul>
    /// <li>
    /// <p>For CloudTrail Insights events, the value must be <code>Insight</code>.</p></li>
    /// <li>
    /// <p>For Config configuration items, the value must be <code>ConfigurationItem</code>.</p></li>
    /// <li>
    /// <p>For Audit Manager evidence, the value must be <code>Evidence</code>.</p></li>
    /// <li>
    /// <p>For events outside of Amazon Web Services, the value must be <code>ActivityAuditLog</code>.</p></li>
    /// </ul></li>
    /// <li>
    /// <p><b> <code>eventType</code> </b> - This is an optional field available only for event data stores, which is used to filter management and data events on the event type. For information about available event types, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-event-reference-record-contents.html#ct-event-type">CloudTrail record contents</a> in the <i>CloudTrail user guide</i>.</p></li>
    /// <li>
    /// <p><b> <code>errorCode</code> </b> - This ﬁeld is only used to filter CloudTrail network activity events and is optional. This is the error code to filter on. Currently, the only valid <code>errorCode</code> is <code>VpceAccessDenied</code>. <code>errorCode</code> can only use the <code>Equals</code> operator.</p></li>
    /// <li>
    /// <p><b> <code>sessionCredentialFromConsole</code> </b> - This is an optional field available only for event data stores, which is used to filter management and data events based on whether the events originated from an Amazon Web Services Management Console session. <code>sessionCredentialFromConsole</code> can only use the <code>Equals</code> and <code>NotEquals</code> operators.</p></li>
    /// <li>
    /// <p><b> <code>resources.type</code> </b> - This ﬁeld is required for CloudTrail data events. <code>resources.type</code> can only use the <code>Equals</code> operator.</p>
    /// <p>For a list of available resource types for data events, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#logging-data-events">Data events</a> in the <i>CloudTrail User Guide</i>.</p>
    /// <p>You can have only one <code>resources.type</code> ﬁeld per selector. To log events on more than one resource type, add another selector.</p></li>
    /// <li>
    /// <p><b> <code>resources.ARN</code> </b> - The <code>resources.ARN</code> is an optional field for data events. You can use any operator with <code>resources.ARN</code>, but if you use <code>Equals</code> or <code>NotEquals</code>, the value must exactly match the ARN of a valid resource of the type you've speciﬁed in the template as the value of resources.type. To log all data events for all objects in a specific S3 bucket, use the <code>StartsWith</code> operator, and include only the bucket ARN as the matching value.</p>
    /// <p>For information about filtering data events on the <code>resources.ARN</code> field, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/filtering-data-events.html#filtering-data-events-resourcearn">Filtering data events by resources.ARN</a> in the <i>CloudTrail User Guide</i>.</p><note>
    /// <p>You can't use the <code>resources.ARN</code> field to filter resource types that do not have ARNs.</p>
    /// </note></li>
    /// <li>
    /// <p><b> <code>userIdentity.arn</code> </b> - This is an optional field available only for event data stores, which is used to filter management and data events on the userIdentity ARN. You can use any operator with <code>userIdentity.arn</code>. For more information on the userIdentity element, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-event-reference-user-identity.html">CloudTrail userIdentity element</a> in the <i>CloudTrail User Guide</i>.</p></li>
    /// <li>
    /// <p><b> <code>vpcEndpointId</code> </b> - This ﬁeld is only used to filter CloudTrail network activity events and is optional. This field identifies the VPC endpoint that the request passed through. You can use any operator with <code>vpcEndpointId</code>.</p></li>
    /// </ul>
    pub fn get_field(&self) -> &::std::option::Option<::std::string::String> {
        &self.field
    }
    /// Appends an item to `equals`.
    ///
    /// To override the contents of this collection use [`set_equals`](Self::set_equals).
    ///
    /// <p>An operator that includes events that match the exact value of the event record field specified as the value of <code>Field</code>. This is the only valid operator that you can use with the <code>readOnly</code>, <code>eventCategory</code>, and <code>resources.type</code> fields.</p>
    pub fn equals(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.equals.unwrap_or_default();
        v.push(input.into());
        self.equals = ::std::option::Option::Some(v);
        self
    }
    /// <p>An operator that includes events that match the exact value of the event record field specified as the value of <code>Field</code>. This is the only valid operator that you can use with the <code>readOnly</code>, <code>eventCategory</code>, and <code>resources.type</code> fields.</p>
    pub fn set_equals(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.equals = input;
        self
    }
    /// <p>An operator that includes events that match the exact value of the event record field specified as the value of <code>Field</code>. This is the only valid operator that you can use with the <code>readOnly</code>, <code>eventCategory</code>, and <code>resources.type</code> fields.</p>
    pub fn get_equals(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.equals
    }
    /// Appends an item to `starts_with`.
    ///
    /// To override the contents of this collection use [`set_starts_with`](Self::set_starts_with).
    ///
    /// <p>An operator that includes events that match the first few characters of the event record field specified as the value of <code>Field</code>.</p>
    pub fn starts_with(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.starts_with.unwrap_or_default();
        v.push(input.into());
        self.starts_with = ::std::option::Option::Some(v);
        self
    }
    /// <p>An operator that includes events that match the first few characters of the event record field specified as the value of <code>Field</code>.</p>
    pub fn set_starts_with(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.starts_with = input;
        self
    }
    /// <p>An operator that includes events that match the first few characters of the event record field specified as the value of <code>Field</code>.</p>
    pub fn get_starts_with(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.starts_with
    }
    /// Appends an item to `ends_with`.
    ///
    /// To override the contents of this collection use [`set_ends_with`](Self::set_ends_with).
    ///
    /// <p>An operator that includes events that match the last few characters of the event record field specified as the value of <code>Field</code>.</p>
    pub fn ends_with(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.ends_with.unwrap_or_default();
        v.push(input.into());
        self.ends_with = ::std::option::Option::Some(v);
        self
    }
    /// <p>An operator that includes events that match the last few characters of the event record field specified as the value of <code>Field</code>.</p>
    pub fn set_ends_with(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.ends_with = input;
        self
    }
    /// <p>An operator that includes events that match the last few characters of the event record field specified as the value of <code>Field</code>.</p>
    pub fn get_ends_with(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.ends_with
    }
    /// Appends an item to `not_equals`.
    ///
    /// To override the contents of this collection use [`set_not_equals`](Self::set_not_equals).
    ///
    /// <p>An operator that excludes events that match the exact value of the event record field specified as the value of <code>Field</code>.</p>
    pub fn not_equals(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.not_equals.unwrap_or_default();
        v.push(input.into());
        self.not_equals = ::std::option::Option::Some(v);
        self
    }
    /// <p>An operator that excludes events that match the exact value of the event record field specified as the value of <code>Field</code>.</p>
    pub fn set_not_equals(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.not_equals = input;
        self
    }
    /// <p>An operator that excludes events that match the exact value of the event record field specified as the value of <code>Field</code>.</p>
    pub fn get_not_equals(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.not_equals
    }
    /// Appends an item to `not_starts_with`.
    ///
    /// To override the contents of this collection use [`set_not_starts_with`](Self::set_not_starts_with).
    ///
    /// <p>An operator that excludes events that match the first few characters of the event record field specified as the value of <code>Field</code>.</p>
    pub fn not_starts_with(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.not_starts_with.unwrap_or_default();
        v.push(input.into());
        self.not_starts_with = ::std::option::Option::Some(v);
        self
    }
    /// <p>An operator that excludes events that match the first few characters of the event record field specified as the value of <code>Field</code>.</p>
    pub fn set_not_starts_with(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.not_starts_with = input;
        self
    }
    /// <p>An operator that excludes events that match the first few characters of the event record field specified as the value of <code>Field</code>.</p>
    pub fn get_not_starts_with(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.not_starts_with
    }
    /// Appends an item to `not_ends_with`.
    ///
    /// To override the contents of this collection use [`set_not_ends_with`](Self::set_not_ends_with).
    ///
    /// <p>An operator that excludes events that match the last few characters of the event record field specified as the value of <code>Field</code>.</p>
    pub fn not_ends_with(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.not_ends_with.unwrap_or_default();
        v.push(input.into());
        self.not_ends_with = ::std::option::Option::Some(v);
        self
    }
    /// <p>An operator that excludes events that match the last few characters of the event record field specified as the value of <code>Field</code>.</p>
    pub fn set_not_ends_with(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.not_ends_with = input;
        self
    }
    /// <p>An operator that excludes events that match the last few characters of the event record field specified as the value of <code>Field</code>.</p>
    pub fn get_not_ends_with(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.not_ends_with
    }
    /// Consumes the builder and constructs a [`AdvancedFieldSelector`](crate::types::AdvancedFieldSelector).
    /// This method will fail if any of the following fields are not set:
    /// - [`field`](crate::types::builders::AdvancedFieldSelectorBuilder::field)
    pub fn build(self) -> ::std::result::Result<crate::types::AdvancedFieldSelector, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AdvancedFieldSelector {
            field: self.field.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "field",
                    "field was not specified but it is required when building AdvancedFieldSelector",
                )
            })?,
            equals: self.equals,
            starts_with: self.starts_with,
            ends_with: self.ends_with,
            not_equals: self.not_equals,
            not_starts_with: self.not_starts_with,
            not_ends_with: self.not_ends_with,
        })
    }
}
