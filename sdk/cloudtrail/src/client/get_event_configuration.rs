// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetEventConfiguration`](crate::operation::get_event_configuration::builders::GetEventConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`event_data_store(impl Into<String>)`](crate::operation::get_event_configuration::builders::GetEventConfigurationFluentBuilder::event_data_store) / [`set_event_data_store(Option<String>)`](crate::operation::get_event_configuration::builders::GetEventConfigurationFluentBuilder::set_event_data_store):<br>required: **false**<br><p>The Amazon Resource Name (ARN) or ID suffix of the ARN of the event data store for which you want to retrieve event configuration settings.</p><br>
    /// - On success, responds with [`GetEventConfigurationOutput`](crate::operation::get_event_configuration::GetEventConfigurationOutput) with field(s):
    ///   - [`event_data_store_arn(Option<String>)`](crate::operation::get_event_configuration::GetEventConfigurationOutput::event_data_store_arn): <p>The Amazon Resource Name (ARN) or ID suffix of the ARN of the event data store for which the event configuration settings are returned.</p>
    ///   - [`max_event_size(Option<MaxEventSize>)`](crate::operation::get_event_configuration::GetEventConfigurationOutput::max_event_size): <p>The maximum allowed size for events stored in the specified event data store.</p>
    ///   - [`context_key_selectors(Option<Vec::<ContextKeySelector>>)`](crate::operation::get_event_configuration::GetEventConfigurationOutput::context_key_selectors): <p>The list of context key selectors that are configured for the event data store.</p>
    /// - On failure, responds with [`SdkError<GetEventConfigurationError>`](crate::operation::get_event_configuration::GetEventConfigurationError)
    pub fn get_event_configuration(&self) -> crate::operation::get_event_configuration::builders::GetEventConfigurationFluentBuilder {
        crate::operation::get_event_configuration::builders::GetEventConfigurationFluentBuilder::new(self.handle.clone())
    }
}
