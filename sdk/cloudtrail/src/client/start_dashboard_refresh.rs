// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartDashboardRefresh`](crate::operation::start_dashboard_refresh::builders::StartDashboardRefreshFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dashboard_id(impl Into<String>)`](crate::operation::start_dashboard_refresh::builders::StartDashboardRefreshFluentBuilder::dashboard_id) / [`set_dashboard_id(Option<String>)`](crate::operation::start_dashboard_refresh::builders::StartDashboardRefreshFluentBuilder::set_dashboard_id):<br>required: **true**<br><p>The name or ARN of the dashboard.</p><br>
    ///   - [`query_parameter_values(impl Into<String>, impl Into<String>)`](crate::operation::start_dashboard_refresh::builders::StartDashboardRefreshFluentBuilder::query_parameter_values) / [`set_query_parameter_values(Option<HashMap::<String, String>>)`](crate::operation::start_dashboard_refresh::builders::StartDashboardRefreshFluentBuilder::set_query_parameter_values):<br>required: **false**<br><p>The query parameter values for the dashboard</p> <p>For custom dashboards, the following query parameters are valid: <code>$StartTime$</code>, <code>$EndTime$</code>, and <code>$Period$</code>.</p> <p>For managed dashboards, the following query parameters are valid: <code>$StartTime$</code>, <code>$EndTime$</code>, <code>$Period$</code>, and <code>$EventDataStoreId$</code>. The <code>$EventDataStoreId$</code> query parameter is required.</p><br>
    /// - On success, responds with [`StartDashboardRefreshOutput`](crate::operation::start_dashboard_refresh::StartDashboardRefreshOutput) with field(s):
    ///   - [`refresh_id(Option<String>)`](crate::operation::start_dashboard_refresh::StartDashboardRefreshOutput::refresh_id): <p>The refresh ID for the dashboard.</p>
    /// - On failure, responds with [`SdkError<StartDashboardRefreshError>`](crate::operation::start_dashboard_refresh::StartDashboardRefreshError)
    pub fn start_dashboard_refresh(&self) -> crate::operation::start_dashboard_refresh::builders::StartDashboardRefreshFluentBuilder {
        crate::operation::start_dashboard_refresh::builders::StartDashboardRefreshFluentBuilder::new(self.handle.clone())
    }
}
