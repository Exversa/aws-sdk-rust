// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_sequence_store_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_sequence_store::UpdateSequenceStoreInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.client_token {
        object.key("clientToken").string(var_1.as_str());
    }
    if let Some(var_2) = &input.description {
        object.key("description").string(var_2.as_str());
    }
    if let Some(var_3) = &input.fallback_location {
        object.key("fallbackLocation").string(var_3.as_str());
    }
    if let Some(var_4) = &input.name {
        object.key("name").string(var_4.as_str());
    }
    if let Some(var_5) = &input.propagated_set_level_tags {
        let mut array_6 = object.key("propagatedSetLevelTags").start_array();
        for item_7 in var_5 {
            {
                array_6.value().string(item_7.as_str());
            }
        }
        array_6.finish();
    }
    if let Some(var_8) = &input.s3_access_config {
        #[allow(unused_mut)]
        let mut object_9 = object.key("s3AccessConfig").start_object();
        crate::protocol_serde::shape_s3_access_config::ser_s3_access_config(&mut object_9, var_8)?;
        object_9.finish();
    }
    Ok(())
}
