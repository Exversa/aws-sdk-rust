// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateSequenceStore`](crate::operation::update_sequence_store::builders::UpdateSequenceStoreFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::operation::update_sequence_store::builders::UpdateSequenceStoreFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::update_sequence_store::builders::UpdateSequenceStoreFluentBuilder::set_id):<br>required: **true**<br><p>The ID of the sequence store.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::update_sequence_store::builders::UpdateSequenceStoreFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::update_sequence_store::builders::UpdateSequenceStoreFluentBuilder::set_name):<br>required: **false**<br><p>A name for the sequence store.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::update_sequence_store::builders::UpdateSequenceStoreFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_sequence_store::builders::UpdateSequenceStoreFluentBuilder::set_description):<br>required: **false**<br><p>A description for the sequence store.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::update_sequence_store::builders::UpdateSequenceStoreFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::update_sequence_store::builders::UpdateSequenceStoreFluentBuilder::set_client_token):<br>required: **false**<br><p>To ensure that requests don't run multiple times, specify a unique token for each request.</p><br>
    ///   - [`fallback_location(impl Into<String>)`](crate::operation::update_sequence_store::builders::UpdateSequenceStoreFluentBuilder::fallback_location) / [`set_fallback_location(Option<String>)`](crate::operation::update_sequence_store::builders::UpdateSequenceStoreFluentBuilder::set_fallback_location):<br>required: **false**<br><p>The S3 URI of a bucket and folder to store Read Sets that fail to upload.</p><br>
    ///   - [`propagated_set_level_tags(impl Into<String>)`](crate::operation::update_sequence_store::builders::UpdateSequenceStoreFluentBuilder::propagated_set_level_tags) / [`set_propagated_set_level_tags(Option<Vec::<String>>)`](crate::operation::update_sequence_store::builders::UpdateSequenceStoreFluentBuilder::set_propagated_set_level_tags):<br>required: **false**<br><p>The tags keys to propagate to the S3 objects associated with read sets in the sequence store.</p><br>
    ///   - [`s3_access_config(S3AccessConfig)`](crate::operation::update_sequence_store::builders::UpdateSequenceStoreFluentBuilder::s3_access_config) / [`set_s3_access_config(Option<S3AccessConfig>)`](crate::operation::update_sequence_store::builders::UpdateSequenceStoreFluentBuilder::set_s3_access_config):<br>required: **false**<br><p>S3 access configuration parameters.</p><br>
    /// - On success, responds with [`UpdateSequenceStoreOutput`](crate::operation::update_sequence_store::UpdateSequenceStoreOutput) with field(s):
    ///   - [`id(String)`](crate::operation::update_sequence_store::UpdateSequenceStoreOutput::id): <p>The ID of the sequence store.</p>
    ///   - [`arn(String)`](crate::operation::update_sequence_store::UpdateSequenceStoreOutput::arn): <p>The ARN of the sequence store.</p>
    ///   - [`name(Option<String>)`](crate::operation::update_sequence_store::UpdateSequenceStoreOutput::name): <p>The name of the sequence store.</p>
    ///   - [`description(Option<String>)`](crate::operation::update_sequence_store::UpdateSequenceStoreOutput::description): <p>Description of the sequence store.</p>
    ///   - [`sse_config(Option<SseConfig>)`](crate::operation::update_sequence_store::UpdateSequenceStoreOutput::sse_config): <p>Server-side encryption (SSE) settings for a store.</p>
    ///   - [`creation_time(DateTime)`](crate::operation::update_sequence_store::UpdateSequenceStoreOutput::creation_time): <p>The time when the store was created.</p>
    ///   - [`update_time(Option<DateTime>)`](crate::operation::update_sequence_store::UpdateSequenceStoreOutput::update_time): <p>The last-updated time of the Sequence Store.</p>
    ///   - [`propagated_set_level_tags(Option<Vec::<String>>)`](crate::operation::update_sequence_store::UpdateSequenceStoreOutput::propagated_set_level_tags): <p>The tags keys to propagate to the S3 objects associated with read sets in the sequence store.</p>
    ///   - [`status(Option<SequenceStoreStatus>)`](crate::operation::update_sequence_store::UpdateSequenceStoreOutput::status): <p>The status of the sequence store.</p>
    ///   - [`status_message(Option<String>)`](crate::operation::update_sequence_store::UpdateSequenceStoreOutput::status_message): <p>The status message of the sequence store.</p>
    ///   - [`fallback_location(Option<String>)`](crate::operation::update_sequence_store::UpdateSequenceStoreOutput::fallback_location): <p>The S3 URI of a bucket and folder to store Read Sets that fail to upload.</p>
    ///   - [`s3_access(Option<SequenceStoreS3Access>)`](crate::operation::update_sequence_store::UpdateSequenceStoreOutput::s3_access): <p>The S3 access metadata of the sequence store.</p>
    ///   - [`e_tag_algorithm_family(Option<ETagAlgorithmFamily>)`](crate::operation::update_sequence_store::UpdateSequenceStoreOutput::e_tag_algorithm_family): <p>The ETag algorithm family to use on ingested read sets.</p>
    /// - On failure, responds with [`SdkError<UpdateSequenceStoreError>`](crate::operation::update_sequence_store::UpdateSequenceStoreError)
    pub fn update_sequence_store(&self) -> crate::operation::update_sequence_store::builders::UpdateSequenceStoreFluentBuilder {
        crate::operation::update_sequence_store::builders::UpdateSequenceStoreFluentBuilder::new(self.handle.clone())
    }
}
