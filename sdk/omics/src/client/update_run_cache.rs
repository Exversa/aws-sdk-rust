// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateRunCache`](crate::operation::update_run_cache::builders::UpdateRunCacheFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cache_behavior(CacheBehavior)`](crate::operation::update_run_cache::builders::UpdateRunCacheFluentBuilder::cache_behavior) / [`set_cache_behavior(Option<CacheBehavior>)`](crate::operation::update_run_cache::builders::UpdateRunCacheFluentBuilder::set_cache_behavior):<br>required: **false**<br><p>Update the default run cache behavior.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::update_run_cache::builders::UpdateRunCacheFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_run_cache::builders::UpdateRunCacheFluentBuilder::set_description):<br>required: **false**<br><p>Update the run cache description.</p><br>
    ///   - [`id(impl Into<String>)`](crate::operation::update_run_cache::builders::UpdateRunCacheFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::update_run_cache::builders::UpdateRunCacheFluentBuilder::set_id):<br>required: **true**<br><p>The identifier of the run cache you want to update.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::update_run_cache::builders::UpdateRunCacheFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::update_run_cache::builders::UpdateRunCacheFluentBuilder::set_name):<br>required: **false**<br><p>Update the name of the run cache.</p><br>
    /// - On success, responds with [`UpdateRunCacheOutput`](crate::operation::update_run_cache::UpdateRunCacheOutput)
    /// - On failure, responds with [`SdkError<UpdateRunCacheError>`](crate::operation::update_run_cache::UpdateRunCacheError)
    pub fn update_run_cache(&self) -> crate::operation::update_run_cache::builders::UpdateRunCacheFluentBuilder {
        crate::operation::update_run_cache::builders::UpdateRunCacheFluentBuilder::new(self.handle.clone())
    }
}
