// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_data_automation_project_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_data_automation_project::UpdateDataAutomationProjectInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.custom_output_configuration {
        #[allow(unused_mut)]
        let mut object_2 = object.key("customOutputConfiguration").start_object();
        crate::protocol_serde::shape_custom_output_configuration::ser_custom_output_configuration(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.override_configuration {
        #[allow(unused_mut)]
        let mut object_4 = object.key("overrideConfiguration").start_object();
        crate::protocol_serde::shape_override_configuration::ser_override_configuration(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.project_description {
        object.key("projectDescription").string(var_5.as_str());
    }
    if let Some(var_6) = &input.project_stage {
        object.key("projectStage").string(var_6.as_str());
    }
    if let Some(var_7) = &input.standard_output_configuration {
        #[allow(unused_mut)]
        let mut object_8 = object.key("standardOutputConfiguration").start_object();
        crate::protocol_serde::shape_standard_output_configuration::ser_standard_output_configuration(&mut object_8, var_7)?;
        object_8.finish();
    }
    Ok(())
}
