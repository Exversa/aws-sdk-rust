// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetCanaryRuns`](crate::operation::get_canary_runs::builders::GetCanaryRunsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::get_canary_runs::builders::GetCanaryRunsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::get_canary_runs::builders::GetCanaryRunsFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::get_canary_runs::builders::GetCanaryRunsFluentBuilder::set_name):<br>required: **true**<br><p>The name of the canary that you want to see runs for.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::get_canary_runs::builders::GetCanaryRunsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::get_canary_runs::builders::GetCanaryRunsFluentBuilder::set_next_token):<br>required: **false**<br><p>A token that indicates that there is more data available. You can use this token in a subsequent <code>GetCanaryRuns</code> operation to retrieve the next set of results.</p><br>
    ///   - [`max_results(i32)`](crate::operation::get_canary_runs::builders::GetCanaryRunsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::get_canary_runs::builders::GetCanaryRunsFluentBuilder::set_max_results):<br>required: **false**<br><p>Specify this parameter to limit how many runs are returned each time you use the <code>GetCanaryRuns</code> operation. If you omit this parameter, the default of 100 is used.</p><br>
    ///   - [`dry_run_id(impl Into<String>)`](crate::operation::get_canary_runs::builders::GetCanaryRunsFluentBuilder::dry_run_id) / [`set_dry_run_id(Option<String>)`](crate::operation::get_canary_runs::builders::GetCanaryRunsFluentBuilder::set_dry_run_id):<br>required: **false**<br><p>The DryRunId associated with an existing canaryâ€™s dry run. You can use this DryRunId to retrieve information about the dry run.</p><br>
    ///   - [`run_type(RunType)`](crate::operation::get_canary_runs::builders::GetCanaryRunsFluentBuilder::run_type) / [`set_run_type(Option<RunType>)`](crate::operation::get_canary_runs::builders::GetCanaryRunsFluentBuilder::set_run_type):<br>required: **false**<br><ul>  <li>   <p>When you provide <code>RunType=CANARY_RUN</code> and <code>dryRunId</code>, you will get an exception</p></li>  <li>   <p>When a value is not provided for <code>RunType</code>, the default value is <code>CANARY_RUN</code></p></li>  <li>   <p>When <code>CANARY_RUN</code> is provided, all canary runs excluding dry runs are returned</p></li>  <li>   <p>When <code>DRY_RUN</code> is provided, all dry runs excluding canary runs are returned</p></li> </ul><br>
    /// - On success, responds with [`GetCanaryRunsOutput`](crate::operation::get_canary_runs::GetCanaryRunsOutput) with field(s):
    ///   - [`canary_runs(Option<Vec::<CanaryRun>>)`](crate::operation::get_canary_runs::GetCanaryRunsOutput::canary_runs): <p>An array of structures. Each structure contains the details of one of the retrieved canary runs.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::get_canary_runs::GetCanaryRunsOutput::next_token): <p>A token that indicates that there is more data available. You can use this token in a subsequent <code>GetCanaryRuns</code> operation to retrieve the next set of results.</p>
    /// - On failure, responds with [`SdkError<GetCanaryRunsError>`](crate::operation::get_canary_runs::GetCanaryRunsError)
    pub fn get_canary_runs(&self) -> crate::operation::get_canary_runs::builders::GetCanaryRunsFluentBuilder {
        crate::operation::get_canary_runs::builders::GetCanaryRunsFluentBuilder::new(self.handle.clone())
    }
}
