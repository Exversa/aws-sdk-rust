// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_send_outbound_email_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::send_outbound_email::SendOutboundEmailInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.additional_recipients {
        #[allow(unused_mut)]
        let mut object_2 = object.key("AdditionalRecipients").start_object();
        crate::protocol_serde::shape_outbound_additional_recipients::ser_outbound_additional_recipients(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.client_token {
        object.key("ClientToken").string(var_3.as_str());
    }
    if let Some(var_4) = &input.destination_email_address {
        #[allow(unused_mut)]
        let mut object_5 = object.key("DestinationEmailAddress").start_object();
        crate::protocol_serde::shape_email_address_info::ser_email_address_info(&mut object_5, var_4)?;
        object_5.finish();
    }
    if let Some(var_6) = &input.email_message {
        #[allow(unused_mut)]
        let mut object_7 = object.key("EmailMessage").start_object();
        crate::protocol_serde::shape_outbound_email_content::ser_outbound_email_content(&mut object_7, var_6)?;
        object_7.finish();
    }
    if let Some(var_8) = &input.from_email_address {
        #[allow(unused_mut)]
        let mut object_9 = object.key("FromEmailAddress").start_object();
        crate::protocol_serde::shape_email_address_info::ser_email_address_info(&mut object_9, var_8)?;
        object_9.finish();
    }
    if let Some(var_10) = &input.source_campaign {
        #[allow(unused_mut)]
        let mut object_11 = object.key("SourceCampaign").start_object();
        crate::protocol_serde::shape_source_campaign::ser_source_campaign(&mut object_11, var_10)?;
        object_11.finish();
    }
    if let Some(var_12) = &input.traffic_type {
        object.key("TrafficType").string(var_12.as_str());
    }
    Ok(())
}
