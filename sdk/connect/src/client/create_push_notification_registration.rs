// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreatePushNotificationRegistration`](crate::operation::create_push_notification_registration::builders::CreatePushNotificationRegistrationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_id(impl Into<String>)`](crate::operation::create_push_notification_registration::builders::CreatePushNotificationRegistrationFluentBuilder::instance_id) / [`set_instance_id(Option<String>)`](crate::operation::create_push_notification_registration::builders::CreatePushNotificationRegistrationFluentBuilder::set_instance_id):<br>required: **true**<br><p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_push_notification_registration::builders::CreatePushNotificationRegistrationFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_push_notification_registration::builders::CreatePushNotificationRegistrationFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.</p><br>
    ///   - [`pinpoint_app_arn(impl Into<String>)`](crate::operation::create_push_notification_registration::builders::CreatePushNotificationRegistrationFluentBuilder::pinpoint_app_arn) / [`set_pinpoint_app_arn(Option<String>)`](crate::operation::create_push_notification_registration::builders::CreatePushNotificationRegistrationFluentBuilder::set_pinpoint_app_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the Pinpoint application.</p><br>
    ///   - [`device_token(impl Into<String>)`](crate::operation::create_push_notification_registration::builders::CreatePushNotificationRegistrationFluentBuilder::device_token) / [`set_device_token(Option<String>)`](crate::operation::create_push_notification_registration::builders::CreatePushNotificationRegistrationFluentBuilder::set_device_token):<br>required: **true**<br><p>The push notification token issued by the Apple or Google gateways.</p><br>
    ///   - [`device_type(DeviceType)`](crate::operation::create_push_notification_registration::builders::CreatePushNotificationRegistrationFluentBuilder::device_type) / [`set_device_type(Option<DeviceType>)`](crate::operation::create_push_notification_registration::builders::CreatePushNotificationRegistrationFluentBuilder::set_device_type):<br>required: **true**<br><p>The device type to use when sending the message.</p><br>
    ///   - [`contact_configuration(ContactConfiguration)`](crate::operation::create_push_notification_registration::builders::CreatePushNotificationRegistrationFluentBuilder::contact_configuration) / [`set_contact_configuration(Option<ContactConfiguration>)`](crate::operation::create_push_notification_registration::builders::CreatePushNotificationRegistrationFluentBuilder::set_contact_configuration):<br>required: **true**<br><p>The contact configuration for push notification registration.</p><br>
    /// - On success, responds with [`CreatePushNotificationRegistrationOutput`](crate::operation::create_push_notification_registration::CreatePushNotificationRegistrationOutput) with field(s):
    ///   - [`registration_id(String)`](crate::operation::create_push_notification_registration::CreatePushNotificationRegistrationOutput::registration_id): <p>The identifier for the registration.</p>
    /// - On failure, responds with [`SdkError<CreatePushNotificationRegistrationError>`](crate::operation::create_push_notification_registration::CreatePushNotificationRegistrationError)
    pub fn create_push_notification_registration(
        &self,
    ) -> crate::operation::create_push_notification_registration::builders::CreatePushNotificationRegistrationFluentBuilder {
        crate::operation::create_push_notification_registration::builders::CreatePushNotificationRegistrationFluentBuilder::new(self.handle.clone())
    }
}
