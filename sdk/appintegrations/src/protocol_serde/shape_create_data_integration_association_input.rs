// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_data_integration_association_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_data_integration_association::CreateDataIntegrationAssociationInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.client_association_metadata {
        #[allow(unused_mut)]
        let mut object_2 = object.key("ClientAssociationMetadata").start_object();
        for (key_3, value_4) in var_1 {
            {
                object_2.key(key_3.as_str()).string(value_4.as_str());
            }
        }
        object_2.finish();
    }
    if let Some(var_5) = &input.client_id {
        object.key("ClientId").string(var_5.as_str());
    }
    if let Some(var_6) = &input.client_token {
        object.key("ClientToken").string(var_6.as_str());
    }
    if let Some(var_7) = &input.destination_uri {
        object.key("DestinationURI").string(var_7.as_str());
    }
    if let Some(var_8) = &input.execution_configuration {
        #[allow(unused_mut)]
        let mut object_9 = object.key("ExecutionConfiguration").start_object();
        crate::protocol_serde::shape_execution_configuration::ser_execution_configuration(&mut object_9, var_8)?;
        object_9.finish();
    }
    if let Some(var_10) = &input.object_configuration {
        #[allow(unused_mut)]
        let mut object_11 = object.key("ObjectConfiguration").start_object();
        for (key_12, value_13) in var_10 {
            {
                #[allow(unused_mut)]
                let mut object_14 = object_11.key(key_12.as_str()).start_object();
                for (key_15, value_16) in value_13 {
                    {
                        let mut array_17 = object_14.key(key_15.as_str()).start_array();
                        for item_18 in value_16 {
                            {
                                array_17.value().string(item_18.as_str());
                            }
                        }
                        array_17.finish();
                    }
                }
                object_14.finish();
            }
        }
        object_11.finish();
    }
    Ok(())
}
