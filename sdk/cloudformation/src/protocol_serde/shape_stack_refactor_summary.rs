// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::needless_question_mark)]
pub fn de_stack_refactor_summary(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::StackRefactorSummary, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::StackRefactorSummary::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("StackRefactorId") /* StackRefactorId com.amazonaws.cloudformation#StackRefactorSummary$StackRefactorId */ =>  {
                let var_1 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_stack_refactor_id(var_1);
            }
            ,
            s if s.matches("Description") /* Description com.amazonaws.cloudformation#StackRefactorSummary$Description */ =>  {
                let var_2 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_description(var_2);
            }
            ,
            s if s.matches("ExecutionStatus") /* ExecutionStatus com.amazonaws.cloudformation#StackRefactorSummary$ExecutionStatus */ =>  {
                let var_3 =
                    Some(
                        Result::<crate::types::StackRefactorExecutionStatus, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::StackRefactorExecutionStatus::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_execution_status(var_3);
            }
            ,
            s if s.matches("ExecutionStatusReason") /* ExecutionStatusReason com.amazonaws.cloudformation#StackRefactorSummary$ExecutionStatusReason */ =>  {
                let var_4 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_execution_status_reason(var_4);
            }
            ,
            s if s.matches("Status") /* Status com.amazonaws.cloudformation#StackRefactorSummary$Status */ =>  {
                let var_5 =
                    Some(
                        Result::<crate::types::StackRefactorStatus, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::StackRefactorStatus::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_status(var_5);
            }
            ,
            s if s.matches("StatusReason") /* StatusReason com.amazonaws.cloudformation#StackRefactorSummary$StatusReason */ =>  {
                let var_6 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_status_reason(var_6);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
