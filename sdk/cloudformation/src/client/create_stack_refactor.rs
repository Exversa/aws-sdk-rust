// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateStackRefactor`](crate::operation::create_stack_refactor::builders::CreateStackRefactorFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`description(impl Into<String>)`](crate::operation::create_stack_refactor::builders::CreateStackRefactorFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_stack_refactor::builders::CreateStackRefactorFluentBuilder::set_description):<br>required: **false**<br><p>A description to help you identify the stack refactor.</p><br>
    ///   - [`enable_stack_creation(bool)`](crate::operation::create_stack_refactor::builders::CreateStackRefactorFluentBuilder::enable_stack_creation) / [`set_enable_stack_creation(Option<bool>)`](crate::operation::create_stack_refactor::builders::CreateStackRefactorFluentBuilder::set_enable_stack_creation):<br>required: **false**<br><p>Determines if a new stack is created with the refactor.</p><br>
    ///   - [`resource_mappings(ResourceMapping)`](crate::operation::create_stack_refactor::builders::CreateStackRefactorFluentBuilder::resource_mappings) / [`set_resource_mappings(Option<Vec::<ResourceMapping>>)`](crate::operation::create_stack_refactor::builders::CreateStackRefactorFluentBuilder::set_resource_mappings):<br>required: **false**<br><p>The mappings for the stack resource <code>Source</code> and stack resource <code>Destination</code>.</p><br>
    ///   - [`stack_definitions(StackDefinition)`](crate::operation::create_stack_refactor::builders::CreateStackRefactorFluentBuilder::stack_definitions) / [`set_stack_definitions(Option<Vec::<StackDefinition>>)`](crate::operation::create_stack_refactor::builders::CreateStackRefactorFluentBuilder::set_stack_definitions):<br>required: **true**<br><p>The stacks being refactored.</p><br>
    /// - On success, responds with [`CreateStackRefactorOutput`](crate::operation::create_stack_refactor::CreateStackRefactorOutput) with field(s):
    ///   - [`stack_refactor_id(Option<String>)`](crate::operation::create_stack_refactor::CreateStackRefactorOutput::stack_refactor_id): <p>The ID associated with the stack refactor created from the <code>CreateStackRefactor</code> action.</p>
    /// - On failure, responds with [`SdkError<CreateStackRefactorError>`](crate::operation::create_stack_refactor::CreateStackRefactorError)
    pub fn create_stack_refactor(&self) -> crate::operation::create_stack_refactor::builders::CreateStackRefactorFluentBuilder {
        crate::operation::create_stack_refactor::builders::CreateStackRefactorFluentBuilder::new(self.handle.clone())
    }
}
