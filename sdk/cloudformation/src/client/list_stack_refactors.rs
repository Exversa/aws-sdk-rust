// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListStackRefactors`](crate::operation::list_stack_refactors::builders::ListStackRefactorsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_stack_refactors::builders::ListStackRefactorsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`execution_status_filter(StackRefactorExecutionStatus)`](crate::operation::list_stack_refactors::builders::ListStackRefactorsFluentBuilder::execution_status_filter) / [`set_execution_status_filter(Option<Vec::<StackRefactorExecutionStatus>>)`](crate::operation::list_stack_refactors::builders::ListStackRefactorsFluentBuilder::set_execution_status_filter):<br>required: **false**<br><p>Execution status to use as a filter. Specify one or more execution status codes to list only stack refactors with the specified execution status codes.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_stack_refactors::builders::ListStackRefactorsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_stack_refactors::builders::ListStackRefactorsFluentBuilder::set_next_token):<br>required: **false**<br><p>If the request doesn't return all the remaining results, <code>NextToken</code> is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If the request returns all results, <code>NextToken</code> is set to <code>null</code>.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_stack_refactors::builders::ListStackRefactorsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_stack_refactors::builders::ListStackRefactorsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</p><br>
    /// - On success, responds with [`ListStackRefactorsOutput`](crate::operation::list_stack_refactors::ListStackRefactorsOutput) with field(s):
    ///   - [`stack_refactor_summaries(Option<Vec::<StackRefactorSummary>>)`](crate::operation::list_stack_refactors::ListStackRefactorsOutput::stack_refactor_summaries): <p>Provides a summary of a stack refactor, including the following:</p> <ul>  <li>   <p><code>StackRefactorId</code></p></li>  <li>   <p><code>Status</code></p></li>  <li>   <p><code>StatusReason</code></p></li>  <li>   <p><code>ExecutionStatus</code></p></li>  <li>   <p><code>ExecutionStatusReason</code></p></li>  <li>   <p><code>Description</code></p></li> </ul>
    ///   - [`next_token(Option<String>)`](crate::operation::list_stack_refactors::ListStackRefactorsOutput::next_token): <p>If the request doesn't return all the remaining results, <code>NextToken</code> is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If the request returns all results, <code>NextToken</code> is set to <code>null</code>.</p>
    /// - On failure, responds with [`SdkError<ListStackRefactorsError>`](crate::operation::list_stack_refactors::ListStackRefactorsError)
    pub fn list_stack_refactors(&self) -> crate::operation::list_stack_refactors::builders::ListStackRefactorsFluentBuilder {
        crate::operation::list_stack_refactors::builders::ListStackRefactorsFluentBuilder::new(self.handle.clone())
    }
}
