// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListControls`](crate::operation::list_controls::builders::ListControlsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_controls::builders::ListControlsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_controls::builders::ListControlsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_controls::builders::ListControlsFluentBuilder::set_next_token):<br>required: **false**<br><p>The pagination token that's used to fetch the next set of results.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_controls::builders::ListControlsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_controls::builders::ListControlsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results on a page or for an API request call.</p><br>
    ///   - [`filter(ControlFilter)`](crate::operation::list_controls::builders::ListControlsFluentBuilder::filter) / [`set_filter(Option<ControlFilter>)`](crate::operation::list_controls::builders::ListControlsFluentBuilder::set_filter):<br>required: **false**<br><p>An optional filter that narrows the results to controls with specific implementation types or identifiers. If you don't provide a filter, the operation returns all available controls.</p><br>
    /// - On success, responds with [`ListControlsOutput`](crate::operation::list_controls::ListControlsOutput) with field(s):
    ///   - [`controls(Vec::<ControlSummary>)`](crate::operation::list_controls::ListControlsOutput::controls): <p>Returns a list of controls, given as structures of type <i>controlSummary</i>.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_controls::ListControlsOutput::next_token): <p>The pagination token that's used to fetch the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListControlsError>`](crate::operation::list_controls::ListControlsError)
    pub fn list_controls(&self) -> crate::operation::list_controls::builders::ListControlsFluentBuilder {
        crate::operation::list_controls::builders::ListControlsFluentBuilder::new(self.handle.clone())
    }
}
