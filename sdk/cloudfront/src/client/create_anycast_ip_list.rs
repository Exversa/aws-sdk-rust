// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateAnycastIpList`](crate::operation::create_anycast_ip_list::builders::CreateAnycastIpListFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_anycast_ip_list::builders::CreateAnycastIpListFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_anycast_ip_list::builders::CreateAnycastIpListFluentBuilder::set_name):<br>required: **true**<br><p>Name of the Anycast static IP list.</p><br>
    ///   - [`ip_count(i32)`](crate::operation::create_anycast_ip_list::builders::CreateAnycastIpListFluentBuilder::ip_count) / [`set_ip_count(Option<i32>)`](crate::operation::create_anycast_ip_list::builders::CreateAnycastIpListFluentBuilder::set_ip_count):<br>required: **true**<br><p>The number of static IP addresses that are allocated to the Anycast static IP list. Valid values: 21 or 3.</p><br>
    ///   - [`tags(Tags)`](crate::operation::create_anycast_ip_list::builders::CreateAnycastIpListFluentBuilder::tags) / [`set_tags(Option<Tags>)`](crate::operation::create_anycast_ip_list::builders::CreateAnycastIpListFluentBuilder::set_tags):<br>required: **false**<br><p>A complex type that contains zero or more <code>Tag</code> elements.</p><br>
    /// - On success, responds with [`CreateAnycastIpListOutput`](crate::operation::create_anycast_ip_list::CreateAnycastIpListOutput) with field(s):
    ///   - [`anycast_ip_list(Option<AnycastIpList>)`](crate::operation::create_anycast_ip_list::CreateAnycastIpListOutput::anycast_ip_list): <p>A response structure that includes the version identifier (ETag) and the created <code>AnycastIpList</code> structure.</p>
    ///   - [`e_tag(Option<String>)`](crate::operation::create_anycast_ip_list::CreateAnycastIpListOutput::e_tag): <p>The version identifier for the current version of the Anycast static IP list.</p>
    /// - On failure, responds with [`SdkError<CreateAnycastIpListError>`](crate::operation::create_anycast_ip_list::CreateAnycastIpListError)
    pub fn create_anycast_ip_list(&self) -> crate::operation::create_anycast_ip_list::builders::CreateAnycastIpListFluentBuilder {
        crate::operation::create_anycast_ip_list::builders::CreateAnycastIpListFluentBuilder::new(self.handle.clone())
    }
}
