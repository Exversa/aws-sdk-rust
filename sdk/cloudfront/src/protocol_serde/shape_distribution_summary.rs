// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::needless_question_mark)]
pub fn de_distribution_summary(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> ::std::result::Result<crate::types::DistributionSummary, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::DistributionSummary::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("Id") /* Id com.amazonaws.cloudfront#DistributionSummary$Id */ =>  {
                let var_1 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_id(var_1);
            }
            ,
            s if s.matches("ARN") /* ARN com.amazonaws.cloudfront#DistributionSummary$ARN */ =>  {
                let var_2 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_arn(var_2);
            }
            ,
            s if s.matches("ETag") /* ETag com.amazonaws.cloudfront#DistributionSummary$ETag */ =>  {
                let var_3 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_e_tag(var_3);
            }
            ,
            s if s.matches("Status") /* Status com.amazonaws.cloudfront#DistributionSummary$Status */ =>  {
                let var_4 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_status(var_4);
            }
            ,
            s if s.matches("LastModifiedTime") /* LastModifiedTime com.amazonaws.cloudfront#DistributionSummary$LastModifiedTime */ =>  {
                let var_5 =
                    Some(
                        ::aws_smithy_types::DateTime::from_str(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , ::aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.cloudfront#timestamp`)"))
                        ?
                    )
                ;
                builder = builder.set_last_modified_time(var_5);
            }
            ,
            s if s.matches("DomainName") /* DomainName com.amazonaws.cloudfront#DistributionSummary$DomainName */ =>  {
                let var_6 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_domain_name(var_6);
            }
            ,
            s if s.matches("Aliases") /* Aliases com.amazonaws.cloudfront#DistributionSummary$Aliases */ =>  {
                let var_7 =
                    Some(
                        crate::protocol_serde::shape_aliases::de_aliases(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_aliases(var_7);
            }
            ,
            s if s.matches("Origins") /* Origins com.amazonaws.cloudfront#DistributionSummary$Origins */ =>  {
                let var_8 =
                    Some(
                        crate::protocol_serde::shape_origins::de_origins(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_origins(var_8);
            }
            ,
            s if s.matches("OriginGroups") /* OriginGroups com.amazonaws.cloudfront#DistributionSummary$OriginGroups */ =>  {
                let var_9 =
                    Some(
                        crate::protocol_serde::shape_origin_groups::de_origin_groups(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_origin_groups(var_9);
            }
            ,
            s if s.matches("DefaultCacheBehavior") /* DefaultCacheBehavior com.amazonaws.cloudfront#DistributionSummary$DefaultCacheBehavior */ =>  {
                let var_10 =
                    Some(
                        crate::protocol_serde::shape_default_cache_behavior::de_default_cache_behavior(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_default_cache_behavior(var_10);
            }
            ,
            s if s.matches("CacheBehaviors") /* CacheBehaviors com.amazonaws.cloudfront#DistributionSummary$CacheBehaviors */ =>  {
                let var_11 =
                    Some(
                        crate::protocol_serde::shape_cache_behaviors::de_cache_behaviors(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_cache_behaviors(var_11);
            }
            ,
            s if s.matches("CustomErrorResponses") /* CustomErrorResponses com.amazonaws.cloudfront#DistributionSummary$CustomErrorResponses */ =>  {
                let var_12 =
                    Some(
                        crate::protocol_serde::shape_custom_error_responses::de_custom_error_responses(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_custom_error_responses(var_12);
            }
            ,
            s if s.matches("Comment") /* Comment com.amazonaws.cloudfront#DistributionSummary$Comment */ =>  {
                let var_13 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_comment(var_13);
            }
            ,
            s if s.matches("PriceClass") /* PriceClass com.amazonaws.cloudfront#DistributionSummary$PriceClass */ =>  {
                let var_14 =
                    Some(
                        Result::<crate::types::PriceClass, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::PriceClass::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_price_class(var_14);
            }
            ,
            s if s.matches("Enabled") /* Enabled com.amazonaws.cloudfront#DistributionSummary$Enabled */ =>  {
                let var_15 =
                    Some(
                         {
                            <bool as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.cloudfront#boolean`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_enabled(var_15);
            }
            ,
            s if s.matches("ViewerCertificate") /* ViewerCertificate com.amazonaws.cloudfront#DistributionSummary$ViewerCertificate */ =>  {
                let var_16 =
                    Some(
                        crate::protocol_serde::shape_viewer_certificate::de_viewer_certificate(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_viewer_certificate(var_16);
            }
            ,
            s if s.matches("Restrictions") /* Restrictions com.amazonaws.cloudfront#DistributionSummary$Restrictions */ =>  {
                let var_17 =
                    Some(
                        crate::protocol_serde::shape_restrictions::de_restrictions(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_restrictions(var_17);
            }
            ,
            s if s.matches("WebACLId") /* WebACLId com.amazonaws.cloudfront#DistributionSummary$WebACLId */ =>  {
                let var_18 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_web_acl_id(var_18);
            }
            ,
            s if s.matches("HttpVersion") /* HttpVersion com.amazonaws.cloudfront#DistributionSummary$HttpVersion */ =>  {
                let var_19 =
                    Some(
                        Result::<crate::types::HttpVersion, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::HttpVersion::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_http_version(var_19);
            }
            ,
            s if s.matches("IsIPV6Enabled") /* IsIPV6Enabled com.amazonaws.cloudfront#DistributionSummary$IsIPV6Enabled */ =>  {
                let var_20 =
                    Some(
                         {
                            <bool as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.cloudfront#boolean`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_is_ipv6_enabled(var_20);
            }
            ,
            s if s.matches("AliasICPRecordals") /* AliasICPRecordals com.amazonaws.cloudfront#DistributionSummary$AliasICPRecordals */ =>  {
                let var_21 =
                    Some(
                        crate::protocol_serde::shape_alias_icp_recordals::de_alias_icp_recordals(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_alias_icp_recordals(var_21);
            }
            ,
            s if s.matches("Staging") /* Staging com.amazonaws.cloudfront#DistributionSummary$Staging */ =>  {
                let var_22 =
                    Some(
                         {
                            <bool as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.cloudfront#boolean`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_staging(var_22);
            }
            ,
            s if s.matches("ConnectionMode") /* ConnectionMode com.amazonaws.cloudfront#DistributionSummary$ConnectionMode */ =>  {
                let var_23 =
                    Some(
                        Result::<crate::types::ConnectionMode, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::ConnectionMode::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_connection_mode(var_23);
            }
            ,
            s if s.matches("AnycastIpListId") /* AnycastIpListId com.amazonaws.cloudfront#DistributionSummary$AnycastIpListId */ =>  {
                let var_24 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_anycast_ip_list_id(var_24);
            }
            ,
            _ => {}
        }
    }
    Ok(crate::serde_util::distribution_summary_correct_errors(builder)
        .build()
        .map_err(|_| ::aws_smithy_xml::decode::XmlDecodeError::custom("missing field"))?)
}
