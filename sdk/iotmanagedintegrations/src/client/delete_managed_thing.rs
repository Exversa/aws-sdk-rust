// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteManagedThing`](crate::operation::delete_managed_thing::builders::DeleteManagedThingFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`identifier(impl Into<String>)`](crate::operation::delete_managed_thing::builders::DeleteManagedThingFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::delete_managed_thing::builders::DeleteManagedThingFluentBuilder::set_identifier):<br>required: **true**<br><p>The id of the managed thing.</p><br>
    ///   - [`force(bool)`](crate::operation::delete_managed_thing::builders::DeleteManagedThingFluentBuilder::force) / [`set_force(Option<bool>)`](crate::operation::delete_managed_thing::builders::DeleteManagedThingFluentBuilder::set_force):<br>required: **false**<br><p>When set to <code>TRUE</code>, a forceful deteletion of the managed thing will occur. When set to <code>FALSE</code>, a non-forceful deletion of the managed thing will occur.</p><br>
    /// - On success, responds with [`DeleteManagedThingOutput`](crate::operation::delete_managed_thing::DeleteManagedThingOutput)
    /// - On failure, responds with [`SdkError<DeleteManagedThingError>`](crate::operation::delete_managed_thing::DeleteManagedThingError)
    pub fn delete_managed_thing(&self) -> crate::operation::delete_managed_thing::builders::DeleteManagedThingFluentBuilder {
        crate::operation::delete_managed_thing::builders::DeleteManagedThingFluentBuilder::new(self.handle.clone())
    }
}
