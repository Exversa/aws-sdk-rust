// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetCredentialLocker`](crate::operation::get_credential_locker::builders::GetCredentialLockerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`identifier(impl Into<String>)`](crate::operation::get_credential_locker::builders::GetCredentialLockerFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::get_credential_locker::builders::GetCredentialLockerFluentBuilder::set_identifier):<br>required: **true**<br><p>The identifier of the credential locker.</p><br>
    /// - On success, responds with [`GetCredentialLockerOutput`](crate::operation::get_credential_locker::GetCredentialLockerOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::operation::get_credential_locker::GetCredentialLockerOutput::id): <p>The identifier of the credential locker.</p>
    ///   - [`arn(Option<String>)`](crate::operation::get_credential_locker::GetCredentialLockerOutput::arn): <p>The Amazon Resource Name (ARN) of the credential locker.</p>
    ///   - [`name(Option<String>)`](crate::operation::get_credential_locker::GetCredentialLockerOutput::name): <p>The name of the credential locker.</p>
    ///   - [`created_at(Option<DateTime>)`](crate::operation::get_credential_locker::GetCredentialLockerOutput::created_at): <p>The timestamp value of when the credential locker requset occurred.</p>
    ///   - [`tags(Option<HashMap::<String, String>>)`](crate::operation::get_credential_locker::GetCredentialLockerOutput::tags): <p>A set of key/value pairs that are used to manage the credential locker.</p>
    /// - On failure, responds with [`SdkError<GetCredentialLockerError>`](crate::operation::get_credential_locker::GetCredentialLockerError)
    pub fn get_credential_locker(&self) -> crate::operation::get_credential_locker::builders::GetCredentialLockerFluentBuilder {
        crate::operation::get_credential_locker::builders::GetCredentialLockerFluentBuilder::new(self.handle.clone())
    }
}
