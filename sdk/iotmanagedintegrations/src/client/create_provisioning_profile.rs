// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateProvisioningProfile`](crate::operation::create_provisioning_profile::builders::CreateProvisioningProfileFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`provisioning_type(ProvisioningType)`](crate::operation::create_provisioning_profile::builders::CreateProvisioningProfileFluentBuilder::provisioning_type) / [`set_provisioning_type(Option<ProvisioningType>)`](crate::operation::create_provisioning_profile::builders::CreateProvisioningProfileFluentBuilder::set_provisioning_type):<br>required: **true**<br><p>The type of provisioning workflow the device uses for onboarding to IoT managed integrations.</p><br>
    ///   - [`ca_certificate(impl Into<String>)`](crate::operation::create_provisioning_profile::builders::CreateProvisioningProfileFluentBuilder::ca_certificate) / [`set_ca_certificate(Option<String>)`](crate::operation::create_provisioning_profile::builders::CreateProvisioningProfileFluentBuilder::set_ca_certificate):<br>required: **false**<br><p>The id of the certificate authority (CA) certificate.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_provisioning_profile::builders::CreateProvisioningProfileFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_provisioning_profile::builders::CreateProvisioningProfileFluentBuilder::set_name):<br>required: **false**<br><p>The name of the provisioning template.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_provisioning_profile::builders::CreateProvisioningProfileFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_provisioning_profile::builders::CreateProvisioningProfileFluentBuilder::set_client_token):<br>required: **false**<br><p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_provisioning_profile::builders::CreateProvisioningProfileFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_provisioning_profile::builders::CreateProvisioningProfileFluentBuilder::set_tags):<br>required: **false**<br><p>A set of key/value pairs that are used to manage the provisioning profile.</p><br>
    /// - On success, responds with [`CreateProvisioningProfileOutput`](crate::operation::create_provisioning_profile::CreateProvisioningProfileOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::operation::create_provisioning_profile::CreateProvisioningProfileOutput::arn): <p>The Amazon Resource Name (ARN) of the provisioning template used in the provisioning profile.</p>
    ///   - [`name(Option<String>)`](crate::operation::create_provisioning_profile::CreateProvisioningProfileOutput::name): <p>The name of the provisioning template.</p>
    ///   - [`provisioning_type(Option<ProvisioningType>)`](crate::operation::create_provisioning_profile::CreateProvisioningProfileOutput::provisioning_type): <p>The type of provisioning workflow the device uses for onboarding to IoT managed integrations.</p>
    ///   - [`id(Option<String>)`](crate::operation::create_provisioning_profile::CreateProvisioningProfileOutput::id): <p>The identifier of the provisioning profile.</p>
    ///   - [`claim_certificate(Option<String>)`](crate::operation::create_provisioning_profile::CreateProvisioningProfileOutput::claim_certificate): <p>The id of the claim certificate.</p>
    ///   - [`claim_certificate_private_key(Option<String>)`](crate::operation::create_provisioning_profile::CreateProvisioningProfileOutput::claim_certificate_private_key): <p>The private key of the claim certificate. This is stored securely on the device for validating the connection endpoint with IoT managed integrations using the public key.</p>
    /// - On failure, responds with [`SdkError<CreateProvisioningProfileError>`](crate::operation::create_provisioning_profile::CreateProvisioningProfileError)
    pub fn create_provisioning_profile(&self) -> crate::operation::create_provisioning_profile::builders::CreateProvisioningProfileFluentBuilder {
        crate::operation::create_provisioning_profile::builders::CreateProvisioningProfileFluentBuilder::new(self.handle.clone())
    }
}
