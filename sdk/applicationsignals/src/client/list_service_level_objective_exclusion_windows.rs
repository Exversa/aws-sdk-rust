// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListServiceLevelObjectiveExclusionWindows`](crate::operation::list_service_level_objective_exclusion_windows::builders::ListServiceLevelObjectiveExclusionWindowsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_service_level_objective_exclusion_windows::builders::ListServiceLevelObjectiveExclusionWindowsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::operation::list_service_level_objective_exclusion_windows::builders::ListServiceLevelObjectiveExclusionWindowsFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::list_service_level_objective_exclusion_windows::builders::ListServiceLevelObjectiveExclusionWindowsFluentBuilder::set_id):<br>required: **true**<br><p>The ID of the SLO to list exclusion windows for.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_service_level_objective_exclusion_windows::builders::ListServiceLevelObjectiveExclusionWindowsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_service_level_objective_exclusion_windows::builders::ListServiceLevelObjectiveExclusionWindowsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return in one operation. If you omit this parameter, the default of 50 is used.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_service_level_objective_exclusion_windows::builders::ListServiceLevelObjectiveExclusionWindowsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_service_level_objective_exclusion_windows::builders::ListServiceLevelObjectiveExclusionWindowsFluentBuilder::set_next_token):<br>required: **false**<br><p>Include this value, if it was returned by the previous operation, to get the next set of service level objectives.</p><br>
    /// - On success, responds with [`ListServiceLevelObjectiveExclusionWindowsOutput`](crate::operation::list_service_level_objective_exclusion_windows::ListServiceLevelObjectiveExclusionWindowsOutput) with field(s):
    ///   - [`exclusion_windows(Vec::<ExclusionWindow>)`](crate::operation::list_service_level_objective_exclusion_windows::ListServiceLevelObjectiveExclusionWindowsOutput::exclusion_windows): <p>A list of exclusion windows configured for the SLO.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_service_level_objective_exclusion_windows::ListServiceLevelObjectiveExclusionWindowsOutput::next_token): <p>Include this value, if it was returned by the previous operation, to get the next set of service level objectives.</p>
    /// - On failure, responds with [`SdkError<ListServiceLevelObjectiveExclusionWindowsError>`](crate::operation::list_service_level_objective_exclusion_windows::ListServiceLevelObjectiveExclusionWindowsError)
    pub fn list_service_level_objective_exclusion_windows(
        &self,
    ) -> crate::operation::list_service_level_objective_exclusion_windows::builders::ListServiceLevelObjectiveExclusionWindowsFluentBuilder {
        crate::operation::list_service_level_objective_exclusion_windows::builders::ListServiceLevelObjectiveExclusionWindowsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
