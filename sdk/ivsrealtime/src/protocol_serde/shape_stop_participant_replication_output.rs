// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn de_access_control_allow_origin_header(
    header_map: &::aws_smithy_runtime_api::http::Headers,
) -> ::std::result::Result<::std::option::Option<::std::string::String>, ::aws_smithy_http::header::ParseError> {
    let headers = header_map.get_all("Access-Control-Allow-Origin");
    ::aws_smithy_http::header::one_or_none(headers)
}

pub(crate) fn de_access_control_expose_headers_header(
    header_map: &::aws_smithy_runtime_api::http::Headers,
) -> ::std::result::Result<::std::option::Option<::std::string::String>, ::aws_smithy_http::header::ParseError> {
    let headers = header_map.get_all("Access-Control-Expose-Headers");
    ::aws_smithy_http::header::one_or_none(headers)
}

pub(crate) fn de_cache_control_header(
    header_map: &::aws_smithy_runtime_api::http::Headers,
) -> ::std::result::Result<::std::option::Option<::std::string::String>, ::aws_smithy_http::header::ParseError> {
    let headers = header_map.get_all("Cache-Control");
    ::aws_smithy_http::header::one_or_none(headers)
}

pub(crate) fn de_content_security_policy_header(
    header_map: &::aws_smithy_runtime_api::http::Headers,
) -> ::std::result::Result<::std::option::Option<::std::string::String>, ::aws_smithy_http::header::ParseError> {
    let headers = header_map.get_all("Content-Security-Policy");
    ::aws_smithy_http::header::one_or_none(headers)
}

pub(crate) fn de_strict_transport_security_header(
    header_map: &::aws_smithy_runtime_api::http::Headers,
) -> ::std::result::Result<::std::option::Option<::std::string::String>, ::aws_smithy_http::header::ParseError> {
    let headers = header_map.get_all("Strict-Transport-Security");
    ::aws_smithy_http::header::one_or_none(headers)
}

pub(crate) fn de_x_content_type_options_header(
    header_map: &::aws_smithy_runtime_api::http::Headers,
) -> ::std::result::Result<::std::option::Option<::std::string::String>, ::aws_smithy_http::header::ParseError> {
    let headers = header_map.get_all("X-Content-Type-Options");
    ::aws_smithy_http::header::one_or_none(headers)
}

pub(crate) fn de_x_frame_options_header(
    header_map: &::aws_smithy_runtime_api::http::Headers,
) -> ::std::result::Result<::std::option::Option<::std::string::String>, ::aws_smithy_http::header::ParseError> {
    let headers = header_map.get_all("X-Frame-Options");
    ::aws_smithy_http::header::one_or_none(headers)
}
