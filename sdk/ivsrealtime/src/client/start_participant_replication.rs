// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartParticipantReplication`](crate::operation::start_participant_replication::builders::StartParticipantReplicationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`source_stage_arn(impl Into<String>)`](crate::operation::start_participant_replication::builders::StartParticipantReplicationFluentBuilder::source_stage_arn) / [`set_source_stage_arn(Option<String>)`](crate::operation::start_participant_replication::builders::StartParticipantReplicationFluentBuilder::set_source_stage_arn):<br>required: **true**<br><p>ARN of the stage where the participant is publishing.</p><br>
    ///   - [`destination_stage_arn(impl Into<String>)`](crate::operation::start_participant_replication::builders::StartParticipantReplicationFluentBuilder::destination_stage_arn) / [`set_destination_stage_arn(Option<String>)`](crate::operation::start_participant_replication::builders::StartParticipantReplicationFluentBuilder::set_destination_stage_arn):<br>required: **true**<br><p>ARN of the stage to which the participant will be replicated.</p><br>
    ///   - [`participant_id(impl Into<String>)`](crate::operation::start_participant_replication::builders::StartParticipantReplicationFluentBuilder::participant_id) / [`set_participant_id(Option<String>)`](crate::operation::start_participant_replication::builders::StartParticipantReplicationFluentBuilder::set_participant_id):<br>required: **true**<br><p>Participant ID of the publisher that will be replicated. This is assigned by IVS and returned by <code>CreateParticipantToken</code> or the <code>jti</code> (JWT ID) used to <a href="https://docs.aws.amazon.com/ivs/latest/RealTimeUserGuide/getting-started-distribute-tokens.html#getting-started-distribute-tokens-self-signed">create a self signed token</a>.</p><br>
    ///   - [`reconnect_window_seconds(i32)`](crate::operation::start_participant_replication::builders::StartParticipantReplicationFluentBuilder::reconnect_window_seconds) / [`set_reconnect_window_seconds(Option<i32>)`](crate::operation::start_participant_replication::builders::StartParticipantReplicationFluentBuilder::set_reconnect_window_seconds):<br>required: **false**<br><p>If the participant disconnects and then reconnects within the specified interval, replication will continue to be <code>ACTIVE</code>. Default: 0.</p><br>
    ///   - [`attributes(impl Into<String>, impl Into<String>)`](crate::operation::start_participant_replication::builders::StartParticipantReplicationFluentBuilder::attributes) / [`set_attributes(Option<HashMap::<String, String>>)`](crate::operation::start_participant_replication::builders::StartParticipantReplicationFluentBuilder::set_attributes):<br>required: **false**<br><p>Application-provided attributes to set on the replicated participant in the destination stage. Map keys and values can contain UTF-8 encoded text. The maximum length of this field is 1 KB total. <i>This field is exposed to all stage participants and should not be used for personally identifying, confidential, or sensitive information.</i></p> <p>These attributes are merged with any attributes set for this participant when creating the token. If there is overlap in keys, the values in these attributes are replaced.</p><br>
    /// - On success, responds with [`StartParticipantReplicationOutput`](crate::operation::start_participant_replication::StartParticipantReplicationOutput) with field(s):
    ///   - [`access_control_allow_origin(Option<String>)`](crate::operation::start_participant_replication::StartParticipantReplicationOutput::access_control_allow_origin): <p></p>
    ///   - [`access_control_expose_headers(Option<String>)`](crate::operation::start_participant_replication::StartParticipantReplicationOutput::access_control_expose_headers): <p></p>
    ///   - [`cache_control(Option<String>)`](crate::operation::start_participant_replication::StartParticipantReplicationOutput::cache_control): <p></p>
    ///   - [`content_security_policy(Option<String>)`](crate::operation::start_participant_replication::StartParticipantReplicationOutput::content_security_policy): <p></p>
    ///   - [`strict_transport_security(Option<String>)`](crate::operation::start_participant_replication::StartParticipantReplicationOutput::strict_transport_security): <p></p>
    ///   - [`x_content_type_options(Option<String>)`](crate::operation::start_participant_replication::StartParticipantReplicationOutput::x_content_type_options): <p></p>
    ///   - [`x_frame_options(Option<String>)`](crate::operation::start_participant_replication::StartParticipantReplicationOutput::x_frame_options): <p></p>
    /// - On failure, responds with [`SdkError<StartParticipantReplicationError>`](crate::operation::start_participant_replication::StartParticipantReplicationError)
    pub fn start_participant_replication(
        &self,
    ) -> crate::operation::start_participant_replication::builders::StartParticipantReplicationFluentBuilder {
        crate::operation::start_participant_replication::builders::StartParticipantReplicationFluentBuilder::new(self.handle.clone())
    }
}
