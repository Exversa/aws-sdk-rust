// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeIntegrations`](crate::operation::describe_integrations::builders::DescribeIntegrationsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_integrations::builders::DescribeIntegrationsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`integration_arn(impl Into<String>)`](crate::operation::describe_integrations::builders::DescribeIntegrationsFluentBuilder::integration_arn) / [`set_integration_arn(Option<String>)`](crate::operation::describe_integrations::builders::DescribeIntegrationsFluentBuilder::set_integration_arn):<br>required: **false**<br><p>The unique identifier of the integration.</p><br>
    ///   - [`max_records(i32)`](crate::operation::describe_integrations::builders::DescribeIntegrationsFluentBuilder::max_records) / [`set_max_records(Option<i32>)`](crate::operation::describe_integrations::builders::DescribeIntegrationsFluentBuilder::set_max_records):<br>required: **false**<br><p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.</p> <p>Default: <code>100</code></p> <p>Constraints: minimum 20, maximum 100.</p><br>
    ///   - [`marker(impl Into<String>)`](crate::operation::describe_integrations::builders::DescribeIntegrationsFluentBuilder::marker) / [`set_marker(Option<String>)`](crate::operation::describe_integrations::builders::DescribeIntegrationsFluentBuilder::set_marker):<br>required: **false**<br><p>An optional pagination token provided by a previous <code>DescribeIntegrations</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p><br>
    ///   - [`filters(DescribeIntegrationsFilter)`](crate::operation::describe_integrations::builders::DescribeIntegrationsFluentBuilder::filters) / [`set_filters(Option<Vec::<DescribeIntegrationsFilter>>)`](crate::operation::describe_integrations::builders::DescribeIntegrationsFluentBuilder::set_filters):<br>required: **false**<br><p>A filter that specifies one or more resources to return.</p><br>
    /// - On success, responds with [`DescribeIntegrationsOutput`](crate::operation::describe_integrations::DescribeIntegrationsOutput) with field(s):
    ///   - [`marker(Option<String>)`](crate::operation::describe_integrations::DescribeIntegrationsOutput::marker): <p>A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>Marker</code> parameter and retrying the command. If the <code>Marker</code> field is empty, all response records have been retrieved for the request.</p>
    ///   - [`integrations(Option<Vec::<Integration>>)`](crate::operation::describe_integrations::DescribeIntegrationsOutput::integrations): <p>List of integrations that are described.</p>
    /// - On failure, responds with [`SdkError<DescribeIntegrationsError>`](crate::operation::describe_integrations::DescribeIntegrationsError)
    pub fn describe_integrations(&self) -> crate::operation::describe_integrations::builders::DescribeIntegrationsFluentBuilder {
        crate::operation::describe_integrations::builders::DescribeIntegrationsFluentBuilder::new(self.handle.clone())
    }
}
