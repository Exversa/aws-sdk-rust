// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_put_storage_configuration_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::put_storage_configuration::PutStorageConfigurationInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.disallow_ingest_null_na_n {
        object.key("disallowIngestNullNaN").boolean(*var_1);
    }
    if let Some(var_2) = &input.disassociated_data_storage {
        object.key("disassociatedDataStorage").string(var_2.as_str());
    }
    if let Some(var_3) = &input.multi_layer_storage {
        #[allow(unused_mut)]
        let mut object_4 = object.key("multiLayerStorage").start_object();
        crate::protocol_serde::shape_multi_layer_storage::ser_multi_layer_storage(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.retention_period {
        #[allow(unused_mut)]
        let mut object_6 = object.key("retentionPeriod").start_object();
        crate::protocol_serde::shape_retention_period::ser_retention_period(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.storage_type {
        object.key("storageType").string(var_7.as_str());
    }
    if let Some(var_8) = &input.warm_tier {
        object.key("warmTier").string(var_8.as_str());
    }
    if let Some(var_9) = &input.warm_tier_retention_period {
        #[allow(unused_mut)]
        let mut object_10 = object.key("warmTierRetentionPeriod").start_object();
        crate::protocol_serde::shape_warm_tier_retention_period::ser_warm_tier_retention_period(&mut object_10, var_9)?;
        object_10.finish();
    }
    Ok(())
}
