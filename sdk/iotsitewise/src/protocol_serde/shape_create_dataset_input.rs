// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_dataset_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_dataset::CreateDatasetInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.client_token {
        object.key("clientToken").string(var_1.as_str());
    }
    if let Some(var_2) = &input.dataset_description {
        object.key("datasetDescription").string(var_2.as_str());
    }
    if let Some(var_3) = &input.dataset_id {
        object.key("datasetId").string(var_3.as_str());
    }
    if let Some(var_4) = &input.dataset_name {
        object.key("datasetName").string(var_4.as_str());
    }
    if let Some(var_5) = &input.dataset_source {
        #[allow(unused_mut)]
        let mut object_6 = object.key("datasetSource").start_object();
        crate::protocol_serde::shape_dataset_source::ser_dataset_source(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.tags {
        #[allow(unused_mut)]
        let mut object_8 = object.key("tags").start_object();
        for (key_9, value_10) in var_7 {
            {
                object_8.key(key_9.as_str()).string(value_10.as_str());
            }
        }
        object_8.finish();
    }
    Ok(())
}
