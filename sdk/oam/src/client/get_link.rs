// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetLink`](crate::operation::get_link::builders::GetLinkFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`identifier(impl Into<String>)`](crate::operation::get_link::builders::GetLinkFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::get_link::builders::GetLinkFluentBuilder::set_identifier):<br>required: **true**<br><p>The ARN of the link to retrieve information for.</p><br>
    ///   - [`include_tags(bool)`](crate::operation::get_link::builders::GetLinkFluentBuilder::include_tags) / [`set_include_tags(Option<bool>)`](crate::operation::get_link::builders::GetLinkFluentBuilder::set_include_tags):<br>required: **false**<br><p>Specifies whether to include the tags associated with the link in the response. When <code>IncludeTags</code> is set to <code>true</code> and the caller has the required permission, <code>oam:ListTagsForResource</code>, the API will return the tags for the specified resource. If the caller doesn't have the required permission, <code>oam:ListTagsForResource</code>, the API will raise an exception.</p> <p>The default value is <code>false</code>.</p><br>
    /// - On success, responds with [`GetLinkOutput`](crate::operation::get_link::GetLinkOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::operation::get_link::GetLinkOutput::arn): <p>The ARN of the link.</p>
    ///   - [`id(Option<String>)`](crate::operation::get_link::GetLinkOutput::id): <p>The random ID string that Amazon Web Services generated as part of the link ARN.</p>
    ///   - [`label(Option<String>)`](crate::operation::get_link::GetLinkOutput::label): <p>The label that you assigned to this link, with the variables resolved to their actual values.</p>
    ///   - [`label_template(Option<String>)`](crate::operation::get_link::GetLinkOutput::label_template): <p>The exact label template that was specified when the link was created, with the template variables not resolved.</p>
    ///   - [`resource_types(Option<Vec::<String>>)`](crate::operation::get_link::GetLinkOutput::resource_types): <p>The resource types supported by this link.</p>
    ///   - [`sink_arn(Option<String>)`](crate::operation::get_link::GetLinkOutput::sink_arn): <p>The ARN of the sink that is used for this link.</p>
    ///   - [`tags(Option<HashMap::<String, String>>)`](crate::operation::get_link::GetLinkOutput::tags): <p>The tags assigned to the link.</p>
    ///   - [`link_configuration(Option<LinkConfiguration>)`](crate::operation::get_link::GetLinkOutput::link_configuration): <p>This structure includes filters that specify which metric namespaces and which log groups are shared from the source account to the monitoring account.</p>
    /// - On failure, responds with [`SdkError<GetLinkError>`](crate::operation::get_link::GetLinkError)
    pub fn get_link(&self) -> crate::operation::get_link::builders::GetLinkFluentBuilder {
        crate::operation::get_link::builders::GetLinkFluentBuilder::new(self.handle.clone())
    }
}
