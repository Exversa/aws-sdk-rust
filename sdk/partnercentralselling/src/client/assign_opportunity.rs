// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AssignOpportunity`](crate::operation::assign_opportunity::builders::AssignOpportunityFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`catalog(impl Into<String>)`](crate::operation::assign_opportunity::builders::AssignOpportunityFluentBuilder::catalog) / [`set_catalog(Option<String>)`](crate::operation::assign_opportunity::builders::AssignOpportunityFluentBuilder::set_catalog):<br>required: **true**<br><p>Specifies the catalog associated with the request. This field takes a string value from a predefined list: <code>AWS</code> or <code>Sandbox</code>. The catalog determines which environment the opportunity is assigned in. Use <code>AWS</code> to assign real opportunities in the Amazon Web Services catalog, and <code>Sandbox</code> for testing in secure, isolated environments.</p><br>
    ///   - [`identifier(impl Into<String>)`](crate::operation::assign_opportunity::builders::AssignOpportunityFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::assign_opportunity::builders::AssignOpportunityFluentBuilder::set_identifier):<br>required: **true**<br><p>Requires the <code>Opportunity</code>'s unique identifier when you want to assign it to another user. Provide the correct identifier so the intended opportunity is reassigned.</p><br>
    ///   - [`assignee(AssigneeContact)`](crate::operation::assign_opportunity::builders::AssignOpportunityFluentBuilder::assignee) / [`set_assignee(Option<AssigneeContact>)`](crate::operation::assign_opportunity::builders::AssignOpportunityFluentBuilder::set_assignee):<br>required: **true**<br><p>Specifies the user or team member responsible for managing the assigned opportunity. This field identifies the <i>Assignee</i> based on the partner's internal team structure. Ensure that the email address is associated with a registered user in your Partner Central account.</p><br>
    /// - On success, responds with [`AssignOpportunityOutput`](crate::operation::assign_opportunity::AssignOpportunityOutput)
    /// - On failure, responds with [`SdkError<AssignOpportunityError>`](crate::operation::assign_opportunity::AssignOpportunityError)
    pub fn assign_opportunity(&self) -> crate::operation::assign_opportunity::builders::AssignOpportunityFluentBuilder {
        crate::operation::assign_opportunity::builders::AssignOpportunityFluentBuilder::new(self.handle.clone())
    }
}
