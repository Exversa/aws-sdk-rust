// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DisassociateOpportunity`](crate::operation::disassociate_opportunity::builders::DisassociateOpportunityFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`catalog(impl Into<String>)`](crate::operation::disassociate_opportunity::builders::DisassociateOpportunityFluentBuilder::catalog) / [`set_catalog(Option<String>)`](crate::operation::disassociate_opportunity::builders::DisassociateOpportunityFluentBuilder::set_catalog):<br>required: **true**<br><p>Specifies the catalog associated with the request. This field takes a string value from a predefined list: <code>AWS</code> or <code>Sandbox</code>. The catalog determines which environment the opportunity disassociation is made in. Use <code>AWS</code> to disassociate opportunities in the Amazon Web Services catalog, and <code>Sandbox</code> to test in a secure and isolated environment.</p><br>
    ///   - [`opportunity_identifier(impl Into<String>)`](crate::operation::disassociate_opportunity::builders::DisassociateOpportunityFluentBuilder::opportunity_identifier) / [`set_opportunity_identifier(Option<String>)`](crate::operation::disassociate_opportunity::builders::DisassociateOpportunityFluentBuilder::set_opportunity_identifier):<br>required: **true**<br><p>The opportunity's unique identifier for when you want to disassociate it from related entities. This identifier is crucial to ensure the correct opportunity is updated, especially in environments with numerous opportunities.</p> <p>Validation: Ensure that the identifier provided corresponds to an existing opportunity in the Amazon Web Services system because incorrect identifiers result in an error and no changes are made.</p><br>
    ///   - [`related_entity_type(RelatedEntityType)`](crate::operation::disassociate_opportunity::builders::DisassociateOpportunityFluentBuilder::related_entity_type) / [`set_related_entity_type(Option<RelatedEntityType>)`](crate::operation::disassociate_opportunity::builders::DisassociateOpportunityFluentBuilder::set_related_entity_type):<br>required: **true**<br><p>The type of the entity that you're disassociating from the opportunity. When you specify the entity type, it helps the system correctly process the disassociation request and ensures that the right connections are removed.</p> <p>Examples of entity types include Partner Solution, Amazon Web Services product, and Amazon Web Services Marketplace offer. Ensure that the value matches one of the expected entity types.</p> <p>Validation: Provide a valid entity type to ensure successful disassociation. Invalid or incorrect entity types result in an error.</p><br>
    ///   - [`related_entity_identifier(impl Into<String>)`](crate::operation::disassociate_opportunity::builders::DisassociateOpportunityFluentBuilder::related_entity_identifier) / [`set_related_entity_identifier(Option<String>)`](crate::operation::disassociate_opportunity::builders::DisassociateOpportunityFluentBuilder::set_related_entity_identifier):<br>required: **true**<br><p>The related entity's identifier that you want to disassociate from the opportunity. Depending on the type of entity, this could be a simple identifier or an Amazon Resource Name (ARN) for entities managed through Amazon Web Services Marketplace.</p> <p>For Amazon Web Services Marketplace entities, use the Amazon Web Services Marketplace API to obtain the necessary ARNs. For guidance on retrieving these ARNs, refer to <a href="https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/welcome.html"> Amazon Web Services Marketplace Catalog API</a> .</p> <p>Validation: Ensure the identifier or ARN is valid and corresponds to an existing related entity. An incorrect or invalid identifier results in an error.</p><br>
    /// - On success, responds with [`DisassociateOpportunityOutput`](crate::operation::disassociate_opportunity::DisassociateOpportunityOutput)
    /// - On failure, responds with [`SdkError<DisassociateOpportunityError>`](crate::operation::disassociate_opportunity::DisassociateOpportunityError)
    pub fn disassociate_opportunity(&self) -> crate::operation::disassociate_opportunity::builders::DisassociateOpportunityFluentBuilder {
        crate::operation::disassociate_opportunity::builders::DisassociateOpportunityFluentBuilder::new(self.handle.clone())
    }
}
