// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetEngagementInvitation`](crate::operation::get_engagement_invitation::builders::GetEngagementInvitationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`catalog(impl Into<String>)`](crate::operation::get_engagement_invitation::builders::GetEngagementInvitationFluentBuilder::catalog) / [`set_catalog(Option<String>)`](crate::operation::get_engagement_invitation::builders::GetEngagementInvitationFluentBuilder::set_catalog):<br>required: **true**<br><p>Specifies the catalog associated with the request. The field accepts values from the predefined set: <code>AWS</code> for live operations or <code>Sandbox</code> for testing environments.</p><br>
    ///   - [`identifier(impl Into<String>)`](crate::operation::get_engagement_invitation::builders::GetEngagementInvitationFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::get_engagement_invitation::builders::GetEngagementInvitationFluentBuilder::set_identifier):<br>required: **true**<br><p>Specifies the unique identifier for the engagement invitation being retrieved.</p><br>
    /// - On success, responds with [`GetEngagementInvitationOutput`](crate::operation::get_engagement_invitation::GetEngagementInvitationOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::operation::get_engagement_invitation::GetEngagementInvitationOutput::arn): <p>The Amazon Resource Name (ARN) that uniquely identifies the engagement invitation.</p>
    ///   - [`payload_type(Option<EngagementInvitationPayloadType>)`](crate::operation::get_engagement_invitation::GetEngagementInvitationOutput::payload_type): <p>The type of payload contained in the engagement invitation, indicating what data or context the payload covers.</p>
    ///   - [`id(String)`](crate::operation::get_engagement_invitation::GetEngagementInvitationOutput::id): <p>Unique identifier assigned to the engagement invitation being retrieved.</p>
    ///   - [`engagement_title(Option<String>)`](crate::operation::get_engagement_invitation::GetEngagementInvitationOutput::engagement_title): <p>The title of the engagement invitation, summarizing the purpose or key objectives of the opportunity shared by AWS.</p>
    ///   - [`status(Option<InvitationStatus>)`](crate::operation::get_engagement_invitation::GetEngagementInvitationOutput::status): <p>The current status of the engagement invitation (e.g., <code>Accepted</code>, <code>Pending</code>, or <code>Rejected</code>).</p>
    ///   - [`invitation_date(Option<DateTime>)`](crate::operation::get_engagement_invitation::GetEngagementInvitationOutput::invitation_date): <p>The date when the engagement invitation was sent to the partner.</p>
    ///   - [`expiration_date(Option<DateTime>)`](crate::operation::get_engagement_invitation::GetEngagementInvitationOutput::expiration_date): <p>Indicates the date on which the engagement invitation will expire if not accepted by the partner.</p>
    ///   - [`sender_aws_account_id(Option<String>)`](crate::operation::get_engagement_invitation::GetEngagementInvitationOutput::sender_aws_account_id): <p>Specifies the AWS Account ID of the sender, which identifies the AWS team responsible for sharing the engagement invitation.</p>
    ///   - [`sender_company_name(Option<String>)`](crate::operation::get_engagement_invitation::GetEngagementInvitationOutput::sender_company_name): <p>The name of the AWS organization or team that sent the engagement invitation.</p>
    ///   - [`receiver(Option<Receiver>)`](crate::operation::get_engagement_invitation::GetEngagementInvitationOutput::receiver): <p>Information about the partner organization or team that received the engagement invitation, including contact details and identifiers.</p>
    ///   - [`catalog(String)`](crate::operation::get_engagement_invitation::GetEngagementInvitationOutput::catalog): <p>Indicates the catalog from which the engagement invitation details are retrieved. This field helps in identifying the appropriate catalog (e.g., <code>AWS</code> or <code>Sandbox</code>) used in the request.</p>
    ///   - [`rejection_reason(Option<String>)`](crate::operation::get_engagement_invitation::GetEngagementInvitationOutput::rejection_reason): <p>If the engagement invitation was rejected, this field specifies the reason provided by the partner for the rejection.</p>
    ///   - [`payload(Option<Payload>)`](crate::operation::get_engagement_invitation::GetEngagementInvitationOutput::payload): <p>Details of the engagement invitation payload, including specific data relevant to the invitation's contents, such as customer information and opportunity insights.</p>
    /// - On failure, responds with [`SdkError<GetEngagementInvitationError>`](crate::operation::get_engagement_invitation::GetEngagementInvitationError)
    pub fn get_engagement_invitation(&self) -> crate::operation::get_engagement_invitation::builders::GetEngagementInvitationFluentBuilder {
        crate::operation::get_engagement_invitation::builders::GetEngagementInvitationFluentBuilder::new(self.handle.clone())
    }
}
