// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListSolutions`](crate::operation::list_solutions::builders::ListSolutionsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_solutions::builders::ListSolutionsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`catalog(impl Into<String>)`](crate::operation::list_solutions::builders::ListSolutionsFluentBuilder::catalog) / [`set_catalog(Option<String>)`](crate::operation::list_solutions::builders::ListSolutionsFluentBuilder::set_catalog):<br>required: **true**<br><p>Specifies the catalog associated with the request. This field takes a string value from a predefined list: <code>AWS</code> or <code>Sandbox</code>. The catalog determines which environment the solutions are listed in. Use <code>AWS</code> to list solutions in the Amazon Web Services catalog, and <code>Sandbox</code> to list solutions in a secure and isolated testing environment.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_solutions::builders::ListSolutionsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_solutions::builders::ListSolutionsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results returned by a single call. This value must be provided in the next call to retrieve the next set of results.</p> <p>Default: 20</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_solutions::builders::ListSolutionsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_solutions::builders::ListSolutionsFluentBuilder::set_next_token):<br>required: **false**<br><p>A pagination token used to retrieve the next set of results in subsequent calls. This token is included in the response only if there are additional result pages available.</p><br>
    ///   - [`sort(SolutionSort)`](crate::operation::list_solutions::builders::ListSolutionsFluentBuilder::sort) / [`set_sort(Option<SolutionSort>)`](crate::operation::list_solutions::builders::ListSolutionsFluentBuilder::set_sort):<br>required: **false**<br><p>Object that configures sorting done on the response. Default <code>Sort.SortBy</code> is <code>Identifier</code>.</p><br>
    ///   - [`status(SolutionStatus)`](crate::operation::list_solutions::builders::ListSolutionsFluentBuilder::status) / [`set_status(Option<Vec::<SolutionStatus>>)`](crate::operation::list_solutions::builders::ListSolutionsFluentBuilder::set_status):<br>required: **false**<br><p>Filters solutions based on their status. This filter helps partners manage their solution portfolios effectively.</p><br>
    ///   - [`identifier(impl Into<String>)`](crate::operation::list_solutions::builders::ListSolutionsFluentBuilder::identifier) / [`set_identifier(Option<Vec::<String>>)`](crate::operation::list_solutions::builders::ListSolutionsFluentBuilder::set_identifier):<br>required: **false**<br><p>Filters the solutions based on their unique identifier. Use this filter to retrieve specific solutions by providing the solution's identifier for accurate results.</p><br>
    ///   - [`category(impl Into<String>)`](crate::operation::list_solutions::builders::ListSolutionsFluentBuilder::category) / [`set_category(Option<Vec::<String>>)`](crate::operation::list_solutions::builders::ListSolutionsFluentBuilder::set_category):<br>required: **false**<br><p>Filters the solutions based on the category to which they belong. This allows partners to search for solutions within specific categories, such as <code>Software</code>, <code>Consulting</code>, or <code>Managed Services</code>.</p><br>
    /// - On success, responds with [`ListSolutionsOutput`](crate::operation::list_solutions::ListSolutionsOutput) with field(s):
    ///   - [`solution_summaries(Vec::<SolutionBase>)`](crate::operation::list_solutions::ListSolutionsOutput::solution_summaries): <p>An array with minimal details for solutions matching the request criteria.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_solutions::ListSolutionsOutput::next_token): <p>A pagination token used to retrieve the next set of results in subsequent calls. This token is included in the response only if there are additional result pages available.</p>
    /// - On failure, responds with [`SdkError<ListSolutionsError>`](crate::operation::list_solutions::ListSolutionsError)
    pub fn list_solutions(&self) -> crate::operation::list_solutions::builders::ListSolutionsFluentBuilder {
        crate::operation::list_solutions::builders::ListSolutionsFluentBuilder::new(self.handle.clone())
    }
}
