// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateEngagement`](crate::operation::create_engagement::builders::CreateEngagementFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`catalog(impl Into<String>)`](crate::operation::create_engagement::builders::CreateEngagementFluentBuilder::catalog) / [`set_catalog(Option<String>)`](crate::operation::create_engagement::builders::CreateEngagementFluentBuilder::set_catalog):<br>required: **true**<br><p>The <code>CreateEngagementRequest$Catalog</code> parameter specifies the catalog related to the engagement. Accepted values are <code>AWS</code> and <code>Sandbox</code>, which determine the environment in which the engagement is managed.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_engagement::builders::CreateEngagementFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_engagement::builders::CreateEngagementFluentBuilder::set_client_token):<br>required: **true**<br><p>The <code>CreateEngagementRequest$ClientToken</code> parameter specifies a unique, case-sensitive identifier to ensure that the request is handled exactly once. The value must not exceed sixty-four alphanumeric characters.</p><br>
    ///   - [`title(impl Into<String>)`](crate::operation::create_engagement::builders::CreateEngagementFluentBuilder::title) / [`set_title(Option<String>)`](crate::operation::create_engagement::builders::CreateEngagementFluentBuilder::set_title):<br>required: **true**<br><p>Specifies the title of the <code>Engagement</code>.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_engagement::builders::CreateEngagementFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_engagement::builders::CreateEngagementFluentBuilder::set_description):<br>required: **true**<br><p>Provides a description of the <code>Engagement</code>.</p><br>
    ///   - [`contexts(EngagementContextDetails)`](crate::operation::create_engagement::builders::CreateEngagementFluentBuilder::contexts) / [`set_contexts(Option<Vec::<EngagementContextDetails>>)`](crate::operation::create_engagement::builders::CreateEngagementFluentBuilder::set_contexts):<br>required: **false**<br><p>The <code>Contexts</code> field is a required array of objects, with a maximum of 5 contexts allowed, specifying detailed information about customer projects associated with the Engagement. Each context object contains a <code>Type</code> field indicating the context type, which must be <code>CustomerProject</code> in this version, and a <code>Payload</code> field containing the <code>CustomerProject</code> details. The <code>CustomerProject</code> object is composed of two main components: <code>Customer</code> and <code>Project</code>. The <code>Customer</code> object includes information such as <code>CompanyName</code>, <code>WebsiteUrl</code>, <code>Industry</code>, and <code>CountryCode</code>, providing essential details about the customer. The <code>Project</code> object contains <code>Title</code>, <code>BusinessProblem</code>, and <code>TargetCompletionDate</code>, offering insights into the specific project associated with the customer. This structure allows comprehensive context to be included within the Engagement, facilitating effective collaboration between parties by providing relevant customer and project information.</p><br>
    /// - On success, responds with [`CreateEngagementOutput`](crate::operation::create_engagement::CreateEngagementOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::operation::create_engagement::CreateEngagementOutput::id): <p>Unique identifier assigned to the newly created engagement.</p>
    ///   - [`arn(Option<String>)`](crate::operation::create_engagement::CreateEngagementOutput::arn): <p>The Amazon Resource Name (ARN) that identifies the engagement.</p>
    /// - On failure, responds with [`SdkError<CreateEngagementError>`](crate::operation::create_engagement::CreateEngagementError)
    pub fn create_engagement(&self) -> crate::operation::create_engagement::builders::CreateEngagementFluentBuilder {
        crate::operation::create_engagement::builders::CreateEngagementFluentBuilder::new(self.handle.clone())
    }
}
