// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetOpportunity`](crate::operation::get_opportunity::builders::GetOpportunityFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`catalog(impl Into<String>)`](crate::operation::get_opportunity::builders::GetOpportunityFluentBuilder::catalog) / [`set_catalog(Option<String>)`](crate::operation::get_opportunity::builders::GetOpportunityFluentBuilder::set_catalog):<br>required: **true**<br><p>Specifies the catalog associated with the request. This field takes a string value from a predefined list: <code>AWS</code> or <code>Sandbox</code>. The catalog determines which environment the opportunity is fetched from. Use <code>AWS</code> to retrieve opportunities in the Amazon Web Services catalog, and <code>Sandbox</code> to retrieve opportunities in a secure, isolated testing environment.</p><br>
    ///   - [`identifier(impl Into<String>)`](crate::operation::get_opportunity::builders::GetOpportunityFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::get_opportunity::builders::GetOpportunityFluentBuilder::set_identifier):<br>required: **true**<br><p>Read-only, system generated <code>Opportunity</code> unique identifier.</p><br>
    /// - On success, responds with [`GetOpportunityOutput`](crate::operation::get_opportunity::GetOpportunityOutput) with field(s):
    ///   - [`catalog(String)`](crate::operation::get_opportunity::GetOpportunityOutput::catalog): <p>Specifies the catalog associated with the request. This field takes a string value from a predefined list: <code>AWS</code> or <code>Sandbox</code>. The catalog determines which environment the opportunity information is retrieved from. Use <code>AWS</code> to retrieve opportunities in the Amazon Web Services catalog, and <code>Sandbox</code> to retrieve opportunities in a secure and isolated testing environment.</p>
    ///   - [`primary_needs_from_aws(Option<Vec::<PrimaryNeedFromAws>>)`](crate::operation::get_opportunity::GetOpportunityOutput::primary_needs_from_aws): <p>Identifies the type of support the partner needs from Amazon Web Services.</p> <p>Valid values:</p> <ul>  <li>   <p>Cosell—Architectural Validation: Confirmation from Amazon Web Services that the partner's proposed solution architecture is aligned with Amazon Web Services best practices and poses minimal architectural risks.</p></li>  <li>   <p>Cosell—Business Presentation: Request Amazon Web Services seller's participation in a joint customer presentation.</p></li>  <li>   <p>Cosell—Competitive Information: Access to Amazon Web Services competitive resources and support for the partner's proposed solution.</p></li>  <li>   <p>Cosell—Pricing Assistance: Connect with an Amazon Web Services seller for support situations where a partner may be receiving an upfront discount on a service (for example: EDP deals).</p></li>  <li>   <p>Cosell—Technical Consultation: Connect with an Amazon Web Services Solutions Architect to address the partner's questions about the proposed solution.</p></li>  <li>   <p>Cosell—Total Cost of Ownership Evaluation: Assistance with quoting different cost savings of proposed solutions on Amazon Web Services versus on-premises or a traditional hosting environment.</p></li>  <li>   <p>Cosell—Deal Support: Request Amazon Web Services seller's support to progress the opportunity (for example: joint customer call, strategic positioning).</p></li>  <li>   <p>Cosell—Support for Public Tender/RFx: Opportunity related to the public sector where the partner needs Amazon Web Services RFx support.</p></li>  <li>   <p>Do Not Need Support from Amazon Web Services Sales Rep: Indicates that a partner doesn't need support from an Amazon Web Services sales representative, and the partner solely manages the opportunity. It's possible to request coselling support on these opportunities at any stage during their lifecycle. Also known as, for-visibility-only (FVO) opportunity.</p></li> </ul>
    ///   - [`national_security(Option<NationalSecurity>)`](crate::operation::get_opportunity::GetOpportunityOutput::national_security): <p>Indicates whether the <code>Opportunity</code> pertains to a national security project. This field must be set to <code>true</code> only when the customer's industry is <i>Government</i>. Additional privacy and security measures apply during the review and management process for opportunities marked as <code>NationalSecurity</code>.</p>
    ///   - [`partner_opportunity_identifier(Option<String>)`](crate::operation::get_opportunity::GetOpportunityOutput::partner_opportunity_identifier): <p>Specifies the opportunity's unique identifier in the partner's CRM system. This value is essential to track and reconcile because it's included in the outbound payload sent back to the partner.</p>
    ///   - [`customer(Option<Customer>)`](crate::operation::get_opportunity::GetOpportunityOutput::customer): <p>Specifies details of the customer associated with the <code>Opportunity</code>.</p>
    ///   - [`project(Option<Project>)`](crate::operation::get_opportunity::GetOpportunityOutput::project): <p>An object that contains project details summary for the <code>Opportunity</code>.</p>
    ///   - [`opportunity_type(Option<OpportunityType>)`](crate::operation::get_opportunity::GetOpportunityOutput::opportunity_type): <p>Specifies the opportunity type as renewal, new, or expansion.</p> <p>Opportunity types:</p> <ul>  <li>   <p>New opportunity: Represents a new business opportunity with a potential customer that's not previously engaged with your solutions or services.</p></li>  <li>   <p>Renewal opportunity: Represents an opportunity to renew an existing contract or subscription with a current customer, which helps to ensure service continuity.</p></li>  <li>   <p>Expansion opportunity: Represents an opportunity to expand the scope of a customer's contract or subscription, either by adding new services or increasing the volume of existing services.</p></li> </ul>
    ///   - [`marketing(Option<Marketing>)`](crate::operation::get_opportunity::GetOpportunityOutput::marketing): <p>An object that contains marketing details for the <code>Opportunity</code>.</p>
    ///   - [`software_revenue(Option<SoftwareRevenue>)`](crate::operation::get_opportunity::GetOpportunityOutput::software_revenue): <p>Specifies details of a customer's procurement terms. Required only for partners in eligible programs.</p>
    ///   - [`id(String)`](crate::operation::get_opportunity::GetOpportunityOutput::id): <p>Read-only, system generated <code>Opportunity</code> unique identifier.</p>
    ///   - [`last_modified_date(DateTime)`](crate::operation::get_opportunity::GetOpportunityOutput::last_modified_date): <p><code>DateTime</code> when the opportunity was last modified.</p>
    ///   - [`created_date(DateTime)`](crate::operation::get_opportunity::GetOpportunityOutput::created_date): <p><code>DateTime</code> when the <code>Opportunity</code> was last created.</p>
    ///   - [`related_entity_identifiers(Option<RelatedEntityIdentifiers>)`](crate::operation::get_opportunity::GetOpportunityOutput::related_entity_identifiers): <p>Provides information about the associations of other entities with the opportunity. These entities include identifiers for <code>AWSProducts</code>, <code>Partner Solutions</code>, and <code>AWSMarketplaceOffers</code>.</p>
    ///   - [`life_cycle(Option<LifeCycle>)`](crate::operation::get_opportunity::GetOpportunityOutput::life_cycle): <p>An object that contains lifecycle details for the <code>Opportunity</code>.</p>
    ///   - [`opportunity_team(Option<Vec::<Contact>>)`](crate::operation::get_opportunity::GetOpportunityOutput::opportunity_team): <p>Represents the internal team handling the opportunity. Specify the members involved in collaborating on this opportunity within the partner's organization.</p>
    /// - On failure, responds with [`SdkError<GetOpportunityError>`](crate::operation::get_opportunity::GetOpportunityError)
    pub fn get_opportunity(&self) -> crate::operation::get_opportunity::builders::GetOpportunityFluentBuilder {
        crate::operation::get_opportunity::builders::GetOpportunityFluentBuilder::new(self.handle.clone())
    }
}
