// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateAutoshiftObserverNotificationStatus`](crate::operation::update_autoshift_observer_notification_status::builders::UpdateAutoshiftObserverNotificationStatusFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`status(AutoshiftObserverNotificationStatus)`](crate::operation::update_autoshift_observer_notification_status::builders::UpdateAutoshiftObserverNotificationStatusFluentBuilder::status) / [`set_status(Option<AutoshiftObserverNotificationStatus>)`](crate::operation::update_autoshift_observer_notification_status::builders::UpdateAutoshiftObserverNotificationStatusFluentBuilder::set_status):<br>required: **true**<br><p>The status to set for autoshift observer notification. If the status is <code>ENABLED</code>, Route 53 ARC includes all autoshift events when you use the Amazon EventBridge pattern <code>Autoshift In Progress</code>. When the status is <code>DISABLED</code>, Route 53 ARC includes only autoshift events for autoshifts when one or more of your resources is included in the autoshift.</p><br>
    /// - On success, responds with [`UpdateAutoshiftObserverNotificationStatusOutput`](crate::operation::update_autoshift_observer_notification_status::UpdateAutoshiftObserverNotificationStatusOutput) with field(s):
    ///   - [`status(AutoshiftObserverNotificationStatus)`](crate::operation::update_autoshift_observer_notification_status::UpdateAutoshiftObserverNotificationStatusOutput::status): <p>The status for autoshift observer notification.</p>
    /// - On failure, responds with [`SdkError<UpdateAutoshiftObserverNotificationStatusError>`](crate::operation::update_autoshift_observer_notification_status::UpdateAutoshiftObserverNotificationStatusError)
    pub fn update_autoshift_observer_notification_status(
        &self,
    ) -> crate::operation::update_autoshift_observer_notification_status::builders::UpdateAutoshiftObserverNotificationStatusFluentBuilder {
        crate::operation::update_autoshift_observer_notification_status::builders::UpdateAutoshiftObserverNotificationStatusFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
