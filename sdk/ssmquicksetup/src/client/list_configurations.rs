// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListConfigurations`](crate::operation::list_configurations::builders::ListConfigurationsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_configurations::builders::ListConfigurationsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`starting_token(impl Into<String>)`](crate::operation::list_configurations::builders::ListConfigurationsFluentBuilder::starting_token) / [`set_starting_token(Option<String>)`](crate::operation::list_configurations::builders::ListConfigurationsFluentBuilder::set_starting_token):<br>required: **false**<br><p>The token to use when requesting a specific set of items from a list.</p><br>
    ///   - [`max_items(i32)`](crate::operation::list_configurations::builders::ListConfigurationsFluentBuilder::max_items) / [`set_max_items(Option<i32>)`](crate::operation::list_configurations::builders::ListConfigurationsFluentBuilder::set_max_items):<br>required: **false**<br><p>Specifies the maximum number of configurations that are returned by the request.</p><br>
    ///   - [`filters(Filter)`](crate::operation::list_configurations::builders::ListConfigurationsFluentBuilder::filters) / [`set_filters(Option<Vec::<Filter>>)`](crate::operation::list_configurations::builders::ListConfigurationsFluentBuilder::set_filters):<br>required: **false**<br><p>Filters the results returned by the request.</p><br>
    ///   - [`manager_arn(impl Into<String>)`](crate::operation::list_configurations::builders::ListConfigurationsFluentBuilder::manager_arn) / [`set_manager_arn(Option<String>)`](crate::operation::list_configurations::builders::ListConfigurationsFluentBuilder::set_manager_arn):<br>required: **false**<br><p>The ARN of the configuration manager.</p><br>
    ///   - [`configuration_definition_id(impl Into<String>)`](crate::operation::list_configurations::builders::ListConfigurationsFluentBuilder::configuration_definition_id) / [`set_configuration_definition_id(Option<String>)`](crate::operation::list_configurations::builders::ListConfigurationsFluentBuilder::set_configuration_definition_id):<br>required: **false**<br><p>The ID of the configuration definition.</p><br>
    /// - On success, responds with [`ListConfigurationsOutput`](crate::operation::list_configurations::ListConfigurationsOutput) with field(s):
    ///   - [`configurations_list(Option<Vec::<ConfigurationSummary>>)`](crate::operation::list_configurations::ListConfigurationsOutput::configurations_list): <p>An array of configurations.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_configurations::ListConfigurationsOutput::next_token): <p>The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.</p>
    /// - On failure, responds with [`SdkError<ListConfigurationsError>`](crate::operation::list_configurations::ListConfigurationsError)
    pub fn list_configurations(&self) -> crate::operation::list_configurations::builders::ListConfigurationsFluentBuilder {
        crate::operation::list_configurations::builders::ListConfigurationsFluentBuilder::new(self.handle.clone())
    }
}
