// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`BatchGetPolicy`](crate::operation::batch_get_policy::builders::BatchGetPolicyFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`requests(BatchGetPolicyInputItem)`](crate::operation::batch_get_policy::builders::BatchGetPolicyFluentBuilder::requests) / [`set_requests(Option<Vec::<BatchGetPolicyInputItem>>)`](crate::operation::batch_get_policy::builders::BatchGetPolicyFluentBuilder::set_requests):<br>required: **true**<br><p>An array of up to 100 policies you want information about.</p><br>
    /// - On success, responds with [`BatchGetPolicyOutput`](crate::operation::batch_get_policy::BatchGetPolicyOutput) with field(s):
    ///   - [`results(Vec::<BatchGetPolicyOutputItem>)`](crate::operation::batch_get_policy::BatchGetPolicyOutput::results): <p>Information about the policies listed in the request that were successfully returned. These results are returned in the order they were requested.</p>
    ///   - [`errors(Vec::<BatchGetPolicyErrorItem>)`](crate::operation::batch_get_policy::BatchGetPolicyOutput::errors): <p>Information about the policies from the request that resulted in an error. These results are returned in the order they were requested.</p>
    /// - On failure, responds with [`SdkError<BatchGetPolicyError>`](crate::operation::batch_get_policy::BatchGetPolicyError)
    pub fn batch_get_policy(&self) -> crate::operation::batch_get_policy::builders::BatchGetPolicyFluentBuilder {
        crate::operation::batch_get_policy::builders::BatchGetPolicyFluentBuilder::new(self.handle.clone())
    }
}
