// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListSourceResources`](crate::operation::list_source_resources::builders::ListSourceResourcesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_source_resources::builders::ListSourceResourcesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`progress_update_stream(impl Into<String>)`](crate::operation::list_source_resources::builders::ListSourceResourcesFluentBuilder::progress_update_stream) / [`set_progress_update_stream(Option<String>)`](crate::operation::list_source_resources::builders::ListSourceResourcesFluentBuilder::set_progress_update_stream):<br>required: **true**<br><p>The name of the progress-update stream, which is used for access control as well as a namespace for migration-task names that is implicitly linked to your AWS account. The progress-update stream must uniquely identify the migration tool as it is used for all updates made by the tool; however, it does not need to be unique for each AWS account because it is scoped to the AWS account.</p><br>
    ///   - [`migration_task_name(impl Into<String>)`](crate::operation::list_source_resources::builders::ListSourceResourcesFluentBuilder::migration_task_name) / [`set_migration_task_name(Option<String>)`](crate::operation::list_source_resources::builders::ListSourceResourcesFluentBuilder::set_migration_task_name):<br>required: **true**<br><p>A unique identifier that references the migration task. <i>Do not store confidential data in this field.</i></p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_source_resources::builders::ListSourceResourcesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_source_resources::builders::ListSourceResourcesFluentBuilder::set_next_token):<br>required: **false**<br><p>If <code>NextToken</code> was returned by a previous call, there are more results available. The value of <code>NextToken</code> is a unique pagination token for each page. To retrieve the next page of results, specify the <code>NextToken</code> value that the previous call returned. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_source_resources::builders::ListSourceResourcesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_source_resources::builders::ListSourceResourcesFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to include in the response. If more results exist than the value that you specify here for <code>MaxResults</code>, the response will include a token that you can use to retrieve the next set of results.</p><br>
    /// - On success, responds with [`ListSourceResourcesOutput`](crate::operation::list_source_resources::ListSourceResourcesOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::operation::list_source_resources::ListSourceResourcesOutput::next_token): <p>If the response includes a <code>NextToken</code> value, that means that there are more results available. The value of <code>NextToken</code> is a unique pagination token for each page. To retrieve the next page of results, call this API again and specify this <code>NextToken</code> value in the request. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error.</p>
    ///   - [`source_resource_list(Option<Vec::<SourceResource>>)`](crate::operation::list_source_resources::ListSourceResourcesOutput::source_resource_list): <p>The list of source resources.</p>
    /// - On failure, responds with [`SdkError<ListSourceResourcesError>`](crate::operation::list_source_resources::ListSourceResourcesError)
    pub fn list_source_resources(&self) -> crate::operation::list_source_resources::builders::ListSourceResourcesFluentBuilder {
        crate::operation::list_source_resources::builders::ListSourceResourcesFluentBuilder::new(self.handle.clone())
    }
}
