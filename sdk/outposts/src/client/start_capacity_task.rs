// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartCapacityTask`](crate::operation::start_capacity_task::builders::StartCapacityTaskFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`outpost_identifier(impl Into<String>)`](crate::operation::start_capacity_task::builders::StartCapacityTaskFluentBuilder::outpost_identifier) / [`set_outpost_identifier(Option<String>)`](crate::operation::start_capacity_task::builders::StartCapacityTaskFluentBuilder::set_outpost_identifier):<br>required: **true**<br><p>The ID or ARN of the Outposts associated with the specified capacity task.</p><br>
    ///   - [`order_id(impl Into<String>)`](crate::operation::start_capacity_task::builders::StartCapacityTaskFluentBuilder::order_id) / [`set_order_id(Option<String>)`](crate::operation::start_capacity_task::builders::StartCapacityTaskFluentBuilder::set_order_id):<br>required: **false**<br><p>The ID of the Amazon Web Services Outposts order associated with the specified capacity task.</p><br>
    ///   - [`asset_id(impl Into<String>)`](crate::operation::start_capacity_task::builders::StartCapacityTaskFluentBuilder::asset_id) / [`set_asset_id(Option<String>)`](crate::operation::start_capacity_task::builders::StartCapacityTaskFluentBuilder::set_asset_id):<br>required: **false**<br><p>The ID of the Outpost asset. An Outpost asset can be a single server within an Outposts rack or an Outposts server configuration.</p><br>
    ///   - [`instance_pools(InstanceTypeCapacity)`](crate::operation::start_capacity_task::builders::StartCapacityTaskFluentBuilder::instance_pools) / [`set_instance_pools(Option<Vec::<InstanceTypeCapacity>>)`](crate::operation::start_capacity_task::builders::StartCapacityTaskFluentBuilder::set_instance_pools):<br>required: **true**<br><p>The instance pools specified in the capacity task.</p><br>
    ///   - [`instances_to_exclude(InstancesToExclude)`](crate::operation::start_capacity_task::builders::StartCapacityTaskFluentBuilder::instances_to_exclude) / [`set_instances_to_exclude(Option<InstancesToExclude>)`](crate::operation::start_capacity_task::builders::StartCapacityTaskFluentBuilder::set_instances_to_exclude):<br>required: **false**<br><p>List of user-specified running instances that must not be stopped in order to free up the capacity needed to run the capacity task.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::start_capacity_task::builders::StartCapacityTaskFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::start_capacity_task::builders::StartCapacityTaskFluentBuilder::set_dry_run):<br>required: **false**<br><p>You can request a dry run to determine if the instance type and instance size changes is above or below available instance capacity. Requesting a dry run does not make any changes to your plan.</p><br>
    ///   - [`task_action_on_blocking_instances(TaskActionOnBlockingInstances)`](crate::operation::start_capacity_task::builders::StartCapacityTaskFluentBuilder::task_action_on_blocking_instances) / [`set_task_action_on_blocking_instances(Option<TaskActionOnBlockingInstances>)`](crate::operation::start_capacity_task::builders::StartCapacityTaskFluentBuilder::set_task_action_on_blocking_instances):<br>required: **false**<br><p>Specify one of the following options in case an instance is blocking the capacity task from running.</p> <ul>  <li>   <p><code>WAIT_FOR_EVACUATION</code> - Checks every 10 minutes over 48 hours to determine if instances have stopped and capacity is available to complete the task.</p></li>  <li>   <p><code>FAIL_TASK</code> - The capacity task fails.</p></li> </ul><br>
    /// - On success, responds with [`StartCapacityTaskOutput`](crate::operation::start_capacity_task::StartCapacityTaskOutput) with field(s):
    ///   - [`capacity_task_id(Option<String>)`](crate::operation::start_capacity_task::StartCapacityTaskOutput::capacity_task_id): <p>ID of the capacity task that you want to start.</p>
    ///   - [`outpost_id(Option<String>)`](crate::operation::start_capacity_task::StartCapacityTaskOutput::outpost_id): <p>ID of the Outpost associated with the capacity task.</p>
    ///   - [`order_id(Option<String>)`](crate::operation::start_capacity_task::StartCapacityTaskOutput::order_id): <p>ID of the Amazon Web Services Outposts order of the host associated with the capacity task.</p>
    ///   - [`asset_id(Option<String>)`](crate::operation::start_capacity_task::StartCapacityTaskOutput::asset_id): <p>The ID of the asset. An Outpost asset can be a single server within an Outposts rack or an Outposts server configuration.</p>
    ///   - [`requested_instance_pools(Option<Vec::<InstanceTypeCapacity>>)`](crate::operation::start_capacity_task::StartCapacityTaskOutput::requested_instance_pools): <p>List of the instance pools requested in the specified capacity task.</p>
    ///   - [`instances_to_exclude(Option<InstancesToExclude>)`](crate::operation::start_capacity_task::StartCapacityTaskOutput::instances_to_exclude): <p>User-specified instances that must not be stopped in order to free up the capacity needed to run the capacity task.</p>
    ///   - [`dry_run(bool)`](crate::operation::start_capacity_task::StartCapacityTaskOutput::dry_run): <p>Results of the dry run showing if the specified capacity task is above or below the available instance capacity.</p>
    ///   - [`capacity_task_status(Option<CapacityTaskStatus>)`](crate::operation::start_capacity_task::StartCapacityTaskOutput::capacity_task_status): <p>Status of the specified capacity task.</p>
    ///   - [`failed(Option<CapacityTaskFailure>)`](crate::operation::start_capacity_task::StartCapacityTaskOutput::failed): <p>Reason that the specified capacity task failed.</p>
    ///   - [`creation_date(Option<DateTime>)`](crate::operation::start_capacity_task::StartCapacityTaskOutput::creation_date): <p>Date that the specified capacity task was created.</p>
    ///   - [`completion_date(Option<DateTime>)`](crate::operation::start_capacity_task::StartCapacityTaskOutput::completion_date): <p>Date that the specified capacity task ran successfully.</p>
    ///   - [`last_modified_date(Option<DateTime>)`](crate::operation::start_capacity_task::StartCapacityTaskOutput::last_modified_date): <p>Date that the specified capacity task was last modified.</p>
    ///   - [`task_action_on_blocking_instances(Option<TaskActionOnBlockingInstances>)`](crate::operation::start_capacity_task::StartCapacityTaskOutput::task_action_on_blocking_instances): <p>User-specified option in case an instance is blocking the capacity task from running.</p> <ul>  <li>   <p><code>WAIT_FOR_EVACUATION</code> - Checks every 10 minutes over 48 hours to determine if instances have stopped and capacity is available to complete the task.</p></li>  <li>   <p><code>FAIL_TASK</code> - The capacity task fails.</p></li> </ul>
    /// - On failure, responds with [`SdkError<StartCapacityTaskError>`](crate::operation::start_capacity_task::StartCapacityTaskError)
    pub fn start_capacity_task(&self) -> crate::operation::start_capacity_task::builders::StartCapacityTaskFluentBuilder {
        crate::operation::start_capacity_task::builders::StartCapacityTaskFluentBuilder::new(self.handle.clone())
    }
}
