// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetConfiguredModelAlgorithmAssociation`](crate::operation::get_configured_model_algorithm_association::builders::GetConfiguredModelAlgorithmAssociationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configured_model_algorithm_association_arn(impl Into<String>)`](crate::operation::get_configured_model_algorithm_association::builders::GetConfiguredModelAlgorithmAssociationFluentBuilder::configured_model_algorithm_association_arn) / [`set_configured_model_algorithm_association_arn(Option<String>)`](crate::operation::get_configured_model_algorithm_association::builders::GetConfiguredModelAlgorithmAssociationFluentBuilder::set_configured_model_algorithm_association_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the configured model algorithm association that you want to return information about.</p><br>
    ///   - [`membership_identifier(impl Into<String>)`](crate::operation::get_configured_model_algorithm_association::builders::GetConfiguredModelAlgorithmAssociationFluentBuilder::membership_identifier) / [`set_membership_identifier(Option<String>)`](crate::operation::get_configured_model_algorithm_association::builders::GetConfiguredModelAlgorithmAssociationFluentBuilder::set_membership_identifier):<br>required: **true**<br><p>The membership ID of the member that created the configured model algorithm association.</p><br>
    /// - On success, responds with [`GetConfiguredModelAlgorithmAssociationOutput`](crate::operation::get_configured_model_algorithm_association::GetConfiguredModelAlgorithmAssociationOutput) with field(s):
    ///   - [`create_time(DateTime)`](crate::operation::get_configured_model_algorithm_association::GetConfiguredModelAlgorithmAssociationOutput::create_time): <p>The time at which the configured model algorithm association was created.</p>
    ///   - [`update_time(DateTime)`](crate::operation::get_configured_model_algorithm_association::GetConfiguredModelAlgorithmAssociationOutput::update_time): <p>The most recent time at which the configured model algorithm association was updated.</p>
    ///   - [`configured_model_algorithm_association_arn(String)`](crate::operation::get_configured_model_algorithm_association::GetConfiguredModelAlgorithmAssociationOutput::configured_model_algorithm_association_arn): <p>The Amazon Resource Name (ARN) of the configured model algorithm association.</p>
    ///   - [`membership_identifier(String)`](crate::operation::get_configured_model_algorithm_association::GetConfiguredModelAlgorithmAssociationOutput::membership_identifier): <p>The membership ID of the member that created the configured model algorithm association.</p>
    ///   - [`collaboration_identifier(String)`](crate::operation::get_configured_model_algorithm_association::GetConfiguredModelAlgorithmAssociationOutput::collaboration_identifier): <p>The collaboration ID of the collaboration that contains the configured model algorithm association.</p>
    ///   - [`configured_model_algorithm_arn(String)`](crate::operation::get_configured_model_algorithm_association::GetConfiguredModelAlgorithmAssociationOutput::configured_model_algorithm_arn): <p>The Amazon Resource Name (ARN) of the configured model algorithm that was associated to the collaboration.</p>
    ///   - [`name(String)`](crate::operation::get_configured_model_algorithm_association::GetConfiguredModelAlgorithmAssociationOutput::name): <p>The name of the configured model algorithm association.</p>
    ///   - [`privacy_configuration(Option<PrivacyConfiguration>)`](crate::operation::get_configured_model_algorithm_association::GetConfiguredModelAlgorithmAssociationOutput::privacy_configuration): <p>The privacy configuration information for the configured model algorithm association.</p>
    ///   - [`description(Option<String>)`](crate::operation::get_configured_model_algorithm_association::GetConfiguredModelAlgorithmAssociationOutput::description): <p>The description of the configured model algorithm association.</p>
    ///   - [`tags(Option<HashMap::<String, String>>)`](crate::operation::get_configured_model_algorithm_association::GetConfiguredModelAlgorithmAssociationOutput::tags): <p>The optional metadata that you applied to the resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.</p> <p>The following basic restrictions apply to tags:</p> <ul>  <li>   <p>Maximum number of tags per resource - 50.</p></li>  <li>   <p>For each resource, each tag key must be unique, and each tag key can have only one value.</p></li>  <li>   <p>Maximum key length - 128 Unicode characters in UTF-8.</p></li>  <li>   <p>Maximum value length - 256 Unicode characters in UTF-8.</p></li>  <li>   <p>If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.</p></li>  <li>   <p>Tag keys and values are case sensitive.</p></li>  <li>   <p>Do not use aws:, AWS:, or any upper or lowercase combination of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has aws as its prefix but the key does not, then Clean Rooms ML considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of aws do not count against your tags per resource limit.</p></li> </ul>
    /// - On failure, responds with [`SdkError<GetConfiguredModelAlgorithmAssociationError>`](crate::operation::get_configured_model_algorithm_association::GetConfiguredModelAlgorithmAssociationError)
    pub fn get_configured_model_algorithm_association(
        &self,
    ) -> crate::operation::get_configured_model_algorithm_association::builders::GetConfiguredModelAlgorithmAssociationFluentBuilder {
        crate::operation::get_configured_model_algorithm_association::builders::GetConfiguredModelAlgorithmAssociationFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
