// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteServiceLinkedConfigurationRecorder`](crate::operation::delete_service_linked_configuration_recorder::builders::DeleteServiceLinkedConfigurationRecorderFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_principal(impl Into<String>)`](crate::operation::delete_service_linked_configuration_recorder::builders::DeleteServiceLinkedConfigurationRecorderFluentBuilder::service_principal) / [`set_service_principal(Option<String>)`](crate::operation::delete_service_linked_configuration_recorder::builders::DeleteServiceLinkedConfigurationRecorderFluentBuilder::set_service_principal):<br>required: **true**<br><p>The service principal of the Amazon Web Services service for the service-linked configuration recorder that you want to delete.</p><br>
    /// - On success, responds with [`DeleteServiceLinkedConfigurationRecorderOutput`](crate::operation::delete_service_linked_configuration_recorder::DeleteServiceLinkedConfigurationRecorderOutput) with field(s):
    ///   - [`arn(String)`](crate::operation::delete_service_linked_configuration_recorder::DeleteServiceLinkedConfigurationRecorderOutput::arn): <p>The Amazon Resource Name (ARN) of the specified configuration recorder.</p>
    ///   - [`name(String)`](crate::operation::delete_service_linked_configuration_recorder::DeleteServiceLinkedConfigurationRecorderOutput::name): <p>The name of the specified configuration recorder.</p>
    /// - On failure, responds with [`SdkError<DeleteServiceLinkedConfigurationRecorderError>`](crate::operation::delete_service_linked_configuration_recorder::DeleteServiceLinkedConfigurationRecorderError)
    pub fn delete_service_linked_configuration_recorder(
        &self,
    ) -> crate::operation::delete_service_linked_configuration_recorder::builders::DeleteServiceLinkedConfigurationRecorderFluentBuilder {
        crate::operation::delete_service_linked_configuration_recorder::builders::DeleteServiceLinkedConfigurationRecorderFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
