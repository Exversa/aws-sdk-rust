// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_get_cost_comparison_drivers_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::get_cost_comparison_drivers::GetCostComparisonDriversInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.billing_view_arn {
        object.key("BillingViewArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.baseline_time_period {
        #[allow(unused_mut)]
        let mut object_3 = object.key("BaselineTimePeriod").start_object();
        crate::protocol_serde::shape_date_interval::ser_date_interval(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.comparison_time_period {
        #[allow(unused_mut)]
        let mut object_5 = object.key("ComparisonTimePeriod").start_object();
        crate::protocol_serde::shape_date_interval::ser_date_interval(&mut object_5, var_4)?;
        object_5.finish();
    }
    if let Some(var_6) = &input.metric_for_comparison {
        object.key("MetricForComparison").string(var_6.as_str());
    }
    if let Some(var_7) = &input.filter {
        #[allow(unused_mut)]
        let mut object_8 = object.key("Filter").start_object();
        crate::protocol_serde::shape_expression::ser_expression(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.group_by {
        let mut array_10 = object.key("GroupBy").start_array();
        for item_11 in var_9 {
            {
                #[allow(unused_mut)]
                let mut object_12 = array_10.value().start_object();
                crate::protocol_serde::shape_group_definition::ser_group_definition(&mut object_12, item_11)?;
                object_12.finish();
            }
        }
        array_10.finish();
    }
    if let Some(var_13) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_13).into()),
        );
    }
    if let Some(var_14) = &input.next_page_token {
        object.key("NextPageToken").string(var_14.as_str());
    }
    Ok(())
}
