// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListEventSources`](crate::operation::list_event_sources::builders::ListEventSourcesFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name_prefix(impl Into<String>)`](crate::operation::list_event_sources::builders::ListEventSourcesFluentBuilder::name_prefix) / [`set_name_prefix(Option<String>)`](crate::operation::list_event_sources::builders::ListEventSourcesFluentBuilder::set_name_prefix):<br>required: **false**<br><p>Specifying this limits the results to only those partner event sources with names that start with the specified prefix.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_event_sources::builders::ListEventSourcesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_event_sources::builders::ListEventSourcesFluentBuilder::set_next_token):<br>required: **false**<br><p>The token returned by a previous call, which you can use to retrieve the next set of results.</p> <p>The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page of results, make the call again using the returned token. Keep all other arguments unchanged.</p> <p>Using an expired pagination token results in an <code>HTTP 400 InvalidToken</code> error.</p><br>
    ///   - [`limit(i32)`](crate::operation::list_event_sources::builders::ListEventSourcesFluentBuilder::limit) / [`set_limit(Option<i32>)`](crate::operation::list_event_sources::builders::ListEventSourcesFluentBuilder::set_limit):<br>required: **false**<br><p>Specifying this limits the number of results returned by this operation. The operation also returns a NextToken which you can use in a subsequent operation to retrieve the next set of results.</p><br>
    /// - On success, responds with [`ListEventSourcesOutput`](crate::operation::list_event_sources::ListEventSourcesOutput) with field(s):
    ///   - [`event_sources(Option<Vec::<EventSource>>)`](crate::operation::list_event_sources::ListEventSourcesOutput::event_sources): <p>The list of event sources.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_event_sources::ListEventSourcesOutput::next_token): <p>A token indicating there are more results available. If there are no more results, no token is included in the response.</p> <p>The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page of results, make the call again using the returned token. Keep all other arguments unchanged.</p> <p>Using an expired pagination token results in an <code>HTTP 400 InvalidToken</code> error.</p>
    /// - On failure, responds with [`SdkError<ListEventSourcesError>`](crate::operation::list_event_sources::ListEventSourcesError)
    pub fn list_event_sources(&self) -> crate::operation::list_event_sources::builders::ListEventSourcesFluentBuilder {
        crate::operation::list_event_sources::builders::ListEventSourcesFluentBuilder::new(self.handle.clone())
    }
}
