// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListNotificationHubs`](crate::operation::list_notification_hubs::builders::ListNotificationHubsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_notification_hubs::builders::ListNotificationHubsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::operation::list_notification_hubs::builders::ListNotificationHubsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_notification_hubs::builders::ListNotificationHubsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of records to list in a single response.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_notification_hubs::builders::ListNotificationHubsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_notification_hubs::builders::ListNotificationHubsFluentBuilder::set_next_token):<br>required: **false**<br><p>A pagination token. Set to null to start listing notification hubs from the start.</p><br>
    /// - On success, responds with [`ListNotificationHubsOutput`](crate::operation::list_notification_hubs::ListNotificationHubsOutput) with field(s):
    ///   - [`notification_hubs(Vec::<NotificationHubOverview>)`](crate::operation::list_notification_hubs::ListNotificationHubsOutput::notification_hubs): <p>The <code>NotificationHubs</code> in the account.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_notification_hubs::ListNotificationHubsOutput::next_token): <p>A pagination token. If a non-null pagination token is returned in a result, pass its value in another request to retrieve more entries.</p>
    /// - On failure, responds with [`SdkError<ListNotificationHubsError>`](crate::operation::list_notification_hubs::ListNotificationHubsError)
    pub fn list_notification_hubs(&self) -> crate::operation::list_notification_hubs::builders::ListNotificationHubsFluentBuilder {
        crate::operation::list_notification_hubs::builders::ListNotificationHubsFluentBuilder::new(self.handle.clone())
    }
}
