// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateEventRule`](crate::operation::create_event_rule::builders::CreateEventRuleFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`notification_configuration_arn(impl Into<String>)`](crate::operation::create_event_rule::builders::CreateEventRuleFluentBuilder::notification_configuration_arn) / [`set_notification_configuration_arn(Option<String>)`](crate::operation::create_event_rule::builders::CreateEventRuleFluentBuilder::set_notification_configuration_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the <code>NotificationConfiguration</code> associated with this <code>EventRule</code>.</p><br>
    ///   - [`source(impl Into<String>)`](crate::operation::create_event_rule::builders::CreateEventRuleFluentBuilder::source) / [`set_source(Option<String>)`](crate::operation::create_event_rule::builders::CreateEventRuleFluentBuilder::set_source):<br>required: **true**<br><p>The matched event source.</p> <p>Must match one of the valid EventBridge sources. Only Amazon Web Services service sourced events are supported. For example, <code>aws.ec2</code> and <code>aws.cloudwatch</code>. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-service-event.html#eb-service-event-delivery-level">Event delivery from Amazon Web Services services</a> in the <i>Amazon EventBridge User Guide</i>.</p><br>
    ///   - [`event_type(impl Into<String>)`](crate::operation::create_event_rule::builders::CreateEventRuleFluentBuilder::event_type) / [`set_event_type(Option<String>)`](crate::operation::create_event_rule::builders::CreateEventRuleFluentBuilder::set_event_type):<br>required: **true**<br><p>The event type to match.</p> <p>Must match one of the valid Amazon EventBridge event types. For example, EC2 Instance State-change Notification and Amazon CloudWatch Alarm State Change. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-service-event.html#eb-service-event-delivery-level">Event delivery from Amazon Web Services services</a> in the <i>Amazon EventBridge User Guide</i>.</p><br>
    ///   - [`event_pattern(impl Into<String>)`](crate::operation::create_event_rule::builders::CreateEventRuleFluentBuilder::event_pattern) / [`set_event_pattern(Option<String>)`](crate::operation::create_event_rule::builders::CreateEventRuleFluentBuilder::set_event_pattern):<br>required: **false**<br><p>An additional event pattern used to further filter the events this <code>EventRule</code> receives.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns.html">Amazon EventBridge event patterns</a> in the <i>Amazon EventBridge User Guide.</i></p><br>
    ///   - [`regions(impl Into<String>)`](crate::operation::create_event_rule::builders::CreateEventRuleFluentBuilder::regions) / [`set_regions(Option<Vec::<String>>)`](crate::operation::create_event_rule::builders::CreateEventRuleFluentBuilder::set_regions):<br>required: **true**<br><p>A list of Amazon Web Services Regions that send events to this <code>EventRule</code>.</p><br>
    /// - On success, responds with [`CreateEventRuleOutput`](crate::operation::create_event_rule::CreateEventRuleOutput) with field(s):
    ///   - [`arn(String)`](crate::operation::create_event_rule::CreateEventRuleOutput::arn): <p>The ARN of the resource.</p>
    ///   - [`notification_configuration_arn(String)`](crate::operation::create_event_rule::CreateEventRuleOutput::notification_configuration_arn): <p>The ARN of a <code>NotificationConfiguration</code>.</p>
    ///   - [`status_summary_by_region(HashMap::<String, EventRuleStatusSummary>)`](crate::operation::create_event_rule::CreateEventRuleOutput::status_summary_by_region): <p>A list of an <code>EventRule</code>'s status by Region. Regions are mapped to <code>EventRuleStatusSummary</code>.</p>
    /// - On failure, responds with [`SdkError<CreateEventRuleError>`](crate::operation::create_event_rule::CreateEventRuleError)
    pub fn create_event_rule(&self) -> crate::operation::create_event_rule::builders::CreateEventRuleFluentBuilder {
        crate::operation::create_event_rule::builders::CreateEventRuleFluentBuilder::new(self.handle.clone())
    }
}
