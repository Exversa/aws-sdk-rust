// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_package_details_for_association(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::PackageDetailsForAssociation,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    {
        object.key("PackageID").string(input.package_id.as_str());
    }
    if let Some(var_1) = &input.prerequisite_package_id_list {
        let mut array_2 = object.key("PrerequisitePackageIDList").start_array();
        for item_3 in var_1 {
            {
                array_2.value().string(item_3.as_str());
            }
        }
        array_2.finish();
    }
    if let Some(var_4) = &input.association_configuration {
        #[allow(unused_mut)]
        let mut object_5 = object.key("AssociationConfiguration").start_object();
        crate::protocol_serde::shape_package_association_configuration::ser_package_association_configuration(&mut object_5, var_4)?;
        object_5.finish();
    }
    Ok(())
}
