// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteMultiRegionClusters`](crate::operation::delete_multi_region_clusters::builders::DeleteMultiRegionClustersFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`linked_cluster_arns(impl Into<String>)`](crate::operation::delete_multi_region_clusters::builders::DeleteMultiRegionClustersFluentBuilder::linked_cluster_arns) / [`set_linked_cluster_arns(Option<Vec::<String>>)`](crate::operation::delete_multi_region_clusters::builders::DeleteMultiRegionClustersFluentBuilder::set_linked_cluster_arns):<br>required: **true**<br><p>The ARNs of the clusters linked to the cluster you want to delete. also deletes these clusters as part of the operation.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::delete_multi_region_clusters::builders::DeleteMultiRegionClustersFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::delete_multi_region_clusters::builders::DeleteMultiRegionClustersFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully. The subsequent retries with the same client token return the result from the original successful request and they have no additional effect.</p> <p>If you don't specify a client token, the Amazon Web Services SDK automatically generates one.</p><br>
    /// - On success, responds with [`DeleteMultiRegionClustersOutput`](crate::operation::delete_multi_region_clusters::DeleteMultiRegionClustersOutput)
    /// - On failure, responds with [`SdkError<DeleteMultiRegionClustersError>`](crate::operation::delete_multi_region_clusters::DeleteMultiRegionClustersError)
    pub fn delete_multi_region_clusters(&self) -> crate::operation::delete_multi_region_clusters::builders::DeleteMultiRegionClustersFluentBuilder {
        crate::operation::delete_multi_region_clusters::builders::DeleteMultiRegionClustersFluentBuilder::new(self.handle.clone())
    }
}
