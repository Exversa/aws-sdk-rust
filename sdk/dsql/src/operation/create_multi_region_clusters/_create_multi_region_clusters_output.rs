// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateMultiRegionClustersOutput {
    /// <p>An array that contains the ARNs of all linked clusters.</p>
    pub linked_cluster_arns: ::std::vec::Vec<::std::string::String>,
    _request_id: Option<String>,
}
impl CreateMultiRegionClustersOutput {
    /// <p>An array that contains the ARNs of all linked clusters.</p>
    pub fn linked_cluster_arns(&self) -> &[::std::string::String] {
        use std::ops::Deref;
        self.linked_cluster_arns.deref()
    }
}
impl ::aws_types::request_id::RequestId for CreateMultiRegionClustersOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateMultiRegionClustersOutput {
    /// Creates a new builder-style object to manufacture [`CreateMultiRegionClustersOutput`](crate::operation::create_multi_region_clusters::CreateMultiRegionClustersOutput).
    pub fn builder() -> crate::operation::create_multi_region_clusters::builders::CreateMultiRegionClustersOutputBuilder {
        crate::operation::create_multi_region_clusters::builders::CreateMultiRegionClustersOutputBuilder::default()
    }
}

/// A builder for [`CreateMultiRegionClustersOutput`](crate::operation::create_multi_region_clusters::CreateMultiRegionClustersOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreateMultiRegionClustersOutputBuilder {
    pub(crate) linked_cluster_arns: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    _request_id: Option<String>,
}
impl CreateMultiRegionClustersOutputBuilder {
    /// Appends an item to `linked_cluster_arns`.
    ///
    /// To override the contents of this collection use [`set_linked_cluster_arns`](Self::set_linked_cluster_arns).
    ///
    /// <p>An array that contains the ARNs of all linked clusters.</p>
    pub fn linked_cluster_arns(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.linked_cluster_arns.unwrap_or_default();
        v.push(input.into());
        self.linked_cluster_arns = ::std::option::Option::Some(v);
        self
    }
    /// <p>An array that contains the ARNs of all linked clusters.</p>
    pub fn set_linked_cluster_arns(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.linked_cluster_arns = input;
        self
    }
    /// <p>An array that contains the ARNs of all linked clusters.</p>
    pub fn get_linked_cluster_arns(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.linked_cluster_arns
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateMultiRegionClustersOutput`](crate::operation::create_multi_region_clusters::CreateMultiRegionClustersOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`linked_cluster_arns`](crate::operation::create_multi_region_clusters::builders::CreateMultiRegionClustersOutputBuilder::linked_cluster_arns)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::create_multi_region_clusters::CreateMultiRegionClustersOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::create_multi_region_clusters::CreateMultiRegionClustersOutput {
            linked_cluster_arns: self.linked_cluster_arns.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "linked_cluster_arns",
                    "linked_cluster_arns was not specified but it is required when building CreateMultiRegionClustersOutput",
                )
            })?,
            _request_id: self._request_id,
        })
    }
}
