// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartMetricsExport`](crate::operation::start_metrics_export::builders::StartMetricsExportFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket_name(impl Into<String>)`](crate::operation::start_metrics_export::builders::StartMetricsExportFluentBuilder::bucket_name) / [`set_bucket_name(Option<String>)`](crate::operation::start_metrics_export::builders::StartMetricsExportFluentBuilder::set_bucket_name):<br>required: **false**<br><p>(Optional) Specifies the name of the Amazon Simple Storage Service bucket where the exported metrics will be stored.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::start_metrics_export::builders::StartMetricsExportFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::start_metrics_export::builders::StartMetricsExportFluentBuilder::set_client_token):<br>required: **false**<br><p>Used for an idempotency token. A client token is a unique, case-sensitive string of up to 64 ASCII characters. You should not reuse the same client token for other API requests.</p><br>
    /// - On success, responds with [`StartMetricsExportOutput`](crate::operation::start_metrics_export::StartMetricsExportOutput) with field(s):
    ///   - [`metrics_export_id(String)`](crate::operation::start_metrics_export::StartMetricsExportOutput::metrics_export_id): <p>Identifier of the metrics export task.</p>
    ///   - [`status(MetricsExportStatusType)`](crate::operation::start_metrics_export::StartMetricsExportOutput::status): <p>Indicates the status of the metrics export task.</p>
    /// - On failure, responds with [`SdkError<StartMetricsExportError>`](crate::operation::start_metrics_export::StartMetricsExportError)
    pub fn start_metrics_export(&self) -> crate::operation::start_metrics_export::builders::StartMetricsExportFluentBuilder {
        crate::operation::start_metrics_export::builders::StartMetricsExportFluentBuilder::new(self.handle.clone())
    }
}
