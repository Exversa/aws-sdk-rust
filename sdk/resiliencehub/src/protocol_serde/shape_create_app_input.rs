// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_app_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_app::CreateAppInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.assessment_schedule {
        object.key("assessmentSchedule").string(var_1.as_str());
    }
    if let Some(var_2) = &input.aws_application_arn {
        object.key("awsApplicationArn").string(var_2.as_str());
    }
    if let Some(var_3) = &input.client_token {
        object.key("clientToken").string(var_3.as_str());
    }
    if let Some(var_4) = &input.description {
        object.key("description").string(var_4.as_str());
    }
    if let Some(var_5) = &input.event_subscriptions {
        let mut array_6 = object.key("eventSubscriptions").start_array();
        for item_7 in var_5 {
            {
                #[allow(unused_mut)]
                let mut object_8 = array_6.value().start_object();
                crate::protocol_serde::shape_event_subscription::ser_event_subscription(&mut object_8, item_7)?;
                object_8.finish();
            }
        }
        array_6.finish();
    }
    if let Some(var_9) = &input.name {
        object.key("name").string(var_9.as_str());
    }
    if let Some(var_10) = &input.permission_model {
        #[allow(unused_mut)]
        let mut object_11 = object.key("permissionModel").start_object();
        crate::protocol_serde::shape_permission_model::ser_permission_model(&mut object_11, var_10)?;
        object_11.finish();
    }
    if let Some(var_12) = &input.policy_arn {
        object.key("policyArn").string(var_12.as_str());
    }
    if let Some(var_13) = &input.tags {
        #[allow(unused_mut)]
        let mut object_14 = object.key("tags").start_object();
        for (key_15, value_16) in var_13 {
            {
                object_14.key(key_15.as_str()).string(value_16.as_str());
            }
        }
        object_14.finish();
    }
    Ok(())
}
