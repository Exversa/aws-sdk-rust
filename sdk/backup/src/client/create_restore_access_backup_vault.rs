// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateRestoreAccessBackupVault`](crate::operation::create_restore_access_backup_vault::builders::CreateRestoreAccessBackupVaultFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`source_backup_vault_arn(impl Into<String>)`](crate::operation::create_restore_access_backup_vault::builders::CreateRestoreAccessBackupVaultFluentBuilder::source_backup_vault_arn) / [`set_source_backup_vault_arn(Option<String>)`](crate::operation::create_restore_access_backup_vault::builders::CreateRestoreAccessBackupVaultFluentBuilder::set_source_backup_vault_arn):<br>required: **true**<br><p>The ARN of the source backup vault containing the recovery points to which temporary access is requested.</p><br>
    ///   - [`backup_vault_name(impl Into<String>)`](crate::operation::create_restore_access_backup_vault::builders::CreateRestoreAccessBackupVaultFluentBuilder::backup_vault_name) / [`set_backup_vault_name(Option<String>)`](crate::operation::create_restore_access_backup_vault::builders::CreateRestoreAccessBackupVaultFluentBuilder::set_backup_vault_name):<br>required: **false**<br><p>The name of the backup vault to associate with an MPA approval team.</p><br>
    ///   - [`backup_vault_tags(impl Into<String>, impl Into<String>)`](crate::operation::create_restore_access_backup_vault::builders::CreateRestoreAccessBackupVaultFluentBuilder::backup_vault_tags) / [`set_backup_vault_tags(Option<HashMap::<String, String>>)`](crate::operation::create_restore_access_backup_vault::builders::CreateRestoreAccessBackupVaultFluentBuilder::set_backup_vault_tags):<br>required: **false**<br><p>Optional tags to assign to the restore access backup vault.</p><br>
    ///   - [`creator_request_id(impl Into<String>)`](crate::operation::create_restore_access_backup_vault::builders::CreateRestoreAccessBackupVaultFluentBuilder::creator_request_id) / [`set_creator_request_id(Option<String>)`](crate::operation::create_restore_access_backup_vault::builders::CreateRestoreAccessBackupVaultFluentBuilder::set_creator_request_id):<br>required: **false**<br><p>A unique string that identifies the request and allows failed requests to be retried without the risk of executing the operation twice.</p><br>
    ///   - [`requester_comment(impl Into<String>)`](crate::operation::create_restore_access_backup_vault::builders::CreateRestoreAccessBackupVaultFluentBuilder::requester_comment) / [`set_requester_comment(Option<String>)`](crate::operation::create_restore_access_backup_vault::builders::CreateRestoreAccessBackupVaultFluentBuilder::set_requester_comment):<br>required: **false**<br><p>A comment explaining the reason for requesting restore access to the backup vault.</p><br>
    /// - On success, responds with [`CreateRestoreAccessBackupVaultOutput`](crate::operation::create_restore_access_backup_vault::CreateRestoreAccessBackupVaultOutput) with field(s):
    ///   - [`restore_access_backup_vault_arn(Option<String>)`](crate::operation::create_restore_access_backup_vault::CreateRestoreAccessBackupVaultOutput::restore_access_backup_vault_arn): <p>The ARN that uniquely identifies the created restore access backup vault.</p>
    ///   - [`vault_state(Option<VaultState>)`](crate::operation::create_restore_access_backup_vault::CreateRestoreAccessBackupVaultOutput::vault_state): <p>The current state of the restore access backup vault.</p>
    ///   - [`restore_access_backup_vault_name(Option<String>)`](crate::operation::create_restore_access_backup_vault::CreateRestoreAccessBackupVaultOutput::restore_access_backup_vault_name): <p>The name of the created restore access backup vault.</p>
    ///   - [`creation_date(Option<DateTime>)`](crate::operation::create_restore_access_backup_vault::CreateRestoreAccessBackupVaultOutput::creation_date): <p>&gt;The date and time when the restore access backup vault was created, in Unix format and Coordinated Universal Time</p>
    /// - On failure, responds with [`SdkError<CreateRestoreAccessBackupVaultError>`](crate::operation::create_restore_access_backup_vault::CreateRestoreAccessBackupVaultError)
    pub fn create_restore_access_backup_vault(
        &self,
    ) -> crate::operation::create_restore_access_backup_vault::builders::CreateRestoreAccessBackupVaultFluentBuilder {
        crate::operation::create_restore_access_backup_vault::builders::CreateRestoreAccessBackupVaultFluentBuilder::new(self.handle.clone())
    }
}
