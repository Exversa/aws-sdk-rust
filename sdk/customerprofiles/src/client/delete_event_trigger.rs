// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteEventTrigger`](crate::operation::delete_event_trigger::builders::DeleteEventTriggerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_name(impl Into<String>)`](crate::operation::delete_event_trigger::builders::DeleteEventTriggerFluentBuilder::domain_name) / [`set_domain_name(Option<String>)`](crate::operation::delete_event_trigger::builders::DeleteEventTriggerFluentBuilder::set_domain_name):<br>required: **true**<br><p>The unique name of the domain.</p><br>
    ///   - [`event_trigger_name(impl Into<String>)`](crate::operation::delete_event_trigger::builders::DeleteEventTriggerFluentBuilder::event_trigger_name) / [`set_event_trigger_name(Option<String>)`](crate::operation::delete_event_trigger::builders::DeleteEventTriggerFluentBuilder::set_event_trigger_name):<br>required: **true**<br><p>The unique name of the event trigger.</p><br>
    /// - On success, responds with [`DeleteEventTriggerOutput`](crate::operation::delete_event_trigger::DeleteEventTriggerOutput) with field(s):
    ///   - [`message(String)`](crate::operation::delete_event_trigger::DeleteEventTriggerOutput::message): <p>A message that indicates the delete request is done.</p>
    /// - On failure, responds with [`SdkError<DeleteEventTriggerError>`](crate::operation::delete_event_trigger::DeleteEventTriggerError)
    pub fn delete_event_trigger(&self) -> crate::operation::delete_event_trigger::builders::DeleteEventTriggerFluentBuilder {
        crate::operation::delete_event_trigger::builders::DeleteEventTriggerFluentBuilder::new(self.handle.clone())
    }
}
