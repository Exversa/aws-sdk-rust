// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateLocationAzureBlob`](crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`container_url(impl Into<String>)`](crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder::container_url) / [`set_container_url(Option<String>)`](crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder::set_container_url):<br>required: **true**<br><p>Specifies the URL of the Azure Blob Storage container involved in your transfer.</p><br>
    ///   - [`authentication_type(AzureBlobAuthenticationType)`](crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder::authentication_type) / [`set_authentication_type(Option<AzureBlobAuthenticationType>)`](crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder::set_authentication_type):<br>required: **true**<br><p>Specifies the authentication method DataSync uses to access your Azure Blob Storage. DataSync can access blob storage using a shared access signature (SAS).</p><br>
    ///   - [`sas_configuration(AzureBlobSasConfiguration)`](crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder::sas_configuration) / [`set_sas_configuration(Option<AzureBlobSasConfiguration>)`](crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder::set_sas_configuration):<br>required: **false**<br><p>Specifies the SAS configuration that allows DataSync to access your Azure Blob Storage.</p><note>  <p>If you provide an authentication token using <code>SasConfiguration</code>, but do not provide secret configuration details using <code>CmkSecretConfig</code> or <code>CustomSecretConfig</code>, then DataSync stores the token using your Amazon Web Services account's secrets manager secret.</p> </note><br>
    ///   - [`blob_type(AzureBlobType)`](crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder::blob_type) / [`set_blob_type(Option<AzureBlobType>)`](crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder::set_blob_type):<br>required: **false**<br><p>Specifies the type of blob that you want your objects or files to be when transferring them into Azure Blob Storage. Currently, DataSync only supports moving data into Azure Blob Storage as block blobs. For more information on blob types, see the <a href="https://learn.microsoft.com/en-us/rest/api/storageservices/understanding-block-blobs--append-blobs--and-page-blobs">Azure Blob Storage documentation</a>.</p><br>
    ///   - [`access_tier(AzureAccessTier)`](crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder::access_tier) / [`set_access_tier(Option<AzureAccessTier>)`](crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder::set_access_tier):<br>required: **false**<br><p>Specifies the access tier that you want your objects or files transferred into. This only applies when using the location as a transfer destination. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/creating-azure-blob-location.html#azure-blob-access-tiers">Access tiers</a>.</p><br>
    ///   - [`subdirectory(impl Into<String>)`](crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder::subdirectory) / [`set_subdirectory(Option<String>)`](crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder::set_subdirectory):<br>required: **false**<br><p>Specifies path segments if you want to limit your transfer to a virtual directory in your container (for example, <code>/my/images</code>).</p><br>
    ///   - [`agent_arns(impl Into<String>)`](crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder::agent_arns) / [`set_agent_arns(Option<Vec::<String>>)`](crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder::set_agent_arns):<br>required: **false**<br><p>(Optional) Specifies the Amazon Resource Name (ARN) of the DataSync agent that can connect with your Azure Blob Storage container. If you are setting up an agentless cross-cloud transfer, you do not need to specify a value for this parameter.</p> <p>You can specify more than one agent. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/multiple-agents.html">Using multiple agents for your transfer</a>.</p><note>  <p>Make sure you configure this parameter correctly when you first create your storage location. You cannot add or remove agents from a storage location after you create it.</p> </note><br>
    ///   - [`tags(TagListEntry)`](crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder::tags) / [`set_tags(Option<Vec::<TagListEntry>>)`](crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder::set_tags):<br>required: **false**<br><p>Specifies labels that help you categorize, filter, and search for your Amazon Web Services resources. We recommend creating at least a name tag for your transfer location.</p><br>
    ///   - [`cmk_secret_config(CmkSecretConfig)`](crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder::cmk_secret_config) / [`set_cmk_secret_config(Option<CmkSecretConfig>)`](crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder::set_cmk_secret_config):<br>required: **false**<br><p>Specifies configuration information for a DataSync-managed secret, which includes the authentication token that DataSync uses to access a specific AzureBlob storage location, with a customer-managed KMS key.</p> <p>When you include this paramater as part of a <code>CreateLocationAzureBlob</code> request, you provide only the KMS key ARN. DataSync uses this KMS key together with the authentication token you specify for <code>SasConfiguration</code> to create a DataSync-managed secret to store the location access credentials.</p> <p>Make sure the DataSync has permission to access the KMS key that you specify.</p><note>  <p>You can use either <code>CmkSecretConfig</code> (with <code>SasConfiguration</code>) or <code>CustomSecretConfig</code> (without <code>SasConfiguration</code>) to provide credentials for a <code>CreateLocationAzureBlob</code> request. Do not provide both parameters for the same request.</p> </note><br>
    ///   - [`custom_secret_config(CustomSecretConfig)`](crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder::custom_secret_config) / [`set_custom_secret_config(Option<CustomSecretConfig>)`](crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder::set_custom_secret_config):<br>required: **false**<br><p>Specifies configuration information for a customer-managed Secrets Manager secret where the authentication token for an AzureBlob storage location is stored in plain text. This configuration includes the secret ARN, and the ARN for an IAM role that provides access to the secret.</p><note>  <p>You can use either <code>CmkSecretConfig</code> (with <code>SasConfiguration</code>) or <code>CustomSecretConfig</code> (without <code>SasConfiguration</code>) to provide credentials for a <code>CreateLocationAzureBlob</code> request. Do not provide both parameters for the same request.</p> </note><br>
    /// - On success, responds with [`CreateLocationAzureBlobOutput`](crate::operation::create_location_azure_blob::CreateLocationAzureBlobOutput) with field(s):
    ///   - [`location_arn(Option<String>)`](crate::operation::create_location_azure_blob::CreateLocationAzureBlobOutput::location_arn): <p>The ARN of the Azure Blob Storage transfer location that you created.</p>
    /// - On failure, responds with [`SdkError<CreateLocationAzureBlobError>`](crate::operation::create_location_azure_blob::CreateLocationAzureBlobError)
    pub fn create_location_azure_blob(&self) -> crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder {
        crate::operation::create_location_azure_blob::builders::CreateLocationAzureBlobFluentBuilder::new(self.handle.clone())
    }
}
