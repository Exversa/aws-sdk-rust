// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateLocationFsxOpenZfs`](crate::operation::update_location_fsx_open_zfs::builders::UpdateLocationFsxOpenZfsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`location_arn(impl Into<String>)`](crate::operation::update_location_fsx_open_zfs::builders::UpdateLocationFsxOpenZfsFluentBuilder::location_arn) / [`set_location_arn(Option<String>)`](crate::operation::update_location_fsx_open_zfs::builders::UpdateLocationFsxOpenZfsFluentBuilder::set_location_arn):<br>required: **true**<br><p>Specifies the Amazon Resource Name (ARN) of the FSx for OpenZFS transfer location that you're updating.</p><br>
    ///   - [`protocol(FsxProtocol)`](crate::operation::update_location_fsx_open_zfs::builders::UpdateLocationFsxOpenZfsFluentBuilder::protocol) / [`set_protocol(Option<FsxProtocol>)`](crate::operation::update_location_fsx_open_zfs::builders::UpdateLocationFsxOpenZfsFluentBuilder::set_protocol):<br>required: **false**<br><p>Specifies the data transfer protocol that DataSync uses to access your Amazon FSx file system.</p><br>
    ///   - [`subdirectory(impl Into<String>)`](crate::operation::update_location_fsx_open_zfs::builders::UpdateLocationFsxOpenZfsFluentBuilder::subdirectory) / [`set_subdirectory(Option<String>)`](crate::operation::update_location_fsx_open_zfs::builders::UpdateLocationFsxOpenZfsFluentBuilder::set_subdirectory):<br>required: **false**<br><p>Specifies a subdirectory in the location's path that must begin with <code>/fsx</code>. DataSync uses this subdirectory to read or write data (depending on whether the file system is a source or destination location).</p><br>
    /// - On success, responds with [`UpdateLocationFsxOpenZfsOutput`](crate::operation::update_location_fsx_open_zfs::UpdateLocationFsxOpenZfsOutput)
    /// - On failure, responds with [`SdkError<UpdateLocationFsxOpenZfsError>`](crate::operation::update_location_fsx_open_zfs::UpdateLocationFsxOpenZfsError)
    pub fn update_location_fsx_open_zfs(&self) -> crate::operation::update_location_fsx_open_zfs::builders::UpdateLocationFsxOpenZfsFluentBuilder {
        crate::operation::update_location_fsx_open_zfs::builders::UpdateLocationFsxOpenZfsFluentBuilder::new(self.handle.clone())
    }
}
