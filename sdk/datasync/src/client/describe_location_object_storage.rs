// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeLocationObjectStorage`](crate::operation::describe_location_object_storage::builders::DescribeLocationObjectStorageFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`location_arn(impl Into<String>)`](crate::operation::describe_location_object_storage::builders::DescribeLocationObjectStorageFluentBuilder::location_arn) / [`set_location_arn(Option<String>)`](crate::operation::describe_location_object_storage::builders::DescribeLocationObjectStorageFluentBuilder::set_location_arn):<br>required: **true**<br><p>Specifies the Amazon Resource Name (ARN) of the object storage system location.</p><br>
    /// - On success, responds with [`DescribeLocationObjectStorageOutput`](crate::operation::describe_location_object_storage::DescribeLocationObjectStorageOutput) with field(s):
    ///   - [`location_arn(Option<String>)`](crate::operation::describe_location_object_storage::DescribeLocationObjectStorageOutput::location_arn): <p>The ARN of the object storage system location.</p>
    ///   - [`location_uri(Option<String>)`](crate::operation::describe_location_object_storage::DescribeLocationObjectStorageOutput::location_uri): <p>The URI of the object storage system location.</p>
    ///   - [`access_key(Option<String>)`](crate::operation::describe_location_object_storage::DescribeLocationObjectStorageOutput::access_key): <p>The access key (for example, a user name) required to authenticate with the object storage system.</p>
    ///   - [`server_port(Option<i32>)`](crate::operation::describe_location_object_storage::DescribeLocationObjectStorageOutput::server_port): <p>The port that your object storage server accepts inbound network traffic on (for example, port 443).</p>
    ///   - [`server_protocol(Option<ObjectStorageServerProtocol>)`](crate::operation::describe_location_object_storage::DescribeLocationObjectStorageOutput::server_protocol): <p>The protocol that your object storage system uses to communicate.</p>
    ///   - [`agent_arns(Option<Vec::<String>>)`](crate::operation::describe_location_object_storage::DescribeLocationObjectStorageOutput::agent_arns): <p>The ARNs of the DataSync agents that can connect with your object storage system.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::operation::describe_location_object_storage::DescribeLocationObjectStorageOutput::creation_time): <p>The time that the location was created.</p>
    ///   - [`server_certificate(Option<Blob>)`](crate::operation::describe_location_object_storage::DescribeLocationObjectStorageOutput::server_certificate): <p>The certificate chain for DataSync to authenticate with your object storage system if the system uses a private or self-signed certificate authority (CA).</p>
    ///   - [`managed_secret_config(Option<ManagedSecretConfig>)`](crate::operation::describe_location_object_storage::DescribeLocationObjectStorageOutput::managed_secret_config): <p>Describes configuration information for a DataSync-managed secret, such as an authentication token or set of credentials that DataSync uses to access a specific transfer location. DataSync uses the default Amazon Web Services-managed KMS key to encrypt this secret in Secrets Manager.</p>
    ///   - [`cmk_secret_config(Option<CmkSecretConfig>)`](crate::operation::describe_location_object_storage::DescribeLocationObjectStorageOutput::cmk_secret_config): <p>Describes configuration information for a DataSync-managed secret, such as an authentication token or set of credentials that DataSync uses to access a specific transfer location, and a customer-managed KMS key.</p>
    ///   - [`custom_secret_config(Option<CustomSecretConfig>)`](crate::operation::describe_location_object_storage::DescribeLocationObjectStorageOutput::custom_secret_config): <p>Describes configuration information for a customer-managed secret, such as an authentication token or set of credentials that DataSync uses to access a specific transfer location, and a customer-managed KMS key.</p>
    /// - On failure, responds with [`SdkError<DescribeLocationObjectStorageError>`](crate::operation::describe_location_object_storage::DescribeLocationObjectStorageError)
    pub fn describe_location_object_storage(
        &self,
    ) -> crate::operation::describe_location_object_storage::builders::DescribeLocationObjectStorageFluentBuilder {
        crate::operation::describe_location_object_storage::builders::DescribeLocationObjectStorageFluentBuilder::new(self.handle.clone())
    }
}
