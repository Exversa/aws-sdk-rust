// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartCacheReport`](crate::operation::start_cache_report::builders::StartCacheReportFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`file_share_arn(impl Into<String>)`](crate::operation::start_cache_report::builders::StartCacheReportFluentBuilder::file_share_arn) / [`set_file_share_arn(Option<String>)`](crate::operation::start_cache_report::builders::StartCacheReportFluentBuilder::set_file_share_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the file share.</p><br>
    ///   - [`role(impl Into<String>)`](crate::operation::start_cache_report::builders::StartCacheReportFluentBuilder::role) / [`set_role(Option<String>)`](crate::operation::start_cache_report::builders::StartCacheReportFluentBuilder::set_role):<br>required: **true**<br><p>The ARN of the IAM role used when saving the cache report to Amazon S3.</p><br>
    ///   - [`location_arn(impl Into<String>)`](crate::operation::start_cache_report::builders::StartCacheReportFluentBuilder::location_arn) / [`set_location_arn(Option<String>)`](crate::operation::start_cache_report::builders::StartCacheReportFluentBuilder::set_location_arn):<br>required: **true**<br><p>The ARN of the Amazon S3 bucket where the cache report will be saved.</p><note>  <p>We do not recommend saving the cache report to the same Amazon S3 bucket for which you are generating the report.</p>  <p>This field does not accept access point ARNs.</p> </note><br>
    ///   - [`bucket_region(impl Into<String>)`](crate::operation::start_cache_report::builders::StartCacheReportFluentBuilder::bucket_region) / [`set_bucket_region(Option<String>)`](crate::operation::start_cache_report::builders::StartCacheReportFluentBuilder::set_bucket_region):<br>required: **true**<br><p>The Amazon Web Services Region of the Amazon S3 bucket associated with the file share for which you want to generate the cache report.</p><br>
    ///   - [`vpc_endpoint_dns_name(impl Into<String>)`](crate::operation::start_cache_report::builders::StartCacheReportFluentBuilder::vpc_endpoint_dns_name) / [`set_vpc_endpoint_dns_name(Option<String>)`](crate::operation::start_cache_report::builders::StartCacheReportFluentBuilder::set_vpc_endpoint_dns_name):<br>required: **false**<br><p>The DNS name of the VPC endpoint associated with the Amazon S3 where you want to save the cache report. Optional.</p><br>
    ///   - [`inclusion_filters(CacheReportFilter)`](crate::operation::start_cache_report::builders::StartCacheReportFluentBuilder::inclusion_filters) / [`set_inclusion_filters(Option<Vec::<CacheReportFilter>>)`](crate::operation::start_cache_report::builders::StartCacheReportFluentBuilder::set_inclusion_filters):<br>required: **false**<br><p>The list of filters and parameters that determine which files are included in the report. You must specify at least one value for <code>InclusionFilters</code> or <code>ExclusionFilters</code> in a <code>StartCacheReport</code> request.</p><br>
    ///   - [`exclusion_filters(CacheReportFilter)`](crate::operation::start_cache_report::builders::StartCacheReportFluentBuilder::exclusion_filters) / [`set_exclusion_filters(Option<Vec::<CacheReportFilter>>)`](crate::operation::start_cache_report::builders::StartCacheReportFluentBuilder::set_exclusion_filters):<br>required: **false**<br><p>The list of filters and parameters that determine which files are excluded from the report. You must specify at least one value for <code>InclusionFilters</code> or <code>ExclusionFilters</code> in a <code>StartCacheReport</code> request.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::start_cache_report::builders::StartCacheReportFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::start_cache_report::builders::StartCacheReportFluentBuilder::set_client_token):<br>required: **true**<br><p>A unique identifier that you use to ensure idempotent report generation if you need to retry an unsuccessful <code>StartCacheReport</code> request. If you retry a request, use the same <code>ClientToken</code> you specified in the initial request.</p><br>
    ///   - [`tags(Tag)`](crate::operation::start_cache_report::builders::StartCacheReportFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::start_cache_report::builders::StartCacheReportFluentBuilder::set_tags):<br>required: **false**<br><p>A list of up to 50 key/value tags that you can assign to the cache report. Using tags can help you categorize your reports and more easily locate them in search results.</p><br>
    /// - On success, responds with [`StartCacheReportOutput`](crate::operation::start_cache_report::StartCacheReportOutput) with field(s):
    ///   - [`cache_report_arn(Option<String>)`](crate::operation::start_cache_report::StartCacheReportOutput::cache_report_arn): <p>The Amazon Resource Name (ARN) of the cache report generated by the <code>StartCacheReport</code> request.</p>
    /// - On failure, responds with [`SdkError<StartCacheReportError>`](crate::operation::start_cache_report::StartCacheReportError)
    pub fn start_cache_report(&self) -> crate::operation::start_cache_report::builders::StartCacheReportFluentBuilder {
        crate::operation::start_cache_report::builders::StartCacheReportFluentBuilder::new(self.handle.clone())
    }
}
