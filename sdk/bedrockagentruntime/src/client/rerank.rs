// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`Rerank`](crate::operation::rerank::builders::RerankFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::rerank::builders::RerankFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`queries(RerankQuery)`](crate::operation::rerank::builders::RerankFluentBuilder::queries) / [`set_queries(Option<Vec::<RerankQuery>>)`](crate::operation::rerank::builders::RerankFluentBuilder::set_queries):<br>required: **true**<br><p>An array of objects, each of which contains information about a query to submit to the reranker model.</p><br>
    ///   - [`sources(RerankSource)`](crate::operation::rerank::builders::RerankFluentBuilder::sources) / [`set_sources(Option<Vec::<RerankSource>>)`](crate::operation::rerank::builders::RerankFluentBuilder::set_sources):<br>required: **true**<br><p>An array of objects, each of which contains information about the sources to rerank.</p><br>
    ///   - [`reranking_configuration(RerankingConfiguration)`](crate::operation::rerank::builders::RerankFluentBuilder::reranking_configuration) / [`set_reranking_configuration(Option<RerankingConfiguration>)`](crate::operation::rerank::builders::RerankFluentBuilder::set_reranking_configuration):<br>required: **true**<br><p>Contains configurations for reranking.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::rerank::builders::RerankFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::rerank::builders::RerankFluentBuilder::set_next_token):<br>required: **false**<br><p>If the total number of results was greater than could fit in a response, a token is returned in the <code>nextToken</code> field. You can enter that token in this field to return the next batch of results.</p><br>
    /// - On success, responds with [`RerankOutput`](crate::operation::rerank::RerankOutput) with field(s):
    ///   - [`results(Vec::<RerankResult>)`](crate::operation::rerank::RerankOutput::results): <p>An array of objects, each of which contains information about the results of reranking.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::rerank::RerankOutput::next_token): <p>If the total number of results is greater than can fit in the response, use this token in the <code>nextToken</code> field when making another request to return the next batch of results.</p>
    /// - On failure, responds with [`SdkError<RerankError>`](crate::operation::rerank::RerankError)
    pub fn rerank(&self) -> crate::operation::rerank::builders::RerankFluentBuilder {
        crate::operation::rerank::builders::RerankFluentBuilder::new(self.handle.clone())
    }
}
