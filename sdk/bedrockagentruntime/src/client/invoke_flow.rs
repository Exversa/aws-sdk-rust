// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`InvokeFlow`](crate::operation::invoke_flow::builders::InvokeFlowFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`flow_identifier(impl Into<String>)`](crate::operation::invoke_flow::builders::InvokeFlowFluentBuilder::flow_identifier) / [`set_flow_identifier(Option<String>)`](crate::operation::invoke_flow::builders::InvokeFlowFluentBuilder::set_flow_identifier):<br>required: **true**<br><p>The unique identifier of the flow.</p><br>
    ///   - [`flow_alias_identifier(impl Into<String>)`](crate::operation::invoke_flow::builders::InvokeFlowFluentBuilder::flow_alias_identifier) / [`set_flow_alias_identifier(Option<String>)`](crate::operation::invoke_flow::builders::InvokeFlowFluentBuilder::set_flow_alias_identifier):<br>required: **true**<br><p>The unique identifier of the flow alias.</p><br>
    ///   - [`inputs(FlowInput)`](crate::operation::invoke_flow::builders::InvokeFlowFluentBuilder::inputs) / [`set_inputs(Option<Vec::<FlowInput>>)`](crate::operation::invoke_flow::builders::InvokeFlowFluentBuilder::set_inputs):<br>required: **true**<br><p>A list of objects, each containing information about an input into the flow.</p><br>
    ///   - [`enable_trace(bool)`](crate::operation::invoke_flow::builders::InvokeFlowFluentBuilder::enable_trace) / [`set_enable_trace(Option<bool>)`](crate::operation::invoke_flow::builders::InvokeFlowFluentBuilder::set_enable_trace):<br>required: **false**<br><p>Specifies whether to return the trace for the flow or not. Traces track inputs and outputs for nodes in the flow. For more information, see <a href="https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html">Track each step in your prompt flow by viewing its trace in Amazon Bedrock</a>.</p><br>
    /// - On success, responds with [`InvokeFlowOutput`](crate::operation::invoke_flow::InvokeFlowOutput) with field(s):
    ///   - [`response_stream(EventReceiver<FlowResponseStream, FlowResponseStreamError>)`](crate::operation::invoke_flow::InvokeFlowOutput::response_stream): <p>The output of the flow, returned as a stream. If there's an error, the error is returned.</p>
    /// - On failure, responds with [`SdkError<InvokeFlowError>`](crate::operation::invoke_flow::InvokeFlowError)
    pub fn invoke_flow(&self) -> crate::operation::invoke_flow::builders::InvokeFlowFluentBuilder {
        crate::operation::invoke_flow::builders::InvokeFlowFluentBuilder::new(self.handle.clone())
    }
}
