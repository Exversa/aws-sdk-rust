// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StopFlowExecution`](crate::operation::stop_flow_execution::builders::StopFlowExecutionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`flow_identifier(impl Into<String>)`](crate::operation::stop_flow_execution::builders::StopFlowExecutionFluentBuilder::flow_identifier) / [`set_flow_identifier(Option<String>)`](crate::operation::stop_flow_execution::builders::StopFlowExecutionFluentBuilder::set_flow_identifier):<br>required: **true**<br><p>The unique identifier of the flow.</p><br>
    ///   - [`flow_alias_identifier(impl Into<String>)`](crate::operation::stop_flow_execution::builders::StopFlowExecutionFluentBuilder::flow_alias_identifier) / [`set_flow_alias_identifier(Option<String>)`](crate::operation::stop_flow_execution::builders::StopFlowExecutionFluentBuilder::set_flow_alias_identifier):<br>required: **true**<br><p>The unique identifier of the flow alias used for the execution.</p><br>
    ///   - [`execution_identifier(impl Into<String>)`](crate::operation::stop_flow_execution::builders::StopFlowExecutionFluentBuilder::execution_identifier) / [`set_execution_identifier(Option<String>)`](crate::operation::stop_flow_execution::builders::StopFlowExecutionFluentBuilder::set_execution_identifier):<br>required: **true**<br><p>The unique identifier of the async execution to stop.</p><br>
    /// - On success, responds with [`StopFlowExecutionOutput`](crate::operation::stop_flow_execution::StopFlowExecutionOutput) with field(s):
    ///   - [`execution_arn(Option<String>)`](crate::operation::stop_flow_execution::StopFlowExecutionOutput::execution_arn): <p>The Amazon Resource Name (ARN) that uniquely identifies the async execution that was stopped.</p>
    ///   - [`status(FlowExecutionStatus)`](crate::operation::stop_flow_execution::StopFlowExecutionOutput::status): <p>The updated status of the async execution after the stop request. This will typically be ABORTED if the execution was successfully stopped.</p>
    /// - On failure, responds with [`SdkError<StopFlowExecutionError>`](crate::operation::stop_flow_execution::StopFlowExecutionError)
    pub fn stop_flow_execution(&self) -> crate::operation::stop_flow_execution::builders::StopFlowExecutionFluentBuilder {
        crate::operation::stop_flow_execution::builders::StopFlowExecutionFluentBuilder::new(self.handle.clone())
    }
}
