// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_prompt_configuration(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::PromptConfiguration,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.prompt_type {
        object.key("promptType").string(var_1.as_str());
    }
    if let Some(var_2) = &input.prompt_creation_mode {
        object.key("promptCreationMode").string(var_2.as_str());
    }
    if let Some(var_3) = &input.prompt_state {
        object.key("promptState").string(var_3.as_str());
    }
    if let Some(var_4) = &input.base_prompt_template {
        object.key("basePromptTemplate").string(var_4.as_str());
    }
    if let Some(var_5) = &input.inference_configuration {
        #[allow(unused_mut)]
        let mut object_6 = object.key("inferenceConfiguration").start_object();
        crate::protocol_serde::shape_inference_configuration::ser_inference_configuration(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.parser_mode {
        object.key("parserMode").string(var_7.as_str());
    }
    if let Some(var_8) = &input.additional_model_request_fields {
        object.key("additionalModelRequestFields").document(var_8);
    }
    Ok(())
}
