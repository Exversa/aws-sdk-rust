// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_summary_metric_query(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::SummaryMetricQuery,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.query_id {
        object.key("QueryId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.metric_name {
        object.key("MetricName").string(var_2.as_str());
    }
    if let Some(var_3) = &input.dimensions {
        let mut array_4 = object.key("Dimensions").start_array();
        for item_5 in var_3 {
            {
                #[allow(unused_mut)]
                let mut object_6 = array_4.value().start_object();
                crate::protocol_serde::shape_dimension::ser_dimension(&mut object_6, item_5)?;
                object_6.finish();
            }
        }
        array_4.finish();
    }
    if let Some(var_7) = &input.aggregation_period {
        object.key("AggregationPeriod").string(var_7.as_str());
    }
    if let Some(var_8) = &input.start_timestamp {
        object
            .key("StartTimestamp")
            .date_time(var_8, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_9) = &input.end_timestamp {
        object
            .key("EndTimestamp")
            .date_time(var_9, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    Ok(())
}
