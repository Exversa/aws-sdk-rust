// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListAccessPointsForDirectoryBuckets`](crate::operation::list_access_points_for_directory_buckets::builders::ListAccessPointsForDirectoryBucketsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_access_points_for_directory_buckets::builders::ListAccessPointsForDirectoryBucketsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`account_id(impl Into<String>)`](crate::operation::list_access_points_for_directory_buckets::builders::ListAccessPointsForDirectoryBucketsFluentBuilder::account_id) / [`set_account_id(Option<String>)`](crate::operation::list_access_points_for_directory_buckets::builders::ListAccessPointsForDirectoryBucketsFluentBuilder::set_account_id):<br>required: **true**<br><p>The Amazon Web Services account ID that owns the access points.</p><br>
    ///   - [`directory_bucket(impl Into<String>)`](crate::operation::list_access_points_for_directory_buckets::builders::ListAccessPointsForDirectoryBucketsFluentBuilder::directory_bucket) / [`set_directory_bucket(Option<String>)`](crate::operation::list_access_points_for_directory_buckets::builders::ListAccessPointsForDirectoryBucketsFluentBuilder::set_directory_bucket):<br>required: **false**<br><p>The name of the directory bucket associated with the access points you want to list.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_access_points_for_directory_buckets::builders::ListAccessPointsForDirectoryBucketsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_access_points_for_directory_buckets::builders::ListAccessPointsForDirectoryBucketsFluentBuilder::set_next_token):<br>required: **false**<br><p>If <code>NextToken</code> is returned, there are more access points available than requested in the <code>maxResults</code> value. The value of <code>NextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_access_points_for_directory_buckets::builders::ListAccessPointsForDirectoryBucketsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_access_points_for_directory_buckets::builders::ListAccessPointsForDirectoryBucketsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of access points that you would like returned in the <code>ListAccessPointsForDirectoryBuckets</code> response. If the directory bucket is associated with more than this number of access points, the results include the pagination token <code>NextToken</code>. Make another call using the <code>NextToken</code> to retrieve more results.</p><br>
    /// - On success, responds with [`ListAccessPointsForDirectoryBucketsOutput`](crate::operation::list_access_points_for_directory_buckets::ListAccessPointsForDirectoryBucketsOutput) with field(s):
    ///   - [`access_point_list(Option<Vec::<AccessPoint>>)`](crate::operation::list_access_points_for_directory_buckets::ListAccessPointsForDirectoryBucketsOutput::access_point_list): <p>Contains identification and configuration information for one or more access points associated with the directory bucket.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_access_points_for_directory_buckets::ListAccessPointsForDirectoryBucketsOutput::next_token): <p>If <code>NextToken</code> is returned, there are more access points available than requested in the <code>maxResults</code> value. The value of <code>NextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours.</p>
    /// - On failure, responds with [`SdkError<ListAccessPointsForDirectoryBucketsError>`](crate::operation::list_access_points_for_directory_buckets::ListAccessPointsForDirectoryBucketsError)
    pub fn list_access_points_for_directory_buckets(
        &self,
    ) -> crate::operation::list_access_points_for_directory_buckets::builders::ListAccessPointsForDirectoryBucketsFluentBuilder {
        crate::operation::list_access_points_for_directory_buckets::builders::ListAccessPointsForDirectoryBucketsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
