// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_srt_caller_source_request(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::SrtCallerSourceRequest,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.decryption {
        #[allow(unused_mut)]
        let mut object_2 = object.key("decryption").start_object();
        crate::protocol_serde::shape_srt_caller_decryption_request::ser_srt_caller_decryption_request(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.minimum_latency {
        object.key("minimumLatency").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_3).into()),
        );
    }
    if let Some(var_4) = &input.srt_listener_address {
        object.key("srtListenerAddress").string(var_4.as_str());
    }
    if let Some(var_5) = &input.srt_listener_port {
        object.key("srtListenerPort").string(var_5.as_str());
    }
    if let Some(var_6) = &input.stream_id {
        object.key("streamId").string(var_6.as_str());
    }
    Ok(())
}
