// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SendMediaMessage`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`destination_phone_number(impl Into<String>)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::destination_phone_number) / [`set_destination_phone_number(Option<String>)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::set_destination_phone_number):<br>required: **true**<br><p>The destination phone number in E.164 format.</p><br>
    ///   - [`origination_identity(impl Into<String>)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::origination_identity) / [`set_origination_identity(Option<String>)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::set_origination_identity):<br>required: **true**<br><p>The origination identity of the message. This can be either the PhoneNumber, PhoneNumberId, PhoneNumberArn, SenderId, SenderIdArn, PoolId, or PoolArn.</p><important>  <p>If you are using a shared AWS End User Messaging SMS and Voice resource then you must use the full Amazon Resource Name(ARN).</p> </important><br>
    ///   - [`message_body(impl Into<String>)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::message_body) / [`set_message_body(Option<String>)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::set_message_body):<br>required: **false**<br><p>The text body of the message.</p><br>
    ///   - [`media_urls(impl Into<String>)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::media_urls) / [`set_media_urls(Option<Vec::<String>>)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::set_media_urls):<br>required: **false**<br><p>An array of URLs to each media file to send.</p> <p>The media files have to be stored in an S3 bucket. Supported media file formats are listed in <a href="https://docs.aws.amazon.com/sms-voice/latest/userguide/mms-limitations-character.html">MMS file types, size and character limits</a>. For more information on creating an S3 bucket and managing objects, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-bucket-overview.html">Creating a bucket</a>, <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/upload-objects.html">Uploading objects</a> in the <i>Amazon S3 User Guide</i>, and <a href="https://docs.aws.amazon.com/sms-voice/latest/userguide/send-mms-message.html#send-mms-message-bucket">Setting up an Amazon S3 bucket for MMS files</a> in the <i>Amazon Web Services End User Messaging SMS User Guide</i>.</p><br>
    ///   - [`configuration_set_name(impl Into<String>)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::set_configuration_set_name):<br>required: **false**<br><p>The name of the configuration set to use. This can be either the ConfigurationSetName or ConfigurationSetArn.</p><br>
    ///   - [`max_price(impl Into<String>)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::max_price) / [`set_max_price(Option<String>)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::set_max_price):<br>required: **false**<br><p>The maximum amount that you want to spend, in US dollars, per each MMS message.</p><br>
    ///   - [`time_to_live(i32)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::time_to_live) / [`set_time_to_live(Option<i32>)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::set_time_to_live):<br>required: **false**<br><p>How long the media message is valid for. By default this is 72 hours.</p><br>
    ///   - [`context(impl Into<String>, impl Into<String>)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::context) / [`set_context(Option<HashMap::<String, String>>)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::set_context):<br>required: **false**<br><p>You can specify custom data in this field. If you do, that data is logged to the event destination.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::set_dry_run):<br>required: **false**<br><p>When set to true, the message is checked and validated, but isn't sent to the end recipient.</p><br>
    ///   - [`protect_configuration_id(impl Into<String>)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::protect_configuration_id) / [`set_protect_configuration_id(Option<String>)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::set_protect_configuration_id):<br>required: **false**<br><p>The unique identifier of the protect configuration to use.</p><br>
    ///   - [`message_feedback_enabled(bool)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::message_feedback_enabled) / [`set_message_feedback_enabled(Option<bool>)`](crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::set_message_feedback_enabled):<br>required: **false**<br><p>Set to true to enable message feedback for the message. When a user receives the message you need to update the message status using <code>PutMessageFeedback</code>.</p><br>
    /// - On success, responds with [`SendMediaMessageOutput`](crate::operation::send_media_message::SendMediaMessageOutput) with field(s):
    ///   - [`message_id(Option<String>)`](crate::operation::send_media_message::SendMediaMessageOutput::message_id): <p>The unique identifier for the message.</p>
    /// - On failure, responds with [`SdkError<SendMediaMessageError>`](crate::operation::send_media_message::SendMediaMessageError)
    pub fn send_media_message(&self) -> crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder {
        crate::operation::send_media_message::builders::SendMediaMessageFluentBuilder::new(self.handle.clone())
    }
}
