// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_send_media_message_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::send_media_message::SendMediaMessageInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.destination_phone_number {
        object.key("DestinationPhoneNumber").string(var_1.as_str());
    }
    if let Some(var_2) = &input.origination_identity {
        object.key("OriginationIdentity").string(var_2.as_str());
    }
    if let Some(var_3) = &input.message_body {
        object.key("MessageBody").string(var_3.as_str());
    }
    if let Some(var_4) = &input.media_urls {
        let mut array_5 = object.key("MediaUrls").start_array();
        for item_6 in var_4 {
            {
                array_5.value().string(item_6.as_str());
            }
        }
        array_5.finish();
    }
    if let Some(var_7) = &input.configuration_set_name {
        object.key("ConfigurationSetName").string(var_7.as_str());
    }
    if let Some(var_8) = &input.max_price {
        object.key("MaxPrice").string(var_8.as_str());
    }
    if let Some(var_9) = &input.time_to_live {
        object.key("TimeToLive").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_9).into()),
        );
    }
    if let Some(var_10) = &input.context {
        #[allow(unused_mut)]
        let mut object_11 = object.key("Context").start_object();
        for (key_12, value_13) in var_10 {
            {
                object_11.key(key_12.as_str()).string(value_13.as_str());
            }
        }
        object_11.finish();
    }
    if let Some(var_14) = &input.dry_run {
        object.key("DryRun").boolean(*var_14);
    }
    if let Some(var_15) = &input.protect_configuration_id {
        object.key("ProtectConfigurationId").string(var_15.as_str());
    }
    if let Some(var_16) = &input.message_feedback_enabled {
        object.key("MessageFeedbackEnabled").boolean(*var_16);
    }
    Ok(())
}
