// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteQueryLoggingConfiguration`](crate::operation::delete_query_logging_configuration::builders::DeleteQueryLoggingConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`workspace_id(impl Into<String>)`](crate::operation::delete_query_logging_configuration::builders::DeleteQueryLoggingConfigurationFluentBuilder::workspace_id) / [`set_workspace_id(Option<String>)`](crate::operation::delete_query_logging_configuration::builders::DeleteQueryLoggingConfigurationFluentBuilder::set_workspace_id):<br>required: **true**<br><p>The ID of the workspace from which to delete the query logging configuration.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::delete_query_logging_configuration::builders::DeleteQueryLoggingConfigurationFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::delete_query_logging_configuration::builders::DeleteQueryLoggingConfigurationFluentBuilder::set_client_token):<br>required: **false**<br><p>(Optional) A unique, case-sensitive identifier that you can provide to ensure the idempotency of the request.</p><br>
    /// - On success, responds with [`DeleteQueryLoggingConfigurationOutput`](crate::operation::delete_query_logging_configuration::DeleteQueryLoggingConfigurationOutput)
    /// - On failure, responds with [`SdkError<DeleteQueryLoggingConfigurationError>`](crate::operation::delete_query_logging_configuration::DeleteQueryLoggingConfigurationError)
    pub fn delete_query_logging_configuration(
        &self,
    ) -> crate::operation::delete_query_logging_configuration::builders::DeleteQueryLoggingConfigurationFluentBuilder {
        crate::operation::delete_query_logging_configuration::builders::DeleteQueryLoggingConfigurationFluentBuilder::new(self.handle.clone())
    }
}
