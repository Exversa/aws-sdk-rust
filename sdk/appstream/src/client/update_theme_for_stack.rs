// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateThemeForStack`](crate::operation::update_theme_for_stack::builders::UpdateThemeForStackFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::operation::update_theme_for_stack::builders::UpdateThemeForStackFluentBuilder::stack_name) / [`set_stack_name(Option<String>)`](crate::operation::update_theme_for_stack::builders::UpdateThemeForStackFluentBuilder::set_stack_name):<br>required: **true**<br><p>The name of the stack for the theme.</p><br>
    ///   - [`footer_links(ThemeFooterLink)`](crate::operation::update_theme_for_stack::builders::UpdateThemeForStackFluentBuilder::footer_links) / [`set_footer_links(Option<Vec::<ThemeFooterLink>>)`](crate::operation::update_theme_for_stack::builders::UpdateThemeForStackFluentBuilder::set_footer_links):<br>required: **false**<br><p>The links that are displayed in the footer of the streaming application catalog page. These links are helpful resources for users, such as the organization's IT support and product marketing sites.</p><br>
    ///   - [`title_text(impl Into<String>)`](crate::operation::update_theme_for_stack::builders::UpdateThemeForStackFluentBuilder::title_text) / [`set_title_text(Option<String>)`](crate::operation::update_theme_for_stack::builders::UpdateThemeForStackFluentBuilder::set_title_text):<br>required: **false**<br><p>The title that is displayed at the top of the browser tab during users' application streaming sessions.</p><br>
    ///   - [`theme_styling(ThemeStyling)`](crate::operation::update_theme_for_stack::builders::UpdateThemeForStackFluentBuilder::theme_styling) / [`set_theme_styling(Option<ThemeStyling>)`](crate::operation::update_theme_for_stack::builders::UpdateThemeForStackFluentBuilder::set_theme_styling):<br>required: **false**<br><p>The color theme that is applied to website links, text, and buttons. These colors are also applied as accents in the background for the streaming application catalog page.</p><br>
    ///   - [`organization_logo_s3_location(S3Location)`](crate::operation::update_theme_for_stack::builders::UpdateThemeForStackFluentBuilder::organization_logo_s3_location) / [`set_organization_logo_s3_location(Option<S3Location>)`](crate::operation::update_theme_for_stack::builders::UpdateThemeForStackFluentBuilder::set_organization_logo_s3_location):<br>required: **false**<br><p>The organization logo that appears on the streaming application catalog page.</p><br>
    ///   - [`favicon_s3_location(S3Location)`](crate::operation::update_theme_for_stack::builders::UpdateThemeForStackFluentBuilder::favicon_s3_location) / [`set_favicon_s3_location(Option<S3Location>)`](crate::operation::update_theme_for_stack::builders::UpdateThemeForStackFluentBuilder::set_favicon_s3_location):<br>required: **false**<br><p>The S3 location of the favicon. The favicon enables users to recognize their application streaming site in a browser full of tabs or bookmarks. It is displayed at the top of the browser tab for the application streaming site during users' streaming sessions.</p><br>
    ///   - [`state(ThemeState)`](crate::operation::update_theme_for_stack::builders::UpdateThemeForStackFluentBuilder::state) / [`set_state(Option<ThemeState>)`](crate::operation::update_theme_for_stack::builders::UpdateThemeForStackFluentBuilder::set_state):<br>required: **false**<br><p>Specifies whether custom branding should be applied to catalog page or not.</p><br>
    ///   - [`attributes_to_delete(ThemeAttribute)`](crate::operation::update_theme_for_stack::builders::UpdateThemeForStackFluentBuilder::attributes_to_delete) / [`set_attributes_to_delete(Option<Vec::<ThemeAttribute>>)`](crate::operation::update_theme_for_stack::builders::UpdateThemeForStackFluentBuilder::set_attributes_to_delete):<br>required: **false**<br><p>The attributes to delete.</p><br>
    /// - On success, responds with [`UpdateThemeForStackOutput`](crate::operation::update_theme_for_stack::UpdateThemeForStackOutput) with field(s):
    ///   - [`theme(Option<Theme>)`](crate::operation::update_theme_for_stack::UpdateThemeForStackOutput::theme): <p>The theme object that contains the metadata of the custom branding.</p>
    /// - On failure, responds with [`SdkError<UpdateThemeForStackError>`](crate::operation::update_theme_for_stack::UpdateThemeForStackError)
    pub fn update_theme_for_stack(&self) -> crate::operation::update_theme_for_stack::builders::UpdateThemeForStackFluentBuilder {
        crate::operation::update_theme_for_stack::builders::UpdateThemeForStackFluentBuilder::new(self.handle.clone())
    }
}
