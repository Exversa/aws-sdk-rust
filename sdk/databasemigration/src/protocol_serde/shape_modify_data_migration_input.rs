// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_modify_data_migration_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::modify_data_migration::ModifyDataMigrationInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.data_migration_identifier {
        object.key("DataMigrationIdentifier").string(var_1.as_str());
    }
    if let Some(var_2) = &input.data_migration_name {
        object.key("DataMigrationName").string(var_2.as_str());
    }
    if let Some(var_3) = &input.enable_cloudwatch_logs {
        object.key("EnableCloudwatchLogs").boolean(*var_3);
    }
    if let Some(var_4) = &input.service_access_role_arn {
        object.key("ServiceAccessRoleArn").string(var_4.as_str());
    }
    if let Some(var_5) = &input.data_migration_type {
        object.key("DataMigrationType").string(var_5.as_str());
    }
    if let Some(var_6) = &input.source_data_settings {
        let mut array_7 = object.key("SourceDataSettings").start_array();
        for item_8 in var_6 {
            {
                #[allow(unused_mut)]
                let mut object_9 = array_7.value().start_object();
                crate::protocol_serde::shape_source_data_setting::ser_source_data_setting(&mut object_9, item_8)?;
                object_9.finish();
            }
        }
        array_7.finish();
    }
    if let Some(var_10) = &input.target_data_settings {
        let mut array_11 = object.key("TargetDataSettings").start_array();
        for item_12 in var_10 {
            {
                #[allow(unused_mut)]
                let mut object_13 = array_11.value().start_object();
                crate::protocol_serde::shape_target_data_setting::ser_target_data_setting(&mut object_13, item_12)?;
                object_13.finish();
            }
        }
        array_11.finish();
    }
    if let Some(var_14) = &input.number_of_jobs {
        object.key("NumberOfJobs").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_14).into()),
        );
    }
    if let Some(var_15) = &input.selection_rules {
        object.key("SelectionRules").string(var_15.as_str());
    }
    Ok(())
}
