// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartDataMigration`](crate::operation::start_data_migration::builders::StartDataMigrationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`data_migration_identifier(impl Into<String>)`](crate::operation::start_data_migration::builders::StartDataMigrationFluentBuilder::data_migration_identifier) / [`set_data_migration_identifier(Option<String>)`](crate::operation::start_data_migration::builders::StartDataMigrationFluentBuilder::set_data_migration_identifier):<br>required: **true**<br><p>The identifier (name or ARN) of the data migration to start.</p><br>
    ///   - [`start_type(StartReplicationMigrationTypeValue)`](crate::operation::start_data_migration::builders::StartDataMigrationFluentBuilder::start_type) / [`set_start_type(Option<StartReplicationMigrationTypeValue>)`](crate::operation::start_data_migration::builders::StartDataMigrationFluentBuilder::set_start_type):<br>required: **true**<br><p>Specifies the start type for the data migration. Valid values include <code>start-replication</code>, <code>reload-target</code>, and <code>resume-processing</code>.</p><br>
    /// - On success, responds with [`StartDataMigrationOutput`](crate::operation::start_data_migration::StartDataMigrationOutput) with field(s):
    ///   - [`data_migration(Option<DataMigration>)`](crate::operation::start_data_migration::StartDataMigrationOutput::data_migration): <p>The data migration that DMS started.</p>
    /// - On failure, responds with [`SdkError<StartDataMigrationError>`](crate::operation::start_data_migration::StartDataMigrationError)
    pub fn start_data_migration(&self) -> crate::operation::start_data_migration::builders::StartDataMigrationFluentBuilder {
        crate::operation::start_data_migration::builders::StartDataMigrationFluentBuilder::new(self.handle.clone())
    }
}
