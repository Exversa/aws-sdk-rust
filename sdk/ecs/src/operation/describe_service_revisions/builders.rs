// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::describe_service_revisions::_describe_service_revisions_output::DescribeServiceRevisionsOutputBuilder;

pub use crate::operation::describe_service_revisions::_describe_service_revisions_input::DescribeServiceRevisionsInputBuilder;

impl crate::operation::describe_service_revisions::builders::DescribeServiceRevisionsInputBuilder {
    /// Sends a request with this input using the given client.
    pub async fn send_with(
        self,
        client: &crate::Client,
    ) -> ::std::result::Result<
        crate::operation::describe_service_revisions::DescribeServiceRevisionsOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::describe_service_revisions::DescribeServiceRevisionsError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let mut fluent_builder = client.describe_service_revisions();
        fluent_builder.inner = self;
        fluent_builder.send().await
    }
}
/// Fluent builder constructing a request to `DescribeServiceRevisions`.
///
/// <p>Describes one or more service revisions.</p>
/// <p>A service revision is a version of the service that includes the values for the Amazon ECS resources (for example, task definition) and the environment resources (for example, load balancers, subnets, and security groups). For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-revision.html">Amazon ECS service revisions</a>.</p>
/// <p>You can't describe a service revision that was created before October 25, 2024.</p>
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct DescribeServiceRevisionsFluentBuilder {
    handle: ::std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::describe_service_revisions::builders::DescribeServiceRevisionsInputBuilder,
    config_override: ::std::option::Option<crate::config::Builder>,
}
impl
    crate::client::customize::internal::CustomizableSend<
        crate::operation::describe_service_revisions::DescribeServiceRevisionsOutput,
        crate::operation::describe_service_revisions::DescribeServiceRevisionsError,
    > for DescribeServiceRevisionsFluentBuilder
{
    fn send(
        self,
        config_override: crate::config::Builder,
    ) -> crate::client::customize::internal::BoxFuture<
        crate::client::customize::internal::SendResult<
            crate::operation::describe_service_revisions::DescribeServiceRevisionsOutput,
            crate::operation::describe_service_revisions::DescribeServiceRevisionsError,
        >,
    > {
        ::std::boxed::Box::pin(async move { self.config_override(config_override).send().await })
    }
}
impl DescribeServiceRevisionsFluentBuilder {
    /// Creates a new `DescribeServiceRevisionsFluentBuilder`.
    pub(crate) fn new(handle: ::std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: ::std::default::Default::default(),
            config_override: ::std::option::Option::None,
        }
    }
    /// Access the DescribeServiceRevisions as a reference.
    pub fn as_input(&self) -> &crate::operation::describe_service_revisions::builders::DescribeServiceRevisionsInputBuilder {
        &self.inner
    }
    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_service_revisions::DescribeServiceRevisionsOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::describe_service_revisions::DescribeServiceRevisionsError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let input = self
            .inner
            .build()
            .map_err(::aws_smithy_runtime_api::client::result::SdkError::construction_failure)?;
        let runtime_plugins = crate::operation::describe_service_revisions::DescribeServiceRevisions::operation_runtime_plugins(
            self.handle.runtime_plugins.clone(),
            &self.handle.conf,
            self.config_override,
        );
        crate::operation::describe_service_revisions::DescribeServiceRevisions::orchestrate(&runtime_plugins, input).await
    }

    /// Consumes this builder, creating a customizable operation that can be modified before being sent.
    pub fn customize(
        self,
    ) -> crate::client::customize::CustomizableOperation<
        crate::operation::describe_service_revisions::DescribeServiceRevisionsOutput,
        crate::operation::describe_service_revisions::DescribeServiceRevisionsError,
        Self,
    > {
        crate::client::customize::CustomizableOperation::new(self)
    }
    pub(crate) fn config_override(mut self, config_override: impl ::std::convert::Into<crate::config::Builder>) -> Self {
        self.set_config_override(::std::option::Option::Some(config_override.into()));
        self
    }

    pub(crate) fn set_config_override(&mut self, config_override: ::std::option::Option<crate::config::Builder>) -> &mut Self {
        self.config_override = config_override;
        self
    }
    ///
    /// Appends an item to `serviceRevisionArns`.
    ///
    /// To override the contents of this collection use [`set_service_revision_arns`](Self::set_service_revision_arns).
    ///
    /// <p>The ARN of the service revision.</p>
    /// <p>You can specify a maximum of 20 ARNs.</p>
    /// <p>You can call <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServiceDeployments.html">ListServiceDeployments</a> to get the ARNs.</p>
    pub fn service_revision_arns(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.service_revision_arns(input.into());
        self
    }
    /// <p>The ARN of the service revision.</p>
    /// <p>You can specify a maximum of 20 ARNs.</p>
    /// <p>You can call <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServiceDeployments.html">ListServiceDeployments</a> to get the ARNs.</p>
    pub fn set_service_revision_arns(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.inner = self.inner.set_service_revision_arns(input);
        self
    }
    /// <p>The ARN of the service revision.</p>
    /// <p>You can specify a maximum of 20 ARNs.</p>
    /// <p>You can call <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServiceDeployments.html">ListServiceDeployments</a> to get the ARNs.</p>
    pub fn get_service_revision_arns(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        self.inner.get_service_revision_arns()
    }
}
