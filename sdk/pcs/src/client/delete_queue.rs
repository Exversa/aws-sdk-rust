// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteQueue`](crate::operation::delete_queue::builders::DeleteQueueFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_identifier(impl Into<String>)`](crate::operation::delete_queue::builders::DeleteQueueFluentBuilder::cluster_identifier) / [`set_cluster_identifier(Option<String>)`](crate::operation::delete_queue::builders::DeleteQueueFluentBuilder::set_cluster_identifier):<br>required: **true**<br><p>The name or ID of the cluster of the queue.</p><br>
    ///   - [`queue_identifier(impl Into<String>)`](crate::operation::delete_queue::builders::DeleteQueueFluentBuilder::queue_identifier) / [`set_queue_identifier(Option<String>)`](crate::operation::delete_queue::builders::DeleteQueueFluentBuilder::set_queue_identifier):<br>required: **true**<br><p>The name or ID of the queue to delete.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::delete_queue::builders::DeleteQueueFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::delete_queue::builders::DeleteQueueFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, the subsequent retries with the same client token return the result from the original successful request and they have no additional effect. If you don't specify a client token, the CLI and SDK automatically generate 1 for you.</p><br>
    /// - On success, responds with [`DeleteQueueOutput`](crate::operation::delete_queue::DeleteQueueOutput)
    /// - On failure, responds with [`SdkError<DeleteQueueError>`](crate::operation::delete_queue::DeleteQueueError)
    pub fn delete_queue(&self) -> crate::operation::delete_queue::builders::DeleteQueueFluentBuilder {
        crate::operation::delete_queue::builders::DeleteQueueFluentBuilder::new(self.handle.clone())
    }
}
