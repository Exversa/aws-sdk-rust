// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateCluster`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::cluster_name) / [`set_cluster_name(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_cluster_name):<br>required: **true**<br><p>A name to identify the cluster. Example: <code>MyCluster</code></p><br>
    ///   - [`scheduler(SchedulerRequest)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::scheduler) / [`set_scheduler(Option<SchedulerRequest>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_scheduler):<br>required: **true**<br><p>The cluster management and job scheduling software associated with the cluster.</p><br>
    ///   - [`size(Size)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::size) / [`set_size(Option<Size>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_size):<br>required: **true**<br><p>A value that determines the maximum number of compute nodes in the cluster and the maximum number of jobs (active and queued).</p> <ul>  <li>   <p><code>SMALL</code>: 32 compute nodes and 256 jobs</p></li>  <li>   <p><code>MEDIUM</code>: 512 compute nodes and 8192 jobs</p></li>  <li>   <p><code>LARGE</code>: 2048 compute nodes and 16,384 jobs</p></li> </ul><br>
    ///   - [`networking(NetworkingRequest)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::networking) / [`set_networking(Option<NetworkingRequest>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_networking):<br>required: **true**<br><p>The networking configuration used to set up the cluster's control plane.</p><br>
    ///   - [`slurm_configuration(ClusterSlurmConfigurationRequest)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::slurm_configuration) / [`set_slurm_configuration(Option<ClusterSlurmConfigurationRequest>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_slurm_configuration):<br>required: **false**<br><p>Additional options related to the Slurm scheduler.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, the subsequent retries with the same client token return the result from the original successful request and they have no additional effect. If you don't specify a client token, the CLI and SDK automatically generate 1 for you.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_tags):<br>required: **false**<br><p>1 or more tags added to the resource. Each tag consists of a tag key and tag value. The tag value is optional and can be an empty string.</p><br>
    /// - On success, responds with [`CreateClusterOutput`](crate::operation::create_cluster::CreateClusterOutput) with field(s):
    ///   - [`cluster(Option<Cluster>)`](crate::operation::create_cluster::CreateClusterOutput::cluster): <p>The cluster resource.</p>
    /// - On failure, responds with [`SdkError<CreateClusterError>`](crate::operation::create_cluster::CreateClusterError)
    pub fn create_cluster(&self) -> crate::operation::create_cluster::builders::CreateClusterFluentBuilder {
        crate::operation::create_cluster::builders::CreateClusterFluentBuilder::new(self.handle.clone())
    }
}
