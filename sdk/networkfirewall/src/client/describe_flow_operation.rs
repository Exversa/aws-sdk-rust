// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeFlowOperation`](crate::operation::describe_flow_operation::builders::DescribeFlowOperationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`firewall_arn(impl Into<String>)`](crate::operation::describe_flow_operation::builders::DescribeFlowOperationFluentBuilder::firewall_arn) / [`set_firewall_arn(Option<String>)`](crate::operation::describe_flow_operation::builders::DescribeFlowOperationFluentBuilder::set_firewall_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the firewall.</p><br>
    ///   - [`availability_zone(impl Into<String>)`](crate::operation::describe_flow_operation::builders::DescribeFlowOperationFluentBuilder::availability_zone) / [`set_availability_zone(Option<String>)`](crate::operation::describe_flow_operation::builders::DescribeFlowOperationFluentBuilder::set_availability_zone):<br>required: **false**<br><p>The ID of the Availability Zone where the firewall is located. For example, <code>us-east-2a</code>.</p> <p>Defines the scope a flow operation. You can use up to 20 filters to configure a single flow operation.</p><br>
    ///   - [`vpc_endpoint_association_arn(impl Into<String>)`](crate::operation::describe_flow_operation::builders::DescribeFlowOperationFluentBuilder::vpc_endpoint_association_arn) / [`set_vpc_endpoint_association_arn(Option<String>)`](crate::operation::describe_flow_operation::builders::DescribeFlowOperationFluentBuilder::set_vpc_endpoint_association_arn):<br>required: **false**<br><p>The Amazon Resource Name (ARN) of a VPC endpoint association.</p><br>
    ///   - [`vpc_endpoint_id(impl Into<String>)`](crate::operation::describe_flow_operation::builders::DescribeFlowOperationFluentBuilder::vpc_endpoint_id) / [`set_vpc_endpoint_id(Option<String>)`](crate::operation::describe_flow_operation::builders::DescribeFlowOperationFluentBuilder::set_vpc_endpoint_id):<br>required: **false**<br><p>A unique identifier for the primary endpoint associated with a firewall.</p><br>
    ///   - [`flow_operation_id(impl Into<String>)`](crate::operation::describe_flow_operation::builders::DescribeFlowOperationFluentBuilder::flow_operation_id) / [`set_flow_operation_id(Option<String>)`](crate::operation::describe_flow_operation::builders::DescribeFlowOperationFluentBuilder::set_flow_operation_id):<br>required: **true**<br><p>A unique identifier for the flow operation. This ID is returned in the responses to start and list commands. You provide to describe commands.</p><br>
    /// - On success, responds with [`DescribeFlowOperationOutput`](crate::operation::describe_flow_operation::DescribeFlowOperationOutput) with field(s):
    ///   - [`firewall_arn(Option<String>)`](crate::operation::describe_flow_operation::DescribeFlowOperationOutput::firewall_arn): <p>The Amazon Resource Name (ARN) of the firewall.</p>
    ///   - [`availability_zone(Option<String>)`](crate::operation::describe_flow_operation::DescribeFlowOperationOutput::availability_zone): <p>The ID of the Availability Zone where the firewall is located. For example, <code>us-east-2a</code>.</p> <p>Defines the scope a flow operation. You can use up to 20 filters to configure a single flow operation.</p>
    ///   - [`vpc_endpoint_association_arn(Option<String>)`](crate::operation::describe_flow_operation::DescribeFlowOperationOutput::vpc_endpoint_association_arn): <p>The Amazon Resource Name (ARN) of a VPC endpoint association.</p>
    ///   - [`vpc_endpoint_id(Option<String>)`](crate::operation::describe_flow_operation::DescribeFlowOperationOutput::vpc_endpoint_id): <p>A unique identifier for the primary endpoint associated with a firewall.</p>
    ///   - [`flow_operation_id(Option<String>)`](crate::operation::describe_flow_operation::DescribeFlowOperationOutput::flow_operation_id): <p>A unique identifier for the flow operation. This ID is returned in the responses to start and list commands. You provide to describe commands.</p>
    ///   - [`flow_operation_type(Option<FlowOperationType>)`](crate::operation::describe_flow_operation::DescribeFlowOperationOutput::flow_operation_type): <p>Defines the type of <code>FlowOperation</code>.</p>
    ///   - [`flow_operation_status(Option<FlowOperationStatus>)`](crate::operation::describe_flow_operation::DescribeFlowOperationOutput::flow_operation_status): <p>Returns the status of the flow operation. This string is returned in the responses to start, list, and describe commands.</p> <p>If the status is <code>COMPLETED_WITH_ERRORS</code>, results may be returned with any number of <code>Flows</code> missing from the response. If the status is <code>FAILED</code>, <code>Flows</code> returned will be empty.</p>
    ///   - [`status_message(Option<String>)`](crate::operation::describe_flow_operation::DescribeFlowOperationOutput::status_message): <p>If the asynchronous operation fails, Network Firewall populates this with the reason for the error or failure. Options include <code>Flow operation error</code> and <code>Flow timeout</code>.</p>
    ///   - [`flow_request_timestamp(Option<DateTime>)`](crate::operation::describe_flow_operation::DescribeFlowOperationOutput::flow_request_timestamp): <p>A timestamp indicating when the Suricata engine identified flows impacted by an operation.</p>
    ///   - [`flow_operation(Option<FlowOperation>)`](crate::operation::describe_flow_operation::DescribeFlowOperationOutput::flow_operation): <p>Returns key information about a flow operation, such as related statuses, unique identifiers, and all filters defined in the operation.</p>
    /// - On failure, responds with [`SdkError<DescribeFlowOperationError>`](crate::operation::describe_flow_operation::DescribeFlowOperationError)
    pub fn describe_flow_operation(&self) -> crate::operation::describe_flow_operation::builders::DescribeFlowOperationFluentBuilder {
        crate::operation::describe_flow_operation::builders::DescribeFlowOperationFluentBuilder::new(self.handle.clone())
    }
}
