// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateVpcEndpointAssociation`](crate::operation::create_vpc_endpoint_association::builders::CreateVpcEndpointAssociationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`firewall_arn(impl Into<String>)`](crate::operation::create_vpc_endpoint_association::builders::CreateVpcEndpointAssociationFluentBuilder::firewall_arn) / [`set_firewall_arn(Option<String>)`](crate::operation::create_vpc_endpoint_association::builders::CreateVpcEndpointAssociationFluentBuilder::set_firewall_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the firewall.</p><br>
    ///   - [`vpc_id(impl Into<String>)`](crate::operation::create_vpc_endpoint_association::builders::CreateVpcEndpointAssociationFluentBuilder::vpc_id) / [`set_vpc_id(Option<String>)`](crate::operation::create_vpc_endpoint_association::builders::CreateVpcEndpointAssociationFluentBuilder::set_vpc_id):<br>required: **true**<br><p>The unique identifier of the VPC where you want to create a firewall endpoint.</p><br>
    ///   - [`subnet_mapping(SubnetMapping)`](crate::operation::create_vpc_endpoint_association::builders::CreateVpcEndpointAssociationFluentBuilder::subnet_mapping) / [`set_subnet_mapping(Option<SubnetMapping>)`](crate::operation::create_vpc_endpoint_association::builders::CreateVpcEndpointAssociationFluentBuilder::set_subnet_mapping):<br>required: **true**<br><p>The ID for a subnet that's used in an association with a firewall. This is used in <code>CreateFirewall</code>, <code>AssociateSubnets</code>, and <code>CreateVpcEndpointAssociation</code>. Network Firewall creates an instance of the associated firewall in each subnet that you specify, to filter traffic in the subnet's Availability Zone.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_vpc_endpoint_association::builders::CreateVpcEndpointAssociationFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_vpc_endpoint_association::builders::CreateVpcEndpointAssociationFluentBuilder::set_description):<br>required: **false**<br><p>A description of the VPC endpoint association.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_vpc_endpoint_association::builders::CreateVpcEndpointAssociationFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_vpc_endpoint_association::builders::CreateVpcEndpointAssociationFluentBuilder::set_tags):<br>required: **false**<br><p>The key:value pairs to associate with the resource.</p><br>
    /// - On success, responds with [`CreateVpcEndpointAssociationOutput`](crate::operation::create_vpc_endpoint_association::CreateVpcEndpointAssociationOutput) with field(s):
    ///   - [`vpc_endpoint_association(Option<VpcEndpointAssociation>)`](crate::operation::create_vpc_endpoint_association::CreateVpcEndpointAssociationOutput::vpc_endpoint_association): <p>The configuration settings for the VPC endpoint association. These settings include the firewall and the VPC and subnet to use for the firewall endpoint.</p>
    ///   - [`vpc_endpoint_association_status(Option<VpcEndpointAssociationStatus>)`](crate::operation::create_vpc_endpoint_association::CreateVpcEndpointAssociationOutput::vpc_endpoint_association_status): <p>Detailed information about the current status of a <code>VpcEndpointAssociation</code>. You can retrieve this by calling <code>DescribeVpcEndpointAssociation</code> and providing the VPC endpoint association ARN.</p>
    /// - On failure, responds with [`SdkError<CreateVpcEndpointAssociationError>`](crate::operation::create_vpc_endpoint_association::CreateVpcEndpointAssociationError)
    pub fn create_vpc_endpoint_association(
        &self,
    ) -> crate::operation::create_vpc_endpoint_association::builders::CreateVpcEndpointAssociationFluentBuilder {
        crate::operation::create_vpc_endpoint_association::builders::CreateVpcEndpointAssociationFluentBuilder::new(self.handle.clone())
    }
}
