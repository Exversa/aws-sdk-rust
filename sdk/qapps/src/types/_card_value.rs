// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The value or result associated with a card in a Amazon Q App session.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CardValue {
    /// <p>The unique identifier of the card.</p>
    pub card_id: ::std::string::String,
    /// <p>The value or result associated with the card.</p>
    pub value: ::std::string::String,
}
impl CardValue {
    /// <p>The unique identifier of the card.</p>
    pub fn card_id(&self) -> &str {
        use std::ops::Deref;
        self.card_id.deref()
    }
    /// <p>The value or result associated with the card.</p>
    pub fn value(&self) -> &str {
        use std::ops::Deref;
        self.value.deref()
    }
}
impl CardValue {
    /// Creates a new builder-style object to manufacture [`CardValue`](crate::types::CardValue).
    pub fn builder() -> crate::types::builders::CardValueBuilder {
        crate::types::builders::CardValueBuilder::default()
    }
}

/// A builder for [`CardValue`](crate::types::CardValue).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CardValueBuilder {
    pub(crate) card_id: ::std::option::Option<::std::string::String>,
    pub(crate) value: ::std::option::Option<::std::string::String>,
}
impl CardValueBuilder {
    /// <p>The unique identifier of the card.</p>
    /// This field is required.
    pub fn card_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.card_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the card.</p>
    pub fn set_card_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.card_id = input;
        self
    }
    /// <p>The unique identifier of the card.</p>
    pub fn get_card_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.card_id
    }
    /// <p>The value or result associated with the card.</p>
    /// This field is required.
    pub fn value(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.value = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The value or result associated with the card.</p>
    pub fn set_value(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.value = input;
        self
    }
    /// <p>The value or result associated with the card.</p>
    pub fn get_value(&self) -> &::std::option::Option<::std::string::String> {
        &self.value
    }
    /// Consumes the builder and constructs a [`CardValue`](crate::types::CardValue).
    /// This method will fail if any of the following fields are not set:
    /// - [`card_id`](crate::types::builders::CardValueBuilder::card_id)
    /// - [`value`](crate::types::builders::CardValueBuilder::value)
    pub fn build(self) -> ::std::result::Result<crate::types::CardValue, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CardValue {
            card_id: self.card_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "card_id",
                    "card_id was not specified but it is required when building CardValue",
                )
            })?,
            value: self.value.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "value",
                    "value was not specified but it is required when building CardValue",
                )
            })?,
        })
    }
}
