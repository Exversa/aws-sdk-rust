// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PredictQApp`](crate::operation::predict_q_app::builders::PredictQAppFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_id(impl Into<String>)`](crate::operation::predict_q_app::builders::PredictQAppFluentBuilder::instance_id) / [`set_instance_id(Option<String>)`](crate::operation::predict_q_app::builders::PredictQAppFluentBuilder::set_instance_id):<br>required: **true**<br><p>The unique identifier of the Amazon Q Business application environment instance.</p><br>
    ///   - [`options(PredictQAppInputOptions)`](crate::operation::predict_q_app::builders::PredictQAppFluentBuilder::options) / [`set_options(Option<PredictQAppInputOptions>)`](crate::operation::predict_q_app::builders::PredictQAppFluentBuilder::set_options):<br>required: **false**<br><p>The input to generate the Q App definition from, either a conversation or problem statement.</p><br>
    /// - On success, responds with [`PredictQAppOutput`](crate::operation::predict_q_app::PredictQAppOutput) with field(s):
    ///   - [`app(Option<PredictAppDefinition>)`](crate::operation::predict_q_app::PredictQAppOutput::app): <p>The generated Q App definition.</p>
    ///   - [`problem_statement(String)`](crate::operation::predict_q_app::PredictQAppOutput::problem_statement): <p>The problem statement extracted from the input conversation, if provided.</p>
    /// - On failure, responds with [`SdkError<PredictQAppError>`](crate::operation::predict_q_app::PredictQAppError)
    pub fn predict_q_app(&self) -> crate::operation::predict_q_app::builders::PredictQAppFluentBuilder {
        crate::operation::predict_q_app::builders::PredictQAppFluentBuilder::new(self.handle.clone())
    }
}
