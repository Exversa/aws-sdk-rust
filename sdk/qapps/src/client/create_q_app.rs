// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateQApp`](crate::operation::create_q_app::builders::CreateQAppFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_id(impl Into<String>)`](crate::operation::create_q_app::builders::CreateQAppFluentBuilder::instance_id) / [`set_instance_id(Option<String>)`](crate::operation::create_q_app::builders::CreateQAppFluentBuilder::set_instance_id):<br>required: **true**<br><p>The unique identifier of the Amazon Q Business application environment instance.</p><br>
    ///   - [`title(impl Into<String>)`](crate::operation::create_q_app::builders::CreateQAppFluentBuilder::title) / [`set_title(Option<String>)`](crate::operation::create_q_app::builders::CreateQAppFluentBuilder::set_title):<br>required: **true**<br><p>The title of the new Q App.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_q_app::builders::CreateQAppFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_q_app::builders::CreateQAppFluentBuilder::set_description):<br>required: **false**<br><p>The description of the new Q App.</p><br>
    ///   - [`app_definition(AppDefinitionInput)`](crate::operation::create_q_app::builders::CreateQAppFluentBuilder::app_definition) / [`set_app_definition(Option<AppDefinitionInput>)`](crate::operation::create_q_app::builders::CreateQAppFluentBuilder::set_app_definition):<br>required: **true**<br><p>The definition of the new Q App, specifying the cards and flow.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_q_app::builders::CreateQAppFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_q_app::builders::CreateQAppFluentBuilder::set_tags):<br>required: **false**<br><p>Optional tags to associate with the new Q App.</p><br>
    /// - On success, responds with [`CreateQAppOutput`](crate::operation::create_q_app::CreateQAppOutput) with field(s):
    ///   - [`app_id(String)`](crate::operation::create_q_app::CreateQAppOutput::app_id): <p>The unique identifier of the new Q App.</p>
    ///   - [`app_arn(String)`](crate::operation::create_q_app::CreateQAppOutput::app_arn): <p>The Amazon Resource Name (ARN) of the new Q App.</p>
    ///   - [`title(String)`](crate::operation::create_q_app::CreateQAppOutput::title): <p>The title of the new Q App.</p>
    ///   - [`description(Option<String>)`](crate::operation::create_q_app::CreateQAppOutput::description): <p>The description of the new Q App.</p>
    ///   - [`initial_prompt(Option<String>)`](crate::operation::create_q_app::CreateQAppOutput::initial_prompt): <p>The initial prompt displayed when the Q App is started.</p>
    ///   - [`app_version(i32)`](crate::operation::create_q_app::CreateQAppOutput::app_version): <p>The version of the new Q App.</p>
    ///   - [`status(AppStatus)`](crate::operation::create_q_app::CreateQAppOutput::status): <p>The status of the new Q App, such as "Created".</p>
    ///   - [`created_at(DateTime)`](crate::operation::create_q_app::CreateQAppOutput::created_at): <p>The date and time the Q App was created.</p>
    ///   - [`created_by(String)`](crate::operation::create_q_app::CreateQAppOutput::created_by): <p>The user who created the Q App.</p>
    ///   - [`updated_at(DateTime)`](crate::operation::create_q_app::CreateQAppOutput::updated_at): <p>The date and time the Q App was last updated.</p>
    ///   - [`updated_by(String)`](crate::operation::create_q_app::CreateQAppOutput::updated_by): <p>The user who last updated the Q App.</p>
    ///   - [`required_capabilities(Option<Vec::<AppRequiredCapability>>)`](crate::operation::create_q_app::CreateQAppOutput::required_capabilities): <p>The capabilities required to run the Q App, such as file upload or third-party integrations.</p>
    /// - On failure, responds with [`SdkError<CreateQAppError>`](crate::operation::create_q_app::CreateQAppError)
    pub fn create_q_app(&self) -> crate::operation::create_q_app::builders::CreateQAppFluentBuilder {
        crate::operation::create_q_app::builders::CreateQAppFluentBuilder::new(self.handle.clone())
    }
}
