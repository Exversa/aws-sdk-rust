// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_amazon_q_in_quick_sight_console_configurations(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::AmazonQInQuickSightConsoleConfigurations,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.data_qn_a {
        #[allow(unused_mut)]
        let mut object_2 = object.key("DataQnA").start_object();
        crate::protocol_serde::shape_data_qn_a_configurations::ser_data_qn_a_configurations(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.generative_authoring {
        #[allow(unused_mut)]
        let mut object_4 = object.key("GenerativeAuthoring").start_object();
        crate::protocol_serde::shape_generative_authoring_configurations::ser_generative_authoring_configurations(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.executive_summary {
        #[allow(unused_mut)]
        let mut object_6 = object.key("ExecutiveSummary").start_object();
        crate::protocol_serde::shape_executive_summary_configurations::ser_executive_summary_configurations(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.data_stories {
        #[allow(unused_mut)]
        let mut object_8 = object.key("DataStories").start_object();
        crate::protocol_serde::shape_data_stories_configurations::ser_data_stories_configurations(&mut object_8, var_7)?;
        object_8.finish();
    }
    Ok(())
}
