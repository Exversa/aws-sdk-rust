// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_topic_reviewed_answer(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::CreateTopicReviewedAnswer,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    {
        object.key("AnswerId").string(input.answer_id.as_str());
    }
    {
        object.key("DatasetArn").string(input.dataset_arn.as_str());
    }
    {
        object.key("Question").string(input.question.as_str());
    }
    if let Some(var_1) = &input.mir {
        #[allow(unused_mut)]
        let mut object_2 = object.key("Mir").start_object();
        crate::protocol_serde::shape_topic_ir::ser_topic_ir(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.primary_visual {
        #[allow(unused_mut)]
        let mut object_4 = object.key("PrimaryVisual").start_object();
        crate::protocol_serde::shape_topic_visual::ser_topic_visual(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.template {
        #[allow(unused_mut)]
        let mut object_6 = object.key("Template").start_object();
        crate::protocol_serde::shape_topic_template::ser_topic_template(&mut object_6, var_5)?;
        object_6.finish();
    }
    Ok(())
}
