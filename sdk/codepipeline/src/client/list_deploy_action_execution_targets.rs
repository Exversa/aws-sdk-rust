// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListDeployActionExecutionTargets`](crate::operation::list_deploy_action_execution_targets::builders::ListDeployActionExecutionTargetsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_deploy_action_execution_targets::builders::ListDeployActionExecutionTargetsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`pipeline_name(impl Into<String>)`](crate::operation::list_deploy_action_execution_targets::builders::ListDeployActionExecutionTargetsFluentBuilder::pipeline_name) / [`set_pipeline_name(Option<String>)`](crate::operation::list_deploy_action_execution_targets::builders::ListDeployActionExecutionTargetsFluentBuilder::set_pipeline_name):<br>required: **false**<br><p>The name of the pipeline with the deploy action.</p><br>
    ///   - [`action_execution_id(impl Into<String>)`](crate::operation::list_deploy_action_execution_targets::builders::ListDeployActionExecutionTargetsFluentBuilder::action_execution_id) / [`set_action_execution_id(Option<String>)`](crate::operation::list_deploy_action_execution_targets::builders::ListDeployActionExecutionTargetsFluentBuilder::set_action_execution_id):<br>required: **true**<br><p>The execution ID for the deploy action.</p><br>
    ///   - [`filters(TargetFilter)`](crate::operation::list_deploy_action_execution_targets::builders::ListDeployActionExecutionTargetsFluentBuilder::filters) / [`set_filters(Option<Vec::<TargetFilter>>)`](crate::operation::list_deploy_action_execution_targets::builders::ListDeployActionExecutionTargetsFluentBuilder::set_filters):<br>required: **false**<br><p>Filters the targets for a specified deploy action.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_deploy_action_execution_targets::builders::ListDeployActionExecutionTargetsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_deploy_action_execution_targets::builders::ListDeployActionExecutionTargetsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned nextToken value.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_deploy_action_execution_targets::builders::ListDeployActionExecutionTargetsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_deploy_action_execution_targets::builders::ListDeployActionExecutionTargetsFluentBuilder::set_next_token):<br>required: **false**<br><p>An identifier that was returned from the previous list action types call, which can be used to return the next set of action types in the list.</p><br>
    /// - On success, responds with [`ListDeployActionExecutionTargetsOutput`](crate::operation::list_deploy_action_execution_targets::ListDeployActionExecutionTargetsOutput) with field(s):
    ///   - [`targets(Option<Vec::<DeployActionExecutionTarget>>)`](crate::operation::list_deploy_action_execution_targets::ListDeployActionExecutionTargetsOutput::targets): <p>The targets for the deploy action.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_deploy_action_execution_targets::ListDeployActionExecutionTargetsOutput::next_token): <p>An identifier that was returned from the previous list action types call, which can be used to return the next set of action types in the list.</p>
    /// - On failure, responds with [`SdkError<ListDeployActionExecutionTargetsError>`](crate::operation::list_deploy_action_execution_targets::ListDeployActionExecutionTargetsError)
    pub fn list_deploy_action_execution_targets(
        &self,
    ) -> crate::operation::list_deploy_action_execution_targets::builders::ListDeployActionExecutionTargetsFluentBuilder {
        crate::operation::list_deploy_action_execution_targets::builders::ListDeployActionExecutionTargetsFluentBuilder::new(self.handle.clone())
    }
}
