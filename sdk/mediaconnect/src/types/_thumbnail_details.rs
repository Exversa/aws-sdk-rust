// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// The details of the thumbnail, including thumbnail base64 string, timecode and the time when thumbnail was generated.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ThumbnailDetails {
    /// The ARN of the flow that DescribeFlowSourceThumbnail was performed on.
    pub flow_arn: ::std::option::Option<::std::string::String>,
    /// Thumbnail Base64 string.
    pub thumbnail: ::std::option::Option<::std::string::String>,
    /// Status code and messages about the flow source thumbnail.
    pub thumbnail_messages: ::std::option::Option<::std::vec::Vec<crate::types::MessageDetail>>,
    /// Timecode of thumbnail.
    pub timecode: ::std::option::Option<::std::string::String>,
    /// The timestamp of when thumbnail was generated.
    pub timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ThumbnailDetails {
    /// The ARN of the flow that DescribeFlowSourceThumbnail was performed on.
    pub fn flow_arn(&self) -> ::std::option::Option<&str> {
        self.flow_arn.as_deref()
    }
    /// Thumbnail Base64 string.
    pub fn thumbnail(&self) -> ::std::option::Option<&str> {
        self.thumbnail.as_deref()
    }
    /// Status code and messages about the flow source thumbnail.
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.thumbnail_messages.is_none()`.
    pub fn thumbnail_messages(&self) -> &[crate::types::MessageDetail] {
        self.thumbnail_messages.as_deref().unwrap_or_default()
    }
    /// Timecode of thumbnail.
    pub fn timecode(&self) -> ::std::option::Option<&str> {
        self.timecode.as_deref()
    }
    /// The timestamp of when thumbnail was generated.
    pub fn timestamp(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.timestamp.as_ref()
    }
}
impl ThumbnailDetails {
    /// Creates a new builder-style object to manufacture [`ThumbnailDetails`](crate::types::ThumbnailDetails).
    pub fn builder() -> crate::types::builders::ThumbnailDetailsBuilder {
        crate::types::builders::ThumbnailDetailsBuilder::default()
    }
}

/// A builder for [`ThumbnailDetails`](crate::types::ThumbnailDetails).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ThumbnailDetailsBuilder {
    pub(crate) flow_arn: ::std::option::Option<::std::string::String>,
    pub(crate) thumbnail: ::std::option::Option<::std::string::String>,
    pub(crate) thumbnail_messages: ::std::option::Option<::std::vec::Vec<crate::types::MessageDetail>>,
    pub(crate) timecode: ::std::option::Option<::std::string::String>,
    pub(crate) timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ThumbnailDetailsBuilder {
    /// The ARN of the flow that DescribeFlowSourceThumbnail was performed on.
    /// This field is required.
    pub fn flow_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.flow_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// The ARN of the flow that DescribeFlowSourceThumbnail was performed on.
    pub fn set_flow_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.flow_arn = input;
        self
    }
    /// The ARN of the flow that DescribeFlowSourceThumbnail was performed on.
    pub fn get_flow_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.flow_arn
    }
    /// Thumbnail Base64 string.
    pub fn thumbnail(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.thumbnail = ::std::option::Option::Some(input.into());
        self
    }
    /// Thumbnail Base64 string.
    pub fn set_thumbnail(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.thumbnail = input;
        self
    }
    /// Thumbnail Base64 string.
    pub fn get_thumbnail(&self) -> &::std::option::Option<::std::string::String> {
        &self.thumbnail
    }
    /// Appends an item to `thumbnail_messages`.
    ///
    /// To override the contents of this collection use [`set_thumbnail_messages`](Self::set_thumbnail_messages).
    ///
    /// Status code and messages about the flow source thumbnail.
    pub fn thumbnail_messages(mut self, input: crate::types::MessageDetail) -> Self {
        let mut v = self.thumbnail_messages.unwrap_or_default();
        v.push(input);
        self.thumbnail_messages = ::std::option::Option::Some(v);
        self
    }
    /// Status code and messages about the flow source thumbnail.
    pub fn set_thumbnail_messages(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::MessageDetail>>) -> Self {
        self.thumbnail_messages = input;
        self
    }
    /// Status code and messages about the flow source thumbnail.
    pub fn get_thumbnail_messages(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::MessageDetail>> {
        &self.thumbnail_messages
    }
    /// Timecode of thumbnail.
    pub fn timecode(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.timecode = ::std::option::Option::Some(input.into());
        self
    }
    /// Timecode of thumbnail.
    pub fn set_timecode(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.timecode = input;
        self
    }
    /// Timecode of thumbnail.
    pub fn get_timecode(&self) -> &::std::option::Option<::std::string::String> {
        &self.timecode
    }
    /// The timestamp of when thumbnail was generated.
    pub fn timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.timestamp = ::std::option::Option::Some(input);
        self
    }
    /// The timestamp of when thumbnail was generated.
    pub fn set_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.timestamp = input;
        self
    }
    /// The timestamp of when thumbnail was generated.
    pub fn get_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.timestamp
    }
    /// Consumes the builder and constructs a [`ThumbnailDetails`](crate::types::ThumbnailDetails).
    pub fn build(self) -> crate::types::ThumbnailDetails {
        crate::types::ThumbnailDetails {
            flow_arn: self.flow_arn,
            thumbnail: self.thumbnail,
            thumbnail_messages: self.thumbnail_messages,
            timecode: self.timecode,
            timestamp: self.timestamp,
        }
    }
}
