// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Specifies the configuration for audio stream metrics monitoring.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AudioMonitoringSetting {
    /// Detects periods of silence.
    pub silent_audio: ::std::option::Option<crate::types::SilentAudio>,
}
impl AudioMonitoringSetting {
    /// Detects periods of silence.
    pub fn silent_audio(&self) -> ::std::option::Option<&crate::types::SilentAudio> {
        self.silent_audio.as_ref()
    }
}
impl AudioMonitoringSetting {
    /// Creates a new builder-style object to manufacture [`AudioMonitoringSetting`](crate::types::AudioMonitoringSetting).
    pub fn builder() -> crate::types::builders::AudioMonitoringSettingBuilder {
        crate::types::builders::AudioMonitoringSettingBuilder::default()
    }
}

/// A builder for [`AudioMonitoringSetting`](crate::types::AudioMonitoringSetting).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AudioMonitoringSettingBuilder {
    pub(crate) silent_audio: ::std::option::Option<crate::types::SilentAudio>,
}
impl AudioMonitoringSettingBuilder {
    /// Detects periods of silence.
    pub fn silent_audio(mut self, input: crate::types::SilentAudio) -> Self {
        self.silent_audio = ::std::option::Option::Some(input);
        self
    }
    /// Detects periods of silence.
    pub fn set_silent_audio(mut self, input: ::std::option::Option<crate::types::SilentAudio>) -> Self {
        self.silent_audio = input;
        self
    }
    /// Detects periods of silence.
    pub fn get_silent_audio(&self) -> &::std::option::Option<crate::types::SilentAudio> {
        &self.silent_audio
    }
    /// Consumes the builder and constructs a [`AudioMonitoringSetting`](crate::types::AudioMonitoringSetting).
    pub fn build(self) -> crate::types::AudioMonitoringSetting {
        crate::types::AudioMonitoringSetting {
            silent_audio: self.silent_audio,
        }
    }
}
