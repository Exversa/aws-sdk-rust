// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateFlowMediaStream`](crate::operation::update_flow_media_stream::builders::UpdateFlowMediaStreamFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`attributes(MediaStreamAttributesRequest)`](crate::operation::update_flow_media_stream::builders::UpdateFlowMediaStreamFluentBuilder::attributes) / [`set_attributes(Option<MediaStreamAttributesRequest>)`](crate::operation::update_flow_media_stream::builders::UpdateFlowMediaStreamFluentBuilder::set_attributes):<br>required: **false**<br><p>The attributes that you want to assign to the media stream.</p><br>
    ///   - [`clock_rate(i32)`](crate::operation::update_flow_media_stream::builders::UpdateFlowMediaStreamFluentBuilder::clock_rate) / [`set_clock_rate(Option<i32>)`](crate::operation::update_flow_media_stream::builders::UpdateFlowMediaStreamFluentBuilder::set_clock_rate):<br>required: **false**<br><p>The sample rate for the stream. This value in measured in kHz.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::update_flow_media_stream::builders::UpdateFlowMediaStreamFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_flow_media_stream::builders::UpdateFlowMediaStreamFluentBuilder::set_description):<br>required: **false**<br><p>A description that can help you quickly identify what your media stream is used for.</p><br>
    ///   - [`flow_arn(impl Into<String>)`](crate::operation::update_flow_media_stream::builders::UpdateFlowMediaStreamFluentBuilder::flow_arn) / [`set_flow_arn(Option<String>)`](crate::operation::update_flow_media_stream::builders::UpdateFlowMediaStreamFluentBuilder::set_flow_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the flow that is associated with the media stream that you updated.</p><br>
    ///   - [`media_stream_name(impl Into<String>)`](crate::operation::update_flow_media_stream::builders::UpdateFlowMediaStreamFluentBuilder::media_stream_name) / [`set_media_stream_name(Option<String>)`](crate::operation::update_flow_media_stream::builders::UpdateFlowMediaStreamFluentBuilder::set_media_stream_name):<br>required: **true**<br><p>The media stream that you updated.</p><br>
    ///   - [`media_stream_type(MediaStreamType)`](crate::operation::update_flow_media_stream::builders::UpdateFlowMediaStreamFluentBuilder::media_stream_type) / [`set_media_stream_type(Option<MediaStreamType>)`](crate::operation::update_flow_media_stream::builders::UpdateFlowMediaStreamFluentBuilder::set_media_stream_type):<br>required: **false**<br><p>The type of media stream.</p><br>
    ///   - [`video_format(impl Into<String>)`](crate::operation::update_flow_media_stream::builders::UpdateFlowMediaStreamFluentBuilder::video_format) / [`set_video_format(Option<String>)`](crate::operation::update_flow_media_stream::builders::UpdateFlowMediaStreamFluentBuilder::set_video_format):<br>required: **false**<br><p>The resolution of the video.</p><br>
    /// - On success, responds with [`UpdateFlowMediaStreamOutput`](crate::operation::update_flow_media_stream::UpdateFlowMediaStreamOutput) with field(s):
    ///   - [`flow_arn(Option<String>)`](crate::operation::update_flow_media_stream::UpdateFlowMediaStreamOutput::flow_arn): <p>The ARN of the flow that is associated with the media stream that you updated.</p>
    ///   - [`media_stream(Option<MediaStream>)`](crate::operation::update_flow_media_stream::UpdateFlowMediaStreamOutput::media_stream): <p>The media stream that you updated.</p>
    /// - On failure, responds with [`SdkError<UpdateFlowMediaStreamError>`](crate::operation::update_flow_media_stream::UpdateFlowMediaStreamError)
    pub fn update_flow_media_stream(&self) -> crate::operation::update_flow_media_stream::builders::UpdateFlowMediaStreamFluentBuilder {
        crate::operation::update_flow_media_stream::builders::UpdateFlowMediaStreamFluentBuilder::new(self.handle.clone())
    }
}
