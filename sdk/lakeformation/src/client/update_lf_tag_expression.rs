// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateLFTagExpression`](crate::operation::update_lf_tag_expression::builders::UpdateLFTagExpressionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::update_lf_tag_expression::builders::UpdateLFTagExpressionFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::update_lf_tag_expression::builders::UpdateLFTagExpressionFluentBuilder::set_name):<br>required: **true**<br><p>The name for the LF-Tag expression.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::update_lf_tag_expression::builders::UpdateLFTagExpressionFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_lf_tag_expression::builders::UpdateLFTagExpressionFluentBuilder::set_description):<br>required: **false**<br><p>The description with information about the saved LF-Tag expression.</p><br>
    ///   - [`catalog_id(impl Into<String>)`](crate::operation::update_lf_tag_expression::builders::UpdateLFTagExpressionFluentBuilder::catalog_id) / [`set_catalog_id(Option<String>)`](crate::operation::update_lf_tag_expression::builders::UpdateLFTagExpressionFluentBuilder::set_catalog_id):<br>required: **false**<br><p>The identifier for the Data Catalog. By default, the account ID.</p><br>
    ///   - [`expression(LfTag)`](crate::operation::update_lf_tag_expression::builders::UpdateLFTagExpressionFluentBuilder::expression) / [`set_expression(Option<Vec::<LfTag>>)`](crate::operation::update_lf_tag_expression::builders::UpdateLFTagExpressionFluentBuilder::set_expression):<br>required: **true**<br><p>The LF-Tag expression body composed of one more LF-Tag key-value pairs.</p><br>
    /// - On success, responds with [`UpdateLfTagExpressionOutput`](crate::operation::update_lf_tag_expression::UpdateLfTagExpressionOutput)
    /// - On failure, responds with [`SdkError<UpdateLFTagExpressionError>`](crate::operation::update_lf_tag_expression::UpdateLFTagExpressionError)
    pub fn update_lf_tag_expression(&self) -> crate::operation::update_lf_tag_expression::builders::UpdateLFTagExpressionFluentBuilder {
        crate::operation::update_lf_tag_expression::builders::UpdateLFTagExpressionFluentBuilder::new(self.handle.clone())
    }
}
