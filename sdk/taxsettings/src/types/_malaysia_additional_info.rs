// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Additional tax information associated with your TRN in Malaysia.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MalaysiaAdditionalInfo {
    /// <p>List of service tax codes for your TRN in Malaysia.</p>
    pub service_tax_codes: ::std::vec::Vec<crate::types::MalaysiaServiceTaxCode>,
}
impl MalaysiaAdditionalInfo {
    /// <p>List of service tax codes for your TRN in Malaysia.</p>
    pub fn service_tax_codes(&self) -> &[crate::types::MalaysiaServiceTaxCode] {
        use std::ops::Deref;
        self.service_tax_codes.deref()
    }
}
impl MalaysiaAdditionalInfo {
    /// Creates a new builder-style object to manufacture [`MalaysiaAdditionalInfo`](crate::types::MalaysiaAdditionalInfo).
    pub fn builder() -> crate::types::builders::MalaysiaAdditionalInfoBuilder {
        crate::types::builders::MalaysiaAdditionalInfoBuilder::default()
    }
}

/// A builder for [`MalaysiaAdditionalInfo`](crate::types::MalaysiaAdditionalInfo).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MalaysiaAdditionalInfoBuilder {
    pub(crate) service_tax_codes: ::std::option::Option<::std::vec::Vec<crate::types::MalaysiaServiceTaxCode>>,
}
impl MalaysiaAdditionalInfoBuilder {
    /// Appends an item to `service_tax_codes`.
    ///
    /// To override the contents of this collection use [`set_service_tax_codes`](Self::set_service_tax_codes).
    ///
    /// <p>List of service tax codes for your TRN in Malaysia.</p>
    pub fn service_tax_codes(mut self, input: crate::types::MalaysiaServiceTaxCode) -> Self {
        let mut v = self.service_tax_codes.unwrap_or_default();
        v.push(input);
        self.service_tax_codes = ::std::option::Option::Some(v);
        self
    }
    /// <p>List of service tax codes for your TRN in Malaysia.</p>
    pub fn set_service_tax_codes(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::MalaysiaServiceTaxCode>>) -> Self {
        self.service_tax_codes = input;
        self
    }
    /// <p>List of service tax codes for your TRN in Malaysia.</p>
    pub fn get_service_tax_codes(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::MalaysiaServiceTaxCode>> {
        &self.service_tax_codes
    }
    /// Consumes the builder and constructs a [`MalaysiaAdditionalInfo`](crate::types::MalaysiaAdditionalInfo).
    /// This method will fail if any of the following fields are not set:
    /// - [`service_tax_codes`](crate::types::builders::MalaysiaAdditionalInfoBuilder::service_tax_codes)
    pub fn build(self) -> ::std::result::Result<crate::types::MalaysiaAdditionalInfo, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::MalaysiaAdditionalInfo {
            service_tax_codes: self.service_tax_codes.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "service_tax_codes",
                    "service_tax_codes was not specified but it is required when building MalaysiaAdditionalInfo",
                )
            })?,
        })
    }
}
