// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutSupplementalTaxRegistration`](crate::operation::put_supplemental_tax_registration::builders::PutSupplementalTaxRegistrationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`tax_registration_entry(SupplementalTaxRegistrationEntry)`](crate::operation::put_supplemental_tax_registration::builders::PutSupplementalTaxRegistrationFluentBuilder::tax_registration_entry) / [`set_tax_registration_entry(Option<SupplementalTaxRegistrationEntry>)`](crate::operation::put_supplemental_tax_registration::builders::PutSupplementalTaxRegistrationFluentBuilder::set_tax_registration_entry):<br>required: **true**<br><p>The supplemental TRN information that will be stored for the caller account ID.</p><br>
    /// - On success, responds with [`PutSupplementalTaxRegistrationOutput`](crate::operation::put_supplemental_tax_registration::PutSupplementalTaxRegistrationOutput) with field(s):
    ///   - [`authority_id(String)`](crate::operation::put_supplemental_tax_registration::PutSupplementalTaxRegistrationOutput::authority_id): <p>Unique authority ID for the supplemental TRN information that was stored.</p>
    ///   - [`status(TaxRegistrationStatus)`](crate::operation::put_supplemental_tax_registration::PutSupplementalTaxRegistrationOutput::status): <p>The status of the supplemental TRN stored in the system after processing. Based on the validation occurring on the TRN, the status can be <code>Verified</code>, <code>Pending</code>, <code>Rejected</code>, or <code>Deleted</code>.</p>
    /// - On failure, responds with [`SdkError<PutSupplementalTaxRegistrationError>`](crate::operation::put_supplemental_tax_registration::PutSupplementalTaxRegistrationError)
    pub fn put_supplemental_tax_registration(
        &self,
    ) -> crate::operation::put_supplemental_tax_registration::builders::PutSupplementalTaxRegistrationFluentBuilder {
        crate::operation::put_supplemental_tax_registration::builders::PutSupplementalTaxRegistrationFluentBuilder::new(self.handle.clone())
    }
}
