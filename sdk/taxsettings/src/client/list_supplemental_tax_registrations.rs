// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListSupplementalTaxRegistrations`](crate::operation::list_supplemental_tax_registrations::builders::ListSupplementalTaxRegistrationsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_supplemental_tax_registrations::builders::ListSupplementalTaxRegistrationsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::operation::list_supplemental_tax_registrations::builders::ListSupplementalTaxRegistrationsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_supplemental_tax_registrations::builders::ListSupplementalTaxRegistrationsFluentBuilder::set_max_results):<br>required: **false**<br><p>The number of <code>taxRegistrations</code> results you want in one response.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_supplemental_tax_registrations::builders::ListSupplementalTaxRegistrationsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_supplemental_tax_registrations::builders::ListSupplementalTaxRegistrationsFluentBuilder::set_next_token):<br>required: **false**<br><p>The token to retrieve the next set of results.</p><br>
    /// - On success, responds with [`ListSupplementalTaxRegistrationsOutput`](crate::operation::list_supplemental_tax_registrations::ListSupplementalTaxRegistrationsOutput) with field(s):
    ///   - [`tax_registrations(Vec::<SupplementalTaxRegistration>)`](crate::operation::list_supplemental_tax_registrations::ListSupplementalTaxRegistrationsOutput::tax_registrations): <p>The list of supplemental tax registrations.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_supplemental_tax_registrations::ListSupplementalTaxRegistrationsOutput::next_token): <p>The token to retrieve the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListSupplementalTaxRegistrationsError>`](crate::operation::list_supplemental_tax_registrations::ListSupplementalTaxRegistrationsError)
    pub fn list_supplemental_tax_registrations(
        &self,
    ) -> crate::operation::list_supplemental_tax_registrations::builders::ListSupplementalTaxRegistrationsFluentBuilder {
        crate::operation::list_supplemental_tax_registrations::builders::ListSupplementalTaxRegistrationsFluentBuilder::new(self.handle.clone())
    }
}
