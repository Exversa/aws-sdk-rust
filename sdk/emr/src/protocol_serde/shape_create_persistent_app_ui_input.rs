// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_persistent_app_ui_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_persistent_app_ui::CreatePersistentAppUiInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.target_resource_arn {
        object.key("TargetResourceArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.emr_containers_config {
        #[allow(unused_mut)]
        let mut object_3 = object.key("EMRContainersConfig").start_object();
        crate::protocol_serde::shape_emr_containers_config::ser_emr_containers_config(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.tags {
        let mut array_5 = object.key("Tags").start_array();
        for item_6 in var_4 {
            {
                #[allow(unused_mut)]
                let mut object_7 = array_5.value().start_object();
                crate::protocol_serde::shape_tag::ser_tag(&mut object_7, item_6)?;
                object_7.finish();
            }
        }
        array_5.finish();
    }
    if let Some(var_8) = &input.x_referer {
        object.key("XReferer").string(var_8.as_str());
    }
    if let Some(var_9) = &input.profiler_type {
        object.key("ProfilerType").string(var_9.as_str());
    }
    Ok(())
}
