// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateCertificateAuthority`](crate::operation::update_certificate_authority::builders::UpdateCertificateAuthorityFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`certificate_authority_arn(impl Into<String>)`](crate::operation::update_certificate_authority::builders::UpdateCertificateAuthorityFluentBuilder::certificate_authority_arn) / [`set_certificate_authority_arn(Option<String>)`](crate::operation::update_certificate_authority::builders::UpdateCertificateAuthorityFluentBuilder::set_certificate_authority_arn):<br>required: **true**<br><p>Amazon Resource Name (ARN) of the private CA that issued the certificate to be revoked. This must be of the form:</p> <p><code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code></p><br>
    ///   - [`revocation_configuration(RevocationConfiguration)`](crate::operation::update_certificate_authority::builders::UpdateCertificateAuthorityFluentBuilder::revocation_configuration) / [`set_revocation_configuration(Option<RevocationConfiguration>)`](crate::operation::update_certificate_authority::builders::UpdateCertificateAuthorityFluentBuilder::set_revocation_configuration):<br>required: **false**<br><p>Contains information to enable support for Online Certificate Status Protocol (OCSP), certificate revocation list (CRL), both protocols, or neither. If you don't supply this parameter, existing capibilites remain unchanged. For more information, see the <a href="https://docs.aws.amazon.com/privateca/latest/APIReference/API_OcspConfiguration.html">OcspConfiguration</a> and <a href="https://docs.aws.amazon.com/privateca/latest/APIReference/API_CrlConfiguration.html">CrlConfiguration</a> types.</p> <p>The following requirements apply to revocation configurations.</p> <ul>  <li>   <p>A configuration disabling CRLs or OCSP must contain only the <code>Enabled=False</code> parameter, and will fail if other parameters such as <code>CustomCname</code> or <code>ExpirationInDays</code> are included.</p></li>  <li>   <p>In a CRL configuration, the <code>S3BucketName</code> parameter must conform to <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html">Amazon S3 bucket naming rules</a>.</p></li>  <li>   <p>A configuration containing a custom Canonical Name (CNAME) parameter for CRLs or OCSP must conform to <a href="https://www.ietf.org/rfc/rfc2396.txt">RFC2396</a> restrictions on the use of special characters in a CNAME.</p></li>  <li>   <p>In a CRL or OCSP configuration, the value of a CNAME parameter must not include a protocol prefix such as "http://" or "https://".</p></li> </ul><important>  <p>If you update the <code>S3BucketName</code> of <a href="https://docs.aws.amazon.com/privateca/latest/APIReference/API_CrlConfiguration.html">CrlConfiguration</a>, you can break revocation for existing certificates. In other words, if you call <a href="https://docs.aws.amazon.com/privateca/latest/APIReference/API_UpdateCertificateAuthority.html">UpdateCertificateAuthority</a> to update the CRL configuration's S3 bucket name, Amazon Web Services Private CA only writes CRLs to the new S3 bucket. Certificates issued prior to this point will have the old S3 bucket name in your CRL Distribution Point (CDP) extension, essentially breaking revocation. If you must update the S3 bucket, you'll need to reissue old certificates to keep the revocation working. Alternatively, you can use a <a href="https://docs.aws.amazon.com/privateca/latest/APIReference/API_CrlConfiguration.html#privateca-Type-CrlConfiguration-CustomCname">CustomCname</a> in your CRL configuration if you might need to change the S3 bucket name in the future.</p> </important><br>
    ///   - [`status(CertificateAuthorityStatus)`](crate::operation::update_certificate_authority::builders::UpdateCertificateAuthorityFluentBuilder::status) / [`set_status(Option<CertificateAuthorityStatus>)`](crate::operation::update_certificate_authority::builders::UpdateCertificateAuthorityFluentBuilder::set_status):<br>required: **false**<br><p>Status of your private CA.</p><br>
    /// - On success, responds with [`UpdateCertificateAuthorityOutput`](crate::operation::update_certificate_authority::UpdateCertificateAuthorityOutput)
    /// - On failure, responds with [`SdkError<UpdateCertificateAuthorityError>`](crate::operation::update_certificate_authority::UpdateCertificateAuthorityError)
    pub fn update_certificate_authority(&self) -> crate::operation::update_certificate_authority::builders::UpdateCertificateAuthorityFluentBuilder {
        crate::operation::update_certificate_authority::builders::UpdateCertificateAuthorityFluentBuilder::new(self.handle.clone())
    }
}
