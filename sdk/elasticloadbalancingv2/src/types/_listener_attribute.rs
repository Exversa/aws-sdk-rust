// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a listener attribute.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListenerAttribute {
    /// <p>The name of the attribute.</p>
    /// <p>The following attribute is supported by Network Load Balancers, and Gateway Load Balancers.</p>
    /// <ul>
    /// <li>
    /// <p><code>tcp.idle_timeout.seconds</code> - The tcp idle timeout value, in seconds. The valid range is 60-6000 seconds. The default is 350 seconds.</p></li>
    /// </ul>
    pub key: ::std::option::Option<::std::string::String>,
    /// <p>The value of the attribute.</p>
    pub value: ::std::option::Option<::std::string::String>,
}
impl ListenerAttribute {
    /// <p>The name of the attribute.</p>
    /// <p>The following attribute is supported by Network Load Balancers, and Gateway Load Balancers.</p>
    /// <ul>
    /// <li>
    /// <p><code>tcp.idle_timeout.seconds</code> - The tcp idle timeout value, in seconds. The valid range is 60-6000 seconds. The default is 350 seconds.</p></li>
    /// </ul>
    pub fn key(&self) -> ::std::option::Option<&str> {
        self.key.as_deref()
    }
    /// <p>The value of the attribute.</p>
    pub fn value(&self) -> ::std::option::Option<&str> {
        self.value.as_deref()
    }
}
impl ListenerAttribute {
    /// Creates a new builder-style object to manufacture [`ListenerAttribute`](crate::types::ListenerAttribute).
    pub fn builder() -> crate::types::builders::ListenerAttributeBuilder {
        crate::types::builders::ListenerAttributeBuilder::default()
    }
}

/// A builder for [`ListenerAttribute`](crate::types::ListenerAttribute).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListenerAttributeBuilder {
    pub(crate) key: ::std::option::Option<::std::string::String>,
    pub(crate) value: ::std::option::Option<::std::string::String>,
}
impl ListenerAttributeBuilder {
    /// <p>The name of the attribute.</p>
    /// <p>The following attribute is supported by Network Load Balancers, and Gateway Load Balancers.</p>
    /// <ul>
    /// <li>
    /// <p><code>tcp.idle_timeout.seconds</code> - The tcp idle timeout value, in seconds. The valid range is 60-6000 seconds. The default is 350 seconds.</p></li>
    /// </ul>
    pub fn key(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.key = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the attribute.</p>
    /// <p>The following attribute is supported by Network Load Balancers, and Gateway Load Balancers.</p>
    /// <ul>
    /// <li>
    /// <p><code>tcp.idle_timeout.seconds</code> - The tcp idle timeout value, in seconds. The valid range is 60-6000 seconds. The default is 350 seconds.</p></li>
    /// </ul>
    pub fn set_key(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.key = input;
        self
    }
    /// <p>The name of the attribute.</p>
    /// <p>The following attribute is supported by Network Load Balancers, and Gateway Load Balancers.</p>
    /// <ul>
    /// <li>
    /// <p><code>tcp.idle_timeout.seconds</code> - The tcp idle timeout value, in seconds. The valid range is 60-6000 seconds. The default is 350 seconds.</p></li>
    /// </ul>
    pub fn get_key(&self) -> &::std::option::Option<::std::string::String> {
        &self.key
    }
    /// <p>The value of the attribute.</p>
    pub fn value(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.value = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The value of the attribute.</p>
    pub fn set_value(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.value = input;
        self
    }
    /// <p>The value of the attribute.</p>
    pub fn get_value(&self) -> &::std::option::Option<::std::string::String> {
        &self.value
    }
    /// Consumes the builder and constructs a [`ListenerAttribute`](crate::types::ListenerAttribute).
    pub fn build(self) -> crate::types::ListenerAttribute {
        crate::types::ListenerAttribute {
            key: self.key,
            value: self.value,
        }
    }
}
