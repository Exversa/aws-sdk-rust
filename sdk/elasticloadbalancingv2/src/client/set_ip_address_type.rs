// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SetIpAddressType`](crate::operation::set_ip_address_type::builders::SetIpAddressTypeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`load_balancer_arn(impl Into<String>)`](crate::operation::set_ip_address_type::builders::SetIpAddressTypeFluentBuilder::load_balancer_arn) / [`set_load_balancer_arn(Option<String>)`](crate::operation::set_ip_address_type::builders::SetIpAddressTypeFluentBuilder::set_load_balancer_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the load balancer.</p><br>
    ///   - [`ip_address_type(IpAddressType)`](crate::operation::set_ip_address_type::builders::SetIpAddressTypeFluentBuilder::ip_address_type) / [`set_ip_address_type(Option<IpAddressType>)`](crate::operation::set_ip_address_type::builders::SetIpAddressTypeFluentBuilder::set_ip_address_type):<br>required: **true**<br><p>Note: Internal load balancers must use the <code>ipv4</code> IP address type.</p> <p>\[Application Load Balancers\] The IP address type. The possible values are ipv4 (for only IPv4 addresses), dualstack (for IPv4 and IPv6 addresses), and dualstack-without-public-ipv4 (for IPv6 only public addresses, with private IPv4 and IPv6 addresses).</p> <p>Note: Application Load Balancer authentication only supports IPv4 addresses when connecting to an Identity Provider (IdP) or Amazon Cognito endpoint. Without a public IPv4 address the load balancer cannot complete the authentication process, resulting in HTTP 500 errors.</p> <p>\[Network Load Balancers\] The IP address type. The possible values are ipv4 (for only IPv4 addresses) and dualstack (for IPv4 and IPv6 addresses). You canâ€™t specify dualstack for a load balancer with a UDP or TCP_UDP listener.</p> <p>\[Gateway Load Balancers\] The IP address type. The possible values are ipv4 (for only IPv4 addresses) and dualstack (for IPv4 and IPv6 addresses).</p><br>
    /// - On success, responds with [`SetIpAddressTypeOutput`](crate::operation::set_ip_address_type::SetIpAddressTypeOutput) with field(s):
    ///   - [`ip_address_type(Option<IpAddressType>)`](crate::operation::set_ip_address_type::SetIpAddressTypeOutput::ip_address_type): <p>The IP address type.</p>
    /// - On failure, responds with [`SdkError<SetIpAddressTypeError>`](crate::operation::set_ip_address_type::SetIpAddressTypeError)
    pub fn set_ip_address_type(&self) -> crate::operation::set_ip_address_type::builders::SetIpAddressTypeFluentBuilder {
        crate::operation::set_ip_address_type::builders::SetIpAddressTypeFluentBuilder::new(self.handle.clone())
    }
}
