// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_batch_create_workload_estimate_usage_entry(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::BatchCreateWorkloadEstimateUsageEntry,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    {
        object.key("serviceCode").string(input.service_code.as_str());
    }
    {
        object.key("usageType").string(input.usage_type.as_str());
    }
    {
        object.key("operation").string(input.operation.as_str());
    }
    {
        object.key("key").string(input.key.as_str());
    }
    if let Some(var_1) = &input.group {
        object.key("group").string(var_1.as_str());
    }
    {
        object.key("usageAccountId").string(input.usage_account_id.as_str());
    }
    {
        object.key("amount").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::Float((input.amount).into()),
        );
    }
    if let Some(var_2) = &input.historical_usage {
        #[allow(unused_mut)]
        let mut object_3 = object.key("historicalUsage").start_object();
        crate::protocol_serde::shape_historical_usage_entity::ser_historical_usage_entity(&mut object_3, var_2)?;
        object_3.finish();
    }
    Ok(())
}
