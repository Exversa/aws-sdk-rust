// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`BatchCreateWorkloadEstimateUsage`](crate::operation::batch_create_workload_estimate_usage::builders::BatchCreateWorkloadEstimateUsageFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`workload_estimate_id(impl Into<String>)`](crate::operation::batch_create_workload_estimate_usage::builders::BatchCreateWorkloadEstimateUsageFluentBuilder::workload_estimate_id) / [`set_workload_estimate_id(Option<String>)`](crate::operation::batch_create_workload_estimate_usage::builders::BatchCreateWorkloadEstimateUsageFluentBuilder::set_workload_estimate_id):<br>required: **true**<br><p>The ID of the Workload estimate for which you want to create the modeled usage.</p><br>
    ///   - [`usage(BatchCreateWorkloadEstimateUsageEntry)`](crate::operation::batch_create_workload_estimate_usage::builders::BatchCreateWorkloadEstimateUsageFluentBuilder::usage) / [`set_usage(Option<Vec::<BatchCreateWorkloadEstimateUsageEntry>>)`](crate::operation::batch_create_workload_estimate_usage::builders::BatchCreateWorkloadEstimateUsageFluentBuilder::set_usage):<br>required: **true**<br><p>List of usage that you want to model in the Workload estimate.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::batch_create_workload_estimate_usage::builders::BatchCreateWorkloadEstimateUsageFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::batch_create_workload_estimate_usage::builders::BatchCreateWorkloadEstimateUsageFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p><br>
    /// - On success, responds with [`BatchCreateWorkloadEstimateUsageOutput`](crate::operation::batch_create_workload_estimate_usage::BatchCreateWorkloadEstimateUsageOutput) with field(s):
    ///   - [`items(Option<Vec::<BatchCreateWorkloadEstimateUsageItem>>)`](crate::operation::batch_create_workload_estimate_usage::BatchCreateWorkloadEstimateUsageOutput::items): <p>Returns the list of successful usage line items that were created for the Workload estimate.</p>
    ///   - [`errors(Option<Vec::<BatchCreateWorkloadEstimateUsageError>>)`](crate::operation::batch_create_workload_estimate_usage::BatchCreateWorkloadEstimateUsageOutput::errors): <p>Returns the list of errors reason and the usage item keys that cannot be created in the Workload estimate.</p>
    /// - On failure, responds with [`SdkError<BatchCreateWorkloadEstimateUsageError>`](crate::operation::batch_create_workload_estimate_usage::BatchCreateWorkloadEstimateUsageError)
    pub fn batch_create_workload_estimate_usage(
        &self,
    ) -> crate::operation::batch_create_workload_estimate_usage::builders::BatchCreateWorkloadEstimateUsageFluentBuilder {
        crate::operation::batch_create_workload_estimate_usage::builders::BatchCreateWorkloadEstimateUsageFluentBuilder::new(self.handle.clone())
    }
}
