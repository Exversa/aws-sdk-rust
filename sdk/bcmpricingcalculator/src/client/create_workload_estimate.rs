// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateWorkloadEstimate`](crate::operation::create_workload_estimate::builders::CreateWorkloadEstimateFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_workload_estimate::builders::CreateWorkloadEstimateFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_workload_estimate::builders::CreateWorkloadEstimateFluentBuilder::set_name):<br>required: **true**<br><p>A descriptive name for the workload estimate.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_workload_estimate::builders::CreateWorkloadEstimateFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_workload_estimate::builders::CreateWorkloadEstimateFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier to ensure idempotency of the request.</p><br>
    ///   - [`rate_type(WorkloadEstimateRateType)`](crate::operation::create_workload_estimate::builders::CreateWorkloadEstimateFluentBuilder::rate_type) / [`set_rate_type(Option<WorkloadEstimateRateType>)`](crate::operation::create_workload_estimate::builders::CreateWorkloadEstimateFluentBuilder::set_rate_type):<br>required: **false**<br><p>The type of pricing rates to use for the estimate.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_workload_estimate::builders::CreateWorkloadEstimateFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_workload_estimate::builders::CreateWorkloadEstimateFluentBuilder::set_tags):<br>required: **false**<br><p>The tags to apply to the workload estimate.</p><br>
    /// - On success, responds with [`CreateWorkloadEstimateOutput`](crate::operation::create_workload_estimate::CreateWorkloadEstimateOutput) with field(s):
    ///   - [`id(String)`](crate::operation::create_workload_estimate::CreateWorkloadEstimateOutput::id): <p>The unique identifier for the created workload estimate.</p>
    ///   - [`name(Option<String>)`](crate::operation::create_workload_estimate::CreateWorkloadEstimateOutput::name): <p>The name of the created workload estimate.</p>
    ///   - [`created_at(Option<DateTime>)`](crate::operation::create_workload_estimate::CreateWorkloadEstimateOutput::created_at): <p>The timestamp when the workload estimate was created.</p>
    ///   - [`expires_at(Option<DateTime>)`](crate::operation::create_workload_estimate::CreateWorkloadEstimateOutput::expires_at): <p>The timestamp when the workload estimate will expire.</p>
    ///   - [`rate_type(Option<WorkloadEstimateRateType>)`](crate::operation::create_workload_estimate::CreateWorkloadEstimateOutput::rate_type): <p>The type of pricing rates used for the estimate.</p>
    ///   - [`rate_timestamp(Option<DateTime>)`](crate::operation::create_workload_estimate::CreateWorkloadEstimateOutput::rate_timestamp): <p>The timestamp of the pricing rates used for the estimate.</p>
    ///   - [`status(Option<WorkloadEstimateStatus>)`](crate::operation::create_workload_estimate::CreateWorkloadEstimateOutput::status): <p>The current status of the workload estimate.</p>
    ///   - [`total_cost(Option<f64>)`](crate::operation::create_workload_estimate::CreateWorkloadEstimateOutput::total_cost): <p>The total estimated cost for the workload.</p>
    ///   - [`cost_currency(Option<CurrencyCode>)`](crate::operation::create_workload_estimate::CreateWorkloadEstimateOutput::cost_currency): <p>The currency of the estimated cost.</p>
    ///   - [`failure_message(Option<String>)`](crate::operation::create_workload_estimate::CreateWorkloadEstimateOutput::failure_message): <p>An error message if the workload estimate creation failed.</p>
    /// - On failure, responds with [`SdkError<CreateWorkloadEstimateError>`](crate::operation::create_workload_estimate::CreateWorkloadEstimateError)
    pub fn create_workload_estimate(&self) -> crate::operation::create_workload_estimate::builders::CreateWorkloadEstimateFluentBuilder {
        crate::operation::create_workload_estimate::builders::CreateWorkloadEstimateFluentBuilder::new(self.handle.clone())
    }
}
