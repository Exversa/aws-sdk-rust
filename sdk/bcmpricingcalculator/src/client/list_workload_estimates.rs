// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListWorkloadEstimates`](crate::operation::list_workload_estimates::builders::ListWorkloadEstimatesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_workload_estimates::builders::ListWorkloadEstimatesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`created_at_filter(FilterTimestamp)`](crate::operation::list_workload_estimates::builders::ListWorkloadEstimatesFluentBuilder::created_at_filter) / [`set_created_at_filter(Option<FilterTimestamp>)`](crate::operation::list_workload_estimates::builders::ListWorkloadEstimatesFluentBuilder::set_created_at_filter):<br>required: **false**<br><p>Filter workload estimates based on the creation date.</p><br>
    ///   - [`expires_at_filter(FilterTimestamp)`](crate::operation::list_workload_estimates::builders::ListWorkloadEstimatesFluentBuilder::expires_at_filter) / [`set_expires_at_filter(Option<FilterTimestamp>)`](crate::operation::list_workload_estimates::builders::ListWorkloadEstimatesFluentBuilder::set_expires_at_filter):<br>required: **false**<br><p>Filter workload estimates based on the expiration date.</p><br>
    ///   - [`filters(ListWorkloadEstimatesFilter)`](crate::operation::list_workload_estimates::builders::ListWorkloadEstimatesFluentBuilder::filters) / [`set_filters(Option<Vec::<ListWorkloadEstimatesFilter>>)`](crate::operation::list_workload_estimates::builders::ListWorkloadEstimatesFluentBuilder::set_filters):<br>required: **false**<br><p>Filters to apply to the list of workload estimates.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_workload_estimates::builders::ListWorkloadEstimatesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_workload_estimates::builders::ListWorkloadEstimatesFluentBuilder::set_next_token):<br>required: **false**<br><p>A token to retrieve the next page of results.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_workload_estimates::builders::ListWorkloadEstimatesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_workload_estimates::builders::ListWorkloadEstimatesFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return per page.</p><br>
    /// - On success, responds with [`ListWorkloadEstimatesOutput`](crate::operation::list_workload_estimates::ListWorkloadEstimatesOutput) with field(s):
    ///   - [`items(Option<Vec::<WorkloadEstimateSummary>>)`](crate::operation::list_workload_estimates::ListWorkloadEstimatesOutput::items): <p>The list of workload estimates for the account.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_workload_estimates::ListWorkloadEstimatesOutput::next_token): <p>A token to retrieve the next page of results, if any.</p>
    /// - On failure, responds with [`SdkError<ListWorkloadEstimatesError>`](crate::operation::list_workload_estimates::ListWorkloadEstimatesError)
    pub fn list_workload_estimates(&self) -> crate::operation::list_workload_estimates::builders::ListWorkloadEstimatesFluentBuilder {
        crate::operation::list_workload_estimates::builders::ListWorkloadEstimatesFluentBuilder::new(self.handle.clone())
    }
}
