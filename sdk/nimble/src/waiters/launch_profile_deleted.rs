// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

///
/// Fluent builder for the `launch_profile_deleted` waiter.
///
/// This builder is intended to be used similar to the other fluent builders for
/// normal operations on the client. However, instead of a `send` method, it has
/// a `wait` method that takes a maximum amount of time to wait.
///
/// Construct this fluent builder using the client by importing the
/// [`Waiters`](crate::client::Waiters) trait and calling the methods
/// prefixed with `wait_until`.
///
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct LaunchProfileDeletedFluentBuilder {
    handle: ::std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::get_launch_profile::builders::GetLaunchProfileInputBuilder,
}
impl LaunchProfileDeletedFluentBuilder {
    /// Creates a new `LaunchProfileDeletedFluentBuilder`.
    pub(crate) fn new(handle: ::std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: ::std::default::Default::default(),
        }
    }
    /// Access the GetLaunchProfile as a reference.
    pub fn as_input(&self) -> &crate::operation::get_launch_profile::builders::GetLaunchProfileInputBuilder {
        &self.inner
    }
    /// Wait until a LaunchProfile is Deleted. Use this after invoking DeleteLaunchProfile
    pub async fn wait(
        self,
        max_wait: ::std::time::Duration,
    ) -> ::std::result::Result<
        crate::waiters::launch_profile_deleted::LaunchProfileDeletedFinalPoll,
        crate::waiters::launch_profile_deleted::WaitUntilLaunchProfileDeletedError,
    > {
        let input = self
            .inner
            .build()
            .map_err(::aws_smithy_runtime_api::client::waiters::error::WaiterError::construction_failure)?;
        let runtime_plugins = crate::operation::get_launch_profile::GetLaunchProfile::operation_runtime_plugins(
            self.handle.runtime_plugins.clone(),
            &self.handle.conf,
            ::std::option::Option::None,
        )
        .with_operation_plugin(crate::sdk_feature_tracker::waiter::WaiterFeatureTrackerRuntimePlugin::new());
        let mut cfg = ::aws_smithy_types::config_bag::ConfigBag::base();
        let runtime_components_builder = runtime_plugins
            .apply_client_configuration(&mut cfg)
            .map_err(::aws_smithy_runtime_api::client::waiters::error::WaiterError::construction_failure)?;
        let time_components = runtime_components_builder.into_time_components();
        let sleep_impl = time_components.sleep_impl().expect("a sleep impl is required by waiters");
        let time_source = time_components.time_source().expect("a time source is required by waiters");

        let acceptor = move |result: ::std::result::Result<
            &crate::operation::get_launch_profile::GetLaunchProfileOutput,
            &crate::operation::get_launch_profile::GetLaunchProfileError,
        >| {
            // Matches: {"output":{"path":"launchProfile.state","expected":"DELETED","comparator":"stringEquals"}}
            if crate::waiters::matchers::match_get_launch_profile_387e0e8f7a620d8cd(result) {
                return ::aws_smithy_runtime::client::waiters::AcceptorState::Success;
            }
            // Matches: {"output":{"path":"launchProfile.state","expected":"DELETE_FAILED","comparator":"stringEquals"}}
            if crate::waiters::matchers::match_get_launch_profile_fb81e9a4d36ff5d6d(result) {
                return ::aws_smithy_runtime::client::waiters::AcceptorState::Failure;
            }
            ::aws_smithy_runtime::client::waiters::AcceptorState::NoAcceptorsMatched
        };
        let operation = move || {
            let input = input.clone();
            let runtime_plugins = runtime_plugins.clone();
            async move { crate::operation::get_launch_profile::GetLaunchProfile::orchestrate(&runtime_plugins, input).await }
        };
        let orchestrator = ::aws_smithy_runtime::client::waiters::WaiterOrchestrator::builder()
            .min_delay(::std::time::Duration::from_secs(5))
            .max_delay(::std::time::Duration::from_secs(750))
            .max_wait(max_wait)
            .time_source(time_source)
            .sleep_impl(sleep_impl)
            .acceptor(acceptor)
            .operation(operation)
            .build();
        ::aws_smithy_runtime::client::waiters::attach_waiter_tracing_span(orchestrator.orchestrate()).await
    }
    /// <p>The ID of the launch profile used to control access from the streaming session.</p>
    pub fn launch_profile_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.launch_profile_id(input.into());
        self
    }
    /// <p>The ID of the launch profile used to control access from the streaming session.</p>
    pub fn set_launch_profile_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.inner = self.inner.set_launch_profile_id(input);
        self
    }
    /// <p>The ID of the launch profile used to control access from the streaming session.</p>
    pub fn get_launch_profile_id(&self) -> &::std::option::Option<::std::string::String> {
        self.inner.get_launch_profile_id()
    }
    /// <p>The studio ID.</p>
    pub fn studio_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.studio_id(input.into());
        self
    }
    /// <p>The studio ID.</p>
    pub fn set_studio_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.inner = self.inner.set_studio_id(input);
        self
    }
    /// <p>The studio ID.</p>
    pub fn get_studio_id(&self) -> &::std::option::Option<::std::string::String> {
        self.inner.get_studio_id()
    }
}

/// Successful return type for the `launch_profile_deleted` waiter.
pub type LaunchProfileDeletedFinalPoll = ::aws_smithy_runtime_api::client::waiters::FinalPoll<
    crate::operation::get_launch_profile::GetLaunchProfileOutput,
    ::aws_smithy_runtime_api::client::result::SdkError<
        crate::operation::get_launch_profile::GetLaunchProfileError,
        ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
    >,
>;

/// Error type for the `launch_profile_deleted` waiter.
pub type WaitUntilLaunchProfileDeletedError = ::aws_smithy_runtime_api::client::waiters::error::WaiterError<
    crate::operation::get_launch_profile::GetLaunchProfileOutput,
    crate::operation::get_launch_profile::GetLaunchProfileError,
>;
