// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_list_search_job_backups_output_output_next_token(
    input: &crate::operation::list_search_job_backups::ListSearchJobBackupsOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn reflens_list_search_job_results_output_output_next_token(
    input: &crate::operation::list_search_job_results::ListSearchJobResultsOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn reflens_list_search_jobs_output_output_next_token(
    input: &crate::operation::list_search_jobs::ListSearchJobsOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn reflens_list_search_result_export_jobs_output_output_next_token(
    input: &crate::operation::list_search_result_export_jobs::ListSearchResultExportJobsOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_list_search_job_backups_output_output_results(
    input: crate::operation::list_search_job_backups::ListSearchJobBackupsOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::SearchJobBackupsResult>> {
    let input = input.results;
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_list_search_job_results_output_output_results(
    input: crate::operation::list_search_job_results::ListSearchJobResultsOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::ResultItem>> {
    let input = input.results;
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_list_search_jobs_output_output_search_jobs(
    input: crate::operation::list_search_jobs::ListSearchJobsOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::SearchJobSummary>> {
    let input = input.search_jobs;
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_list_search_result_export_jobs_output_output_export_jobs(
    input: crate::operation::list_search_result_export_jobs::ListSearchResultExportJobsOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::ExportJobSummary>> {
    let input = input.export_jobs;
    ::std::option::Option::Some(input)
}
