// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_list_recommendation_summaries_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::list_recommendation_summaries::ListRecommendationSummariesInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.filter {
        #[allow(unused_mut)]
        let mut object_2 = object.key("filter").start_object();
        crate::protocol_serde::shape_filter::ser_filter(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.group_by {
        object.key("groupBy").string(var_3.as_str());
    }
    if let Some(var_4) = &input.max_results {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_4).into()),
        );
    }
    if let Some(var_5) = &input.metrics {
        let mut array_6 = object.key("metrics").start_array();
        for item_7 in var_5 {
            {
                array_6.value().string(item_7.as_str());
            }
        }
        array_6.finish();
    }
    if let Some(var_8) = &input.next_token {
        object.key("nextToken").string(var_8.as_str());
    }
    Ok(())
}
