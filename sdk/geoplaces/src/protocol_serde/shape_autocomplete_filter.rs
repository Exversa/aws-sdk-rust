// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_autocomplete_filter(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::AutocompleteFilter,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.bounding_box {
        let mut array_2 = object.key("BoundingBox").start_array();
        for item_3 in var_1 {
            {
                array_2.value().number(
                    #[allow(clippy::useless_conversion)]
                    ::aws_smithy_types::Number::Float((*item_3).into()),
                );
            }
        }
        array_2.finish();
    }
    if let Some(var_4) = &input.circle {
        #[allow(unused_mut)]
        let mut object_5 = object.key("Circle").start_object();
        crate::protocol_serde::shape_filter_circle::ser_filter_circle(&mut object_5, var_4)?;
        object_5.finish();
    }
    if let Some(var_6) = &input.include_countries {
        let mut array_7 = object.key("IncludeCountries").start_array();
        for item_8 in var_6 {
            {
                array_7.value().string(item_8.as_str());
            }
        }
        array_7.finish();
    }
    if let Some(var_9) = &input.include_place_types {
        let mut array_10 = object.key("IncludePlaceTypes").start_array();
        for item_11 in var_9 {
            {
                array_10.value().string(item_11.as_str());
            }
        }
        array_10.finish();
    }
    Ok(())
}
