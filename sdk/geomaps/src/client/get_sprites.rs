// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetSprites`](crate::operation::get_sprites::builders::GetSpritesFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`file_name(impl Into<String>)`](crate::operation::get_sprites::builders::GetSpritesFluentBuilder::file_name) / [`set_file_name(Option<String>)`](crate::operation::get_sprites::builders::GetSpritesFluentBuilder::set_file_name):<br>required: **true**<br><p><code>Sprites</code> API: The name of the sprite Ô¨Åle to retrieve, following pattern <code>sprites(@2x)?\.(png|json)</code>.</p> <p>Example: <code>sprites.png</code></p><br>
    ///   - [`style(MapStyle)`](crate::operation::get_sprites::builders::GetSpritesFluentBuilder::style) / [`set_style(Option<MapStyle>)`](crate::operation::get_sprites::builders::GetSpritesFluentBuilder::set_style):<br>required: **true**<br><p>Style specifies the desired map style for the <code>Sprites</code> APIs.</p><br>
    ///   - [`color_scheme(ColorScheme)`](crate::operation::get_sprites::builders::GetSpritesFluentBuilder::color_scheme) / [`set_color_scheme(Option<ColorScheme>)`](crate::operation::get_sprites::builders::GetSpritesFluentBuilder::set_color_scheme):<br>required: **true**<br><p>Sets color tone for map such as dark and light for specific map styles. It applies to only vector map styles such as Standard and Monochrome.</p> <p>Example: <code>Light</code></p> <p>Default value: <code>Light</code></p><note>  <p>Valid values for ColorScheme are case sensitive.</p> </note><br>
    ///   - [`variant(Variant)`](crate::operation::get_sprites::builders::GetSpritesFluentBuilder::variant) / [`set_variant(Option<Variant>)`](crate::operation::get_sprites::builders::GetSpritesFluentBuilder::set_variant):<br>required: **true**<br><p>Optimizes map styles for specific use case or industry. You can choose allowed variant only with Standard map style.</p> <p>Example: <code>Default</code></p><note>  <p>Valid values for Variant are case sensitive.</p> </note><br>
    /// - On success, responds with [`GetSpritesOutput`](crate::operation::get_sprites::GetSpritesOutput) with field(s):
    ///   - [`blob(Option<Blob>)`](crate::operation::get_sprites::GetSpritesOutput::blob): <p>The body of the sprite sheet or JSON offset file (image/png or application/json, depending on input).</p>
    ///   - [`content_type(Option<String>)`](crate::operation::get_sprites::GetSpritesOutput::content_type): <p>Header that represents the format of the response. The response returns the following as the HTTP body.</p>
    ///   - [`cache_control(Option<String>)`](crate::operation::get_sprites::GetSpritesOutput::cache_control): <p>Header that instructs caching configuration for the client.</p>
    ///   - [`e_tag(Option<String>)`](crate::operation::get_sprites::GetSpritesOutput::e_tag): <p>The sprite's Etag.</p>
    /// - On failure, responds with [`SdkError<GetSpritesError>`](crate::operation::get_sprites::GetSpritesError)
    pub fn get_sprites(&self) -> crate::operation::get_sprites::builders::GetSpritesFluentBuilder {
        crate::operation::get_sprites::builders::GetSpritesFluentBuilder::new(self.handle.clone())
    }
}
