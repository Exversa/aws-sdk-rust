// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ConfigureLogsForPlaybackConfiguration`](crate::operation::configure_logs_for_playback_configuration::builders::ConfigureLogsForPlaybackConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`percent_enabled(i32)`](crate::operation::configure_logs_for_playback_configuration::builders::ConfigureLogsForPlaybackConfigurationFluentBuilder::percent_enabled) / [`set_percent_enabled(Option<i32>)`](crate::operation::configure_logs_for_playback_configuration::builders::ConfigureLogsForPlaybackConfigurationFluentBuilder::set_percent_enabled):<br>required: **true**<br><p>The percentage of session logs that MediaTailor sends to your CloudWatch Logs account. For example, if your playback configuration has 1000 sessions and percentEnabled is set to <code>60</code>, MediaTailor sends logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides at random which of the playback configuration sessions to send logs for. If you want to view logs for a specific session, you can use the <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/debug-log-mode.html">debug log mode</a>.</p> <p>Valid values: <code>0</code> - <code>100</code></p><br>
    ///   - [`playback_configuration_name(impl Into<String>)`](crate::operation::configure_logs_for_playback_configuration::builders::ConfigureLogsForPlaybackConfigurationFluentBuilder::playback_configuration_name) / [`set_playback_configuration_name(Option<String>)`](crate::operation::configure_logs_for_playback_configuration::builders::ConfigureLogsForPlaybackConfigurationFluentBuilder::set_playback_configuration_name):<br>required: **true**<br><p>The name of the playback configuration.</p><br>
    ///   - [`enabled_logging_strategies(LoggingStrategy)`](crate::operation::configure_logs_for_playback_configuration::builders::ConfigureLogsForPlaybackConfigurationFluentBuilder::enabled_logging_strategies) / [`set_enabled_logging_strategies(Option<Vec::<LoggingStrategy>>)`](crate::operation::configure_logs_for_playback_configuration::builders::ConfigureLogsForPlaybackConfigurationFluentBuilder::set_enabled_logging_strategies):<br>required: **false**<br><p>The method used for collecting logs from AWS Elemental MediaTailor. To configure MediaTailor to send logs directly to Amazon CloudWatch Logs, choose <code>LEGACY_CLOUDWATCH</code>. To configure MediaTailor to send logs to CloudWatch, which then vends the logs to your destination of choice, choose <code>VENDED_LOGS</code>. Supported destinations are CloudWatch Logs log group, Amazon S3 bucket, and Amazon Data Firehose stream.</p> <p>To use vended logs, you must configure the delivery destination in Amazon CloudWatch, as described in <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AWS-logs-and-resource-policy.html#AWS-vended-logs-permissions-V2">Enable logging from AWS services, Logging that requires additional permissions \[V2\]</a>.</p><br>
    ///   - [`ads_interaction_log(AdsInteractionLog)`](crate::operation::configure_logs_for_playback_configuration::builders::ConfigureLogsForPlaybackConfigurationFluentBuilder::ads_interaction_log) / [`set_ads_interaction_log(Option<AdsInteractionLog>)`](crate::operation::configure_logs_for_playback_configuration::builders::ConfigureLogsForPlaybackConfigurationFluentBuilder::set_ads_interaction_log):<br>required: **false**<br><p>The event types that MediaTailor emits in logs for interactions with the ADS.</p><br>
    ///   - [`manifest_service_interaction_log(ManifestServiceInteractionLog)`](crate::operation::configure_logs_for_playback_configuration::builders::ConfigureLogsForPlaybackConfigurationFluentBuilder::manifest_service_interaction_log) / [`set_manifest_service_interaction_log(Option<ManifestServiceInteractionLog>)`](crate::operation::configure_logs_for_playback_configuration::builders::ConfigureLogsForPlaybackConfigurationFluentBuilder::set_manifest_service_interaction_log):<br>required: **false**<br><p>The event types that MediaTailor emits in logs for interactions with the origin server.</p><br>
    /// - On success, responds with [`ConfigureLogsForPlaybackConfigurationOutput`](crate::operation::configure_logs_for_playback_configuration::ConfigureLogsForPlaybackConfigurationOutput) with field(s):
    ///   - [`percent_enabled(i32)`](crate::operation::configure_logs_for_playback_configuration::ConfigureLogsForPlaybackConfigurationOutput::percent_enabled): <p>The percentage of session logs that MediaTailor sends to your Cloudwatch Logs account.</p>
    ///   - [`playback_configuration_name(Option<String>)`](crate::operation::configure_logs_for_playback_configuration::ConfigureLogsForPlaybackConfigurationOutput::playback_configuration_name): <p>The name of the playback configuration.</p>
    ///   - [`enabled_logging_strategies(Option<Vec::<LoggingStrategy>>)`](crate::operation::configure_logs_for_playback_configuration::ConfigureLogsForPlaybackConfigurationOutput::enabled_logging_strategies): <p>The method used for collecting logs from AWS Elemental MediaTailor. <code>LEGACY_CLOUDWATCH</code> indicates that MediaTailor is sending logs directly to Amazon CloudWatch Logs. <code>VENDED_LOGS</code> indicates that MediaTailor is sending logs to CloudWatch, which then vends the logs to your destination of choice. Supported destinations are CloudWatch Logs log group, Amazon S3 bucket, and Amazon Data Firehose stream.</p>
    ///   - [`ads_interaction_log(Option<AdsInteractionLog>)`](crate::operation::configure_logs_for_playback_configuration::ConfigureLogsForPlaybackConfigurationOutput::ads_interaction_log): <p>The event types that MediaTailor emits in logs for interactions with the ADS.</p>
    ///   - [`manifest_service_interaction_log(Option<ManifestServiceInteractionLog>)`](crate::operation::configure_logs_for_playback_configuration::ConfigureLogsForPlaybackConfigurationOutput::manifest_service_interaction_log): <p>The event types that MediaTailor emits in logs for interactions with the origin server.</p>
    /// - On failure, responds with [`SdkError<ConfigureLogsForPlaybackConfigurationError>`](crate::operation::configure_logs_for_playback_configuration::ConfigureLogsForPlaybackConfigurationError)
    pub fn configure_logs_for_playback_configuration(
        &self,
    ) -> crate::operation::configure_logs_for_playback_configuration::builders::ConfigureLogsForPlaybackConfigurationFluentBuilder {
        crate::operation::configure_logs_for_playback_configuration::builders::ConfigureLogsForPlaybackConfigurationFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
