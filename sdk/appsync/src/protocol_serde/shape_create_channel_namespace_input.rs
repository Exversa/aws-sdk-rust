// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_channel_namespace_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_channel_namespace::CreateChannelNamespaceInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.code_handlers {
        object.key("codeHandlers").string(var_1.as_str());
    }
    if let Some(var_2) = &input.handler_configs {
        #[allow(unused_mut)]
        let mut object_3 = object.key("handlerConfigs").start_object();
        crate::protocol_serde::shape_handler_configs::ser_handler_configs(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.name {
        object.key("name").string(var_4.as_str());
    }
    if let Some(var_5) = &input.publish_auth_modes {
        let mut array_6 = object.key("publishAuthModes").start_array();
        for item_7 in var_5 {
            {
                #[allow(unused_mut)]
                let mut object_8 = array_6.value().start_object();
                crate::protocol_serde::shape_auth_mode::ser_auth_mode(&mut object_8, item_7)?;
                object_8.finish();
            }
        }
        array_6.finish();
    }
    if let Some(var_9) = &input.subscribe_auth_modes {
        let mut array_10 = object.key("subscribeAuthModes").start_array();
        for item_11 in var_9 {
            {
                #[allow(unused_mut)]
                let mut object_12 = array_10.value().start_object();
                crate::protocol_serde::shape_auth_mode::ser_auth_mode(&mut object_12, item_11)?;
                object_12.finish();
            }
        }
        array_10.finish();
    }
    if let Some(var_13) = &input.tags {
        #[allow(unused_mut)]
        let mut object_14 = object.key("tags").start_object();
        for (key_15, value_16) in var_13 {
            {
                object_14.key(key_15.as_str()).string(value_16.as_str());
            }
        }
        object_14.finish();
    }
    Ok(())
}
