// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetRegisteredSubscriptionProvider`](crate::operation::get_registered_subscription_provider::builders::GetRegisteredSubscriptionProviderFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`subscription_provider_arn(impl Into<String>)`](crate::operation::get_registered_subscription_provider::builders::GetRegisteredSubscriptionProviderFluentBuilder::subscription_provider_arn) / [`set_subscription_provider_arn(Option<String>)`](crate::operation::get_registered_subscription_provider::builders::GetRegisteredSubscriptionProviderFluentBuilder::set_subscription_provider_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the BYOL registration resource to get details for.</p><br>
    /// - On success, responds with [`GetRegisteredSubscriptionProviderOutput`](crate::operation::get_registered_subscription_provider::GetRegisteredSubscriptionProviderOutput) with field(s):
    ///   - [`subscription_provider_arn(Option<String>)`](crate::operation::get_registered_subscription_provider::GetRegisteredSubscriptionProviderOutput::subscription_provider_arn): <p>The Amazon Resource Name (ARN) for the BYOL registration resource specified in the request.</p>
    ///   - [`subscription_provider_source(Option<SubscriptionProviderSource>)`](crate::operation::get_registered_subscription_provider::GetRegisteredSubscriptionProviderOutput::subscription_provider_source): <p>The subscription provider for the BYOL registration resource specified in the request.</p>
    ///   - [`secret_arn(Option<String>)`](crate::operation::get_registered_subscription_provider::GetRegisteredSubscriptionProviderOutput::secret_arn): <p>The Amazon Resource Name (ARN) of the third-party access secret stored in Secrets Manager for the BYOL registration resource specified in the request.</p>
    ///   - [`subscription_provider_status(Option<SubscriptionProviderStatus>)`](crate::operation::get_registered_subscription_provider::GetRegisteredSubscriptionProviderOutput::subscription_provider_status): <p>The status of the Linux subscription provider access token from the last successful subscription data request.</p>
    ///   - [`subscription_provider_status_message(Option<String>)`](crate::operation::get_registered_subscription_provider::GetRegisteredSubscriptionProviderOutput::subscription_provider_status_message): <p>The detailed message from your subscription provider token status.</p>
    ///   - [`last_successful_data_retrieval_time(Option<String>)`](crate::operation::get_registered_subscription_provider::GetRegisteredSubscriptionProviderOutput::last_successful_data_retrieval_time): <p>The timestamp from the last time License Manager retrieved subscription details from your registered third-party Linux subscription provider.</p>
    /// - On failure, responds with [`SdkError<GetRegisteredSubscriptionProviderError>`](crate::operation::get_registered_subscription_provider::GetRegisteredSubscriptionProviderError)
    pub fn get_registered_subscription_provider(
        &self,
    ) -> crate::operation::get_registered_subscription_provider::builders::GetRegisteredSubscriptionProviderFluentBuilder {
        crate::operation::get_registered_subscription_provider::builders::GetRegisteredSubscriptionProviderFluentBuilder::new(self.handle.clone())
    }
}
