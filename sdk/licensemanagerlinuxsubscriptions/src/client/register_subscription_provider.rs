// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RegisterSubscriptionProvider`](crate::operation::register_subscription_provider::builders::RegisterSubscriptionProviderFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`subscription_provider_source(SubscriptionProviderSource)`](crate::operation::register_subscription_provider::builders::RegisterSubscriptionProviderFluentBuilder::subscription_provider_source) / [`set_subscription_provider_source(Option<SubscriptionProviderSource>)`](crate::operation::register_subscription_provider::builders::RegisterSubscriptionProviderFluentBuilder::set_subscription_provider_source):<br>required: **true**<br><p>The supported Linux subscription provider to register.</p><br>
    ///   - [`secret_arn(impl Into<String>)`](crate::operation::register_subscription_provider::builders::RegisterSubscriptionProviderFluentBuilder::secret_arn) / [`set_secret_arn(Option<String>)`](crate::operation::register_subscription_provider::builders::RegisterSubscriptionProviderFluentBuilder::set_secret_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the secret where you've stored your subscription provider's access token. For RHEL subscriptions managed through the Red Hat Subscription Manager (RHSM), the secret contains your Red Hat Offline token.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::register_subscription_provider::builders::RegisterSubscriptionProviderFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::register_subscription_provider::builders::RegisterSubscriptionProviderFluentBuilder::set_tags):<br>required: **false**<br><p>The metadata tags to assign to your registered Linux subscription provider resource.</p><br>
    /// - On success, responds with [`RegisterSubscriptionProviderOutput`](crate::operation::register_subscription_provider::RegisterSubscriptionProviderOutput) with field(s):
    ///   - [`subscription_provider_source(Option<SubscriptionProviderSource>)`](crate::operation::register_subscription_provider::RegisterSubscriptionProviderOutput::subscription_provider_source): <p>The Linux subscription provider that you registered.</p>
    ///   - [`subscription_provider_arn(Option<String>)`](crate::operation::register_subscription_provider::RegisterSubscriptionProviderOutput::subscription_provider_arn): <p>The Amazon Resource Name (ARN) of the Linux subscription provider resource that you registered.</p>
    ///   - [`subscription_provider_status(Option<SubscriptionProviderStatus>)`](crate::operation::register_subscription_provider::RegisterSubscriptionProviderOutput::subscription_provider_status): <p>Indicates the status of the registration action for the Linux subscription provider that you requested.</p>
    /// - On failure, responds with [`SdkError<RegisterSubscriptionProviderError>`](crate::operation::register_subscription_provider::RegisterSubscriptionProviderError)
    pub fn register_subscription_provider(
        &self,
    ) -> crate::operation::register_subscription_provider::builders::RegisterSubscriptionProviderFluentBuilder {
        crate::operation::register_subscription_provider::builders::RegisterSubscriptionProviderFluentBuilder::new(self.handle.clone())
    }
}
