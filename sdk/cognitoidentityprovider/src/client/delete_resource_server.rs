// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteResourceServer`](crate::operation::delete_resource_server::builders::DeleteResourceServerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`user_pool_id(impl Into<String>)`](crate::operation::delete_resource_server::builders::DeleteResourceServerFluentBuilder::user_pool_id) / [`set_user_pool_id(Option<String>)`](crate::operation::delete_resource_server::builders::DeleteResourceServerFluentBuilder::set_user_pool_id):<br>required: **true**<br><p>The ID of the user pool where you want to delete the resource server.</p><br>
    ///   - [`identifier(impl Into<String>)`](crate::operation::delete_resource_server::builders::DeleteResourceServerFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::delete_resource_server::builders::DeleteResourceServerFluentBuilder::set_identifier):<br>required: **true**<br><p>The identifier of the resource server that you want to delete.</p><br>
    /// - On success, responds with [`DeleteResourceServerOutput`](crate::operation::delete_resource_server::DeleteResourceServerOutput)
    /// - On failure, responds with [`SdkError<DeleteResourceServerError>`](crate::operation::delete_resource_server::DeleteResourceServerError)
    pub fn delete_resource_server(&self) -> crate::operation::delete_resource_server::builders::DeleteResourceServerFluentBuilder {
        crate::operation::delete_resource_server::builders::DeleteResourceServerFluentBuilder::new(self.handle.clone())
    }
}
