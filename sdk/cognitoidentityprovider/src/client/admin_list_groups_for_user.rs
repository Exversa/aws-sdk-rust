// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AdminListGroupsForUser`](crate::operation::admin_list_groups_for_user::builders::AdminListGroupsForUserFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::admin_list_groups_for_user::builders::AdminListGroupsForUserFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`username(impl Into<String>)`](crate::operation::admin_list_groups_for_user::builders::AdminListGroupsForUserFluentBuilder::username) / [`set_username(Option<String>)`](crate::operation::admin_list_groups_for_user::builders::AdminListGroupsForUserFluentBuilder::set_username):<br>required: **true**<br><p>The name of the user that you want to query or modify. The value of this parameter is typically your user's username, but it can be any of their alias attributes. If <code>username</code> isn't an alias attribute in your user pool, this value must be the <code>sub</code> of a local user or the username of a user from a third-party IdP.</p><br>
    ///   - [`user_pool_id(impl Into<String>)`](crate::operation::admin_list_groups_for_user::builders::AdminListGroupsForUserFluentBuilder::user_pool_id) / [`set_user_pool_id(Option<String>)`](crate::operation::admin_list_groups_for_user::builders::AdminListGroupsForUserFluentBuilder::set_user_pool_id):<br>required: **true**<br><p>The ID of the user pool where you want to view a user's groups.</p><br>
    ///   - [`limit(i32)`](crate::operation::admin_list_groups_for_user::builders::AdminListGroupsForUserFluentBuilder::limit) / [`set_limit(Option<i32>)`](crate::operation::admin_list_groups_for_user::builders::AdminListGroupsForUserFluentBuilder::set_limit):<br>required: **false**<br><p>The maximum number of groups that you want Amazon Cognito to return in the response.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::admin_list_groups_for_user::builders::AdminListGroupsForUserFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::admin_list_groups_for_user::builders::AdminListGroupsForUserFluentBuilder::set_next_token):<br>required: **false**<br><p>This API operation returns a limited number of results. The pagination token is an identifier that you can present in an additional API request with the same parameters. When you include the pagination token, Amazon Cognito returns the next set of items after the current list. Subsequent requests return a new pagination token. By use of this token, you can paginate through the full list of items.</p><br>
    /// - On success, responds with [`AdminListGroupsForUserOutput`](crate::operation::admin_list_groups_for_user::AdminListGroupsForUserOutput) with field(s):
    ///   - [`groups(Option<Vec::<GroupType>>)`](crate::operation::admin_list_groups_for_user::AdminListGroupsForUserOutput::groups): <p>An array of groups and information about them.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::admin_list_groups_for_user::AdminListGroupsForUserOutput::next_token): <p>The identifier that Amazon Cognito returned with the previous request to this operation. When you include a pagination token in your request, Amazon Cognito returns the next set of items in the list. By use of this token, you can paginate through the full list of items.</p>
    /// - On failure, responds with [`SdkError<AdminListGroupsForUserError>`](crate::operation::admin_list_groups_for_user::AdminListGroupsForUserError)
    pub fn admin_list_groups_for_user(&self) -> crate::operation::admin_list_groups_for_user::builders::AdminListGroupsForUserFluentBuilder {
        crate::operation::admin_list_groups_for_user::builders::AdminListGroupsForUserFluentBuilder::new(self.handle.clone())
    }
}
