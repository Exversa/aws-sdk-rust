// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateAuthEventFeedback`](crate::operation::update_auth_event_feedback::builders::UpdateAuthEventFeedbackFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`user_pool_id(impl Into<String>)`](crate::operation::update_auth_event_feedback::builders::UpdateAuthEventFeedbackFluentBuilder::user_pool_id) / [`set_user_pool_id(Option<String>)`](crate::operation::update_auth_event_feedback::builders::UpdateAuthEventFeedbackFluentBuilder::set_user_pool_id):<br>required: **true**<br><p>The ID of the user pool where you want to update auth event feedback.</p><br>
    ///   - [`username(impl Into<String>)`](crate::operation::update_auth_event_feedback::builders::UpdateAuthEventFeedbackFluentBuilder::username) / [`set_username(Option<String>)`](crate::operation::update_auth_event_feedback::builders::UpdateAuthEventFeedbackFluentBuilder::set_username):<br>required: **true**<br><p>The name of the user that you want to query or modify. The value of this parameter is typically your user's username, but it can be any of their alias attributes. If <code>username</code> isn't an alias attribute in your user pool, this value must be the <code>sub</code> of a local user or the username of a user from a third-party IdP.</p><br>
    ///   - [`event_id(impl Into<String>)`](crate::operation::update_auth_event_feedback::builders::UpdateAuthEventFeedbackFluentBuilder::event_id) / [`set_event_id(Option<String>)`](crate::operation::update_auth_event_feedback::builders::UpdateAuthEventFeedbackFluentBuilder::set_event_id):<br>required: **true**<br><p>The ID of the authentication event that you want to submit feedback for.</p><br>
    ///   - [`feedback_token(impl Into<String>)`](crate::operation::update_auth_event_feedback::builders::UpdateAuthEventFeedbackFluentBuilder::feedback_token) / [`set_feedback_token(Option<String>)`](crate::operation::update_auth_event_feedback::builders::UpdateAuthEventFeedbackFluentBuilder::set_feedback_token):<br>required: **true**<br><p>The feedback token, an encrypted object generated by Amazon Cognito and passed to your user in the notification email message from the event.</p><br>
    ///   - [`feedback_value(FeedbackValueType)`](crate::operation::update_auth_event_feedback::builders::UpdateAuthEventFeedbackFluentBuilder::feedback_value) / [`set_feedback_value(Option<FeedbackValueType>)`](crate::operation::update_auth_event_feedback::builders::UpdateAuthEventFeedbackFluentBuilder::set_feedback_value):<br>required: **true**<br><p>Your feedback to the authentication event. When you provide a <code>FeedbackValue</code> value of <code>valid</code>, you tell Amazon Cognito that you trust a user session where Amazon Cognito has evaluated some level of risk. When you provide a <code>FeedbackValue</code> value of <code>invalid</code>, you tell Amazon Cognito that you don't trust a user session, or you don't believe that Amazon Cognito evaluated a high-enough risk level.</p><br>
    /// - On success, responds with [`UpdateAuthEventFeedbackOutput`](crate::operation::update_auth_event_feedback::UpdateAuthEventFeedbackOutput)
    /// - On failure, responds with [`SdkError<UpdateAuthEventFeedbackError>`](crate::operation::update_auth_event_feedback::UpdateAuthEventFeedbackError)
    pub fn update_auth_event_feedback(&self) -> crate::operation::update_auth_event_feedback::builders::UpdateAuthEventFeedbackFluentBuilder {
        crate::operation::update_auth_event_feedback::builders::UpdateAuthEventFeedbackFluentBuilder::new(self.handle.clone())
    }
}
