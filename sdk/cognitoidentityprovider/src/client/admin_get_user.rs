// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AdminGetUser`](crate::operation::admin_get_user::builders::AdminGetUserFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`user_pool_id(impl Into<String>)`](crate::operation::admin_get_user::builders::AdminGetUserFluentBuilder::user_pool_id) / [`set_user_pool_id(Option<String>)`](crate::operation::admin_get_user::builders::AdminGetUserFluentBuilder::set_user_pool_id):<br>required: **true**<br><p>The ID of the user pool where you want to get information about the user.</p><br>
    ///   - [`username(impl Into<String>)`](crate::operation::admin_get_user::builders::AdminGetUserFluentBuilder::username) / [`set_username(Option<String>)`](crate::operation::admin_get_user::builders::AdminGetUserFluentBuilder::set_username):<br>required: **true**<br><p>The username of the user that you want to query or modify. The value of this parameter is typically your user's username, but it can be any of their alias attributes. If <code>username</code> isn't an alias attribute in your user pool, this value must be the <code>sub</code> of a local user or the username of a user from a third-party IdP.</p><br>
    /// - On success, responds with [`AdminGetUserOutput`](crate::operation::admin_get_user::AdminGetUserOutput) with field(s):
    ///   - [`username(String)`](crate::operation::admin_get_user::AdminGetUserOutput::username): <p>The username of the user that you requested.</p>
    ///   - [`user_attributes(Option<Vec::<AttributeType>>)`](crate::operation::admin_get_user::AdminGetUserOutput::user_attributes): <p>An array of name-value pairs of user attributes and their values, for example <code>"email": "testuser@example.com"</code>.</p>
    ///   - [`user_create_date(Option<DateTime>)`](crate::operation::admin_get_user::AdminGetUserOutput::user_create_date): <p>The date and time when the item was created. Amazon Cognito returns this timestamp in UNIX epoch time format. Your SDK might render the output in a human-readable format like ISO 8601 or a Java <code>Date</code> object.</p>
    ///   - [`user_last_modified_date(Option<DateTime>)`](crate::operation::admin_get_user::AdminGetUserOutput::user_last_modified_date): <p>The date and time when the item was modified. Amazon Cognito returns this timestamp in UNIX epoch time format. Your SDK might render the output in a human-readable format like ISO 8601 or a Java <code>Date</code> object.</p>
    ///   - [`enabled(bool)`](crate::operation::admin_get_user::AdminGetUserOutput::enabled): <p>Indicates whether the user is activated for sign-in. The <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminDisableUser.html">AdminDisableUser</a> and <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminEnableUser.html">AdminEnableUser</a> API operations deactivate and activate user sign-in, respectively.</p>
    ///   - [`user_status(Option<UserStatusType>)`](crate::operation::admin_get_user::AdminGetUserOutput::user_status): <p>The user's status. Can be one of the following:</p> <ul>  <li>   <p>UNCONFIRMED - User has been created but not confirmed.</p></li>  <li>   <p>CONFIRMED - User has been confirmed.</p></li>  <li>   <p>UNKNOWN - User status isn't known.</p></li>  <li>   <p>RESET_REQUIRED - User is confirmed, but the user must request a code and reset their password before they can sign in.</p></li>  <li>   <p>FORCE_CHANGE_PASSWORD - The user is confirmed and the user can sign in using a temporary password, but on first sign-in, the user must change their password to a new value before doing anything else.</p></li>  <li>   <p>EXTERNAL_PROVIDER - The user signed in with a third-party identity provider.</p></li> </ul>
    ///   - [`mfa_options(Option<Vec::<MfaOptionType>>)`](crate::operation::admin_get_user::AdminGetUserOutput::mfa_options): <p><i>This response parameter is no longer supported.</i> It provides information only about SMS MFA configurations. It doesn't provide information about time-based one-time password (TOTP) software token MFA configurations. To look up information about either type of MFA configuration, use UserMFASettingList instead.</p>
    ///   - [`preferred_mfa_setting(Option<String>)`](crate::operation::admin_get_user::AdminGetUserOutput::preferred_mfa_setting): <p>The user's preferred MFA. Users can prefer SMS message, email message, or TOTP MFA.</p>
    ///   - [`user_mfa_setting_list(Option<Vec::<String>>)`](crate::operation::admin_get_user::AdminGetUserOutput::user_mfa_setting_list): <p>The MFA options that are activated for the user. The possible values in this list are <code>SMS_MFA</code>, <code>EMAIL_OTP</code>, and <code>SOFTWARE_TOKEN_MFA</code>. You can change the MFA preference for users who have more than one available MFA factor with <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminSetUserMFAPreference.html">AdminSetUserMFAPreference</a> or <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SetUserMFAPreference.html">SetUserMFAPreference</a>.</p>
    /// - On failure, responds with [`SdkError<AdminGetUserError>`](crate::operation::admin_get_user::AdminGetUserError)
    pub fn admin_get_user(&self) -> crate::operation::admin_get_user::builders::AdminGetUserFluentBuilder {
        crate::operation::admin_get_user::builders::AdminGetUserFluentBuilder::new(self.handle.clone())
    }
}
