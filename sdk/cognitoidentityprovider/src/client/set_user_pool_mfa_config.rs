// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SetUserPoolMfaConfig`](crate::operation::set_user_pool_mfa_config::builders::SetUserPoolMfaConfigFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`user_pool_id(impl Into<String>)`](crate::operation::set_user_pool_mfa_config::builders::SetUserPoolMfaConfigFluentBuilder::user_pool_id) / [`set_user_pool_id(Option<String>)`](crate::operation::set_user_pool_mfa_config::builders::SetUserPoolMfaConfigFluentBuilder::set_user_pool_id):<br>required: **true**<br><p>The user pool ID.</p><br>
    ///   - [`sms_mfa_configuration(SmsMfaConfigType)`](crate::operation::set_user_pool_mfa_config::builders::SetUserPoolMfaConfigFluentBuilder::sms_mfa_configuration) / [`set_sms_mfa_configuration(Option<SmsMfaConfigType>)`](crate::operation::set_user_pool_mfa_config::builders::SetUserPoolMfaConfigFluentBuilder::set_sms_mfa_configuration):<br>required: **false**<br><p>Configures user pool SMS messages for MFA. Sets the message template and the SMS message sending configuration for Amazon SNS.</p><br>
    ///   - [`software_token_mfa_configuration(SoftwareTokenMfaConfigType)`](crate::operation::set_user_pool_mfa_config::builders::SetUserPoolMfaConfigFluentBuilder::software_token_mfa_configuration) / [`set_software_token_mfa_configuration(Option<SoftwareTokenMfaConfigType>)`](crate::operation::set_user_pool_mfa_config::builders::SetUserPoolMfaConfigFluentBuilder::set_software_token_mfa_configuration):<br>required: **false**<br><p>Configures a user pool for time-based one-time password (TOTP) MFA. Enables or disables TOTP.</p><br>
    ///   - [`email_mfa_configuration(EmailMfaConfigType)`](crate::operation::set_user_pool_mfa_config::builders::SetUserPoolMfaConfigFluentBuilder::email_mfa_configuration) / [`set_email_mfa_configuration(Option<EmailMfaConfigType>)`](crate::operation::set_user_pool_mfa_config::builders::SetUserPoolMfaConfigFluentBuilder::set_email_mfa_configuration):<br>required: **false**<br><p>Sets configuration for user pool email message MFA and sign-in with one-time passwords (OTPs). Includes the subject and body of the email message template for sign-in and MFA messages. To activate this setting, your user pool must be in the <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/feature-plans-features-essentials.html"> Essentials tier</a> or higher.</p><br>
    ///   - [`mfa_configuration(UserPoolMfaType)`](crate::operation::set_user_pool_mfa_config::builders::SetUserPoolMfaConfigFluentBuilder::mfa_configuration) / [`set_mfa_configuration(Option<UserPoolMfaType>)`](crate::operation::set_user_pool_mfa_config::builders::SetUserPoolMfaConfigFluentBuilder::set_mfa_configuration):<br>required: **false**<br><p>Sets multi-factor authentication (MFA) to be on, off, or optional. When <code>ON</code>, all users must set up MFA before they can sign in. When <code>OPTIONAL</code>, your application must make a client-side determination of whether a user wants to register an MFA device. For user pools with adaptive authentication with threat protection, choose <code>OPTIONAL</code>.</p> <p>When <code>MfaConfiguration</code> is <code>OPTIONAL</code>, managed login doesn't automatically prompt users to set up MFA. Amazon Cognito generates MFA prompts in API responses and in managed login for users who have chosen and configured a preferred MFA factor.</p><br>
    ///   - [`web_authn_configuration(WebAuthnConfigurationType)`](crate::operation::set_user_pool_mfa_config::builders::SetUserPoolMfaConfigFluentBuilder::web_authn_configuration) / [`set_web_authn_configuration(Option<WebAuthnConfigurationType>)`](crate::operation::set_user_pool_mfa_config::builders::SetUserPoolMfaConfigFluentBuilder::set_web_authn_configuration):<br>required: **false**<br><p>The configuration of your user pool for passkey, or WebAuthn, authentication and registration. You can set this configuration independent of the MFA configuration options in this operation.</p><br>
    /// - On success, responds with [`SetUserPoolMfaConfigOutput`](crate::operation::set_user_pool_mfa_config::SetUserPoolMfaConfigOutput) with field(s):
    ///   - [`sms_mfa_configuration(Option<SmsMfaConfigType>)`](crate::operation::set_user_pool_mfa_config::SetUserPoolMfaConfigOutput::sms_mfa_configuration): <p>Shows user pool SMS message configuration for MFA and sign-in with SMS-message OTPs. Includes the message template and the SMS message sending configuration for Amazon SNS.</p>
    ///   - [`software_token_mfa_configuration(Option<SoftwareTokenMfaConfigType>)`](crate::operation::set_user_pool_mfa_config::SetUserPoolMfaConfigOutput::software_token_mfa_configuration): <p>Shows user pool configuration for time-based one-time password (TOTP) MFA. Includes TOTP enabled or disabled state.</p>
    ///   - [`email_mfa_configuration(Option<EmailMfaConfigType>)`](crate::operation::set_user_pool_mfa_config::SetUserPoolMfaConfigOutput::email_mfa_configuration): <p>Shows configuration for user pool email message MFA and sign-in with one-time passwords (OTPs). Includes the subject and body of the email message template for sign-in and MFA messages. To activate this setting, your user pool must be in the <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/feature-plans-features-essentials.html"> Essentials tier</a> or higher.</p>
    ///   - [`mfa_configuration(Option<UserPoolMfaType>)`](crate::operation::set_user_pool_mfa_config::SetUserPoolMfaConfigOutput::mfa_configuration): <p>Displays multi-factor authentication (MFA) as on, off, or optional. When <code>ON</code>, all users must set up MFA before they can sign in. When <code>OPTIONAL</code>, your application must make a client-side determination of whether a user wants to register an MFA device. For user pools with adaptive authentication with threat protection, choose <code>OPTIONAL</code>.</p> <p>When <code>MfaConfiguration</code> is <code>OPTIONAL</code>, managed login doesn't automatically prompt users to set up MFA. Amazon Cognito generates MFA prompts in API responses and in managed login for users who have chosen and configured a preferred MFA factor.</p>
    ///   - [`web_authn_configuration(Option<WebAuthnConfigurationType>)`](crate::operation::set_user_pool_mfa_config::SetUserPoolMfaConfigOutput::web_authn_configuration): <p>The configuration of your user pool for passkey, or WebAuthn, sign-in with authenticators like biometric and security-key devices. Includes relying-party configuration and settings for user-verification requirements.</p>
    /// - On failure, responds with [`SdkError<SetUserPoolMfaConfigError>`](crate::operation::set_user_pool_mfa_config::SetUserPoolMfaConfigError)
    pub fn set_user_pool_mfa_config(&self) -> crate::operation::set_user_pool_mfa_config::builders::SetUserPoolMfaConfigFluentBuilder {
        crate::operation::set_user_pool_mfa_config::builders::SetUserPoolMfaConfigFluentBuilder::new(self.handle.clone())
    }
}
