// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetIdentityProviderByIdentifier`](crate::operation::get_identity_provider_by_identifier::builders::GetIdentityProviderByIdentifierFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`user_pool_id(impl Into<String>)`](crate::operation::get_identity_provider_by_identifier::builders::GetIdentityProviderByIdentifierFluentBuilder::user_pool_id) / [`set_user_pool_id(Option<String>)`](crate::operation::get_identity_provider_by_identifier::builders::GetIdentityProviderByIdentifierFluentBuilder::set_user_pool_id):<br>required: **true**<br><p>The ID of the user pool where you want to get information about the IdP.</p><br>
    ///   - [`idp_identifier(impl Into<String>)`](crate::operation::get_identity_provider_by_identifier::builders::GetIdentityProviderByIdentifierFluentBuilder::idp_identifier) / [`set_idp_identifier(Option<String>)`](crate::operation::get_identity_provider_by_identifier::builders::GetIdentityProviderByIdentifierFluentBuilder::set_idp_identifier):<br>required: **true**<br><p>The identifier that you assigned to your user pool. The identifier is an alternative name for an IdP that is distinct from the IdP name. For example, an IdP with a name of <code>MyIdP</code> might have an identifier of the email domain <code>example.com</code>.</p><br>
    /// - On success, responds with [`GetIdentityProviderByIdentifierOutput`](crate::operation::get_identity_provider_by_identifier::GetIdentityProviderByIdentifierOutput) with field(s):
    ///   - [`identity_provider(Option<IdentityProviderType>)`](crate::operation::get_identity_provider_by_identifier::GetIdentityProviderByIdentifierOutput::identity_provider): <p>The configuration of the IdP in your user pool. Includes additional identifiers, the IdP name and type, and trust-relationship details like the issuer URL.</p>
    /// - On failure, responds with [`SdkError<GetIdentityProviderByIdentifierError>`](crate::operation::get_identity_provider_by_identifier::GetIdentityProviderByIdentifierError)
    pub fn get_identity_provider_by_identifier(
        &self,
    ) -> crate::operation::get_identity_provider_by_identifier::builders::GetIdentityProviderByIdentifierFluentBuilder {
        crate::operation::get_identity_provider_by_identifier::builders::GetIdentityProviderByIdentifierFluentBuilder::new(self.handle.clone())
    }
}
