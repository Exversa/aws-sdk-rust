// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeManagedLoginBrandingByClient`](crate::operation::describe_managed_login_branding_by_client::builders::DescribeManagedLoginBrandingByClientFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`user_pool_id(impl Into<String>)`](crate::operation::describe_managed_login_branding_by_client::builders::DescribeManagedLoginBrandingByClientFluentBuilder::user_pool_id) / [`set_user_pool_id(Option<String>)`](crate::operation::describe_managed_login_branding_by_client::builders::DescribeManagedLoginBrandingByClientFluentBuilder::set_user_pool_id):<br>required: **true**<br><p>The ID of the user pool that contains the app client where you want more information about the managed login branding style.</p><br>
    ///   - [`client_id(impl Into<String>)`](crate::operation::describe_managed_login_branding_by_client::builders::DescribeManagedLoginBrandingByClientFluentBuilder::client_id) / [`set_client_id(Option<String>)`](crate::operation::describe_managed_login_branding_by_client::builders::DescribeManagedLoginBrandingByClientFluentBuilder::set_client_id):<br>required: **true**<br><p>The app client that's assigned to the branding style that you want more information about.</p><br>
    ///   - [`return_merged_resources(bool)`](crate::operation::describe_managed_login_branding_by_client::builders::DescribeManagedLoginBrandingByClientFluentBuilder::return_merged_resources) / [`set_return_merged_resources(Option<bool>)`](crate::operation::describe_managed_login_branding_by_client::builders::DescribeManagedLoginBrandingByClientFluentBuilder::set_return_merged_resources):<br>required: **false**<br><p>When <code>true</code>, returns values for branding options that are unchanged from Amazon Cognito defaults. When <code>false</code> or when you omit this parameter, returns only values that you customized in your branding style.</p><br>
    /// - On success, responds with [`DescribeManagedLoginBrandingByClientOutput`](crate::operation::describe_managed_login_branding_by_client::DescribeManagedLoginBrandingByClientOutput) with field(s):
    ///   - [`managed_login_branding(Option<ManagedLoginBrandingType>)`](crate::operation::describe_managed_login_branding_by_client::DescribeManagedLoginBrandingByClientOutput::managed_login_branding): <p>The details of the requested branding style.</p>
    /// - On failure, responds with [`SdkError<DescribeManagedLoginBrandingByClientError>`](crate::operation::describe_managed_login_branding_by_client::DescribeManagedLoginBrandingByClientError)
    pub fn describe_managed_login_branding_by_client(
        &self,
    ) -> crate::operation::describe_managed_login_branding_by_client::builders::DescribeManagedLoginBrandingByClientFluentBuilder {
        crate::operation::describe_managed_login_branding_by_client::builders::DescribeManagedLoginBrandingByClientFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
