// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetUserAttributeVerificationCode`](crate::operation::get_user_attribute_verification_code::builders::GetUserAttributeVerificationCodeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`access_token(impl Into<String>)`](crate::operation::get_user_attribute_verification_code::builders::GetUserAttributeVerificationCodeFluentBuilder::access_token) / [`set_access_token(Option<String>)`](crate::operation::get_user_attribute_verification_code::builders::GetUserAttributeVerificationCodeFluentBuilder::set_access_token):<br>required: **true**<br><p>A valid access token that Amazon Cognito issued to the currently signed-in user. Must include a scope claim for <code>aws.cognito.signin.user.admin</code>.</p><br>
    ///   - [`attribute_name(impl Into<String>)`](crate::operation::get_user_attribute_verification_code::builders::GetUserAttributeVerificationCodeFluentBuilder::attribute_name) / [`set_attribute_name(Option<String>)`](crate::operation::get_user_attribute_verification_code::builders::GetUserAttributeVerificationCodeFluentBuilder::set_attribute_name):<br>required: **true**<br><p>The name of the attribute that the user wants to verify, for example <code>email</code>.</p><br>
    ///   - [`client_metadata(impl Into<String>, impl Into<String>)`](crate::operation::get_user_attribute_verification_code::builders::GetUserAttributeVerificationCodeFluentBuilder::client_metadata) / [`set_client_metadata(Option<HashMap::<String, String>>)`](crate::operation::get_user_attribute_verification_code::builders::GetUserAttributeVerificationCodeFluentBuilder::set_client_metadata):<br>required: **false**<br><p>A map of custom key-value pairs that you can provide as input for any custom workflows that this action triggers.</p> <p>You create custom workflows by assigning Lambda functions to user pool triggers. When you use the GetUserAttributeVerificationCode API action, Amazon Cognito invokes the function that is assigned to the <i>custom message</i> trigger. When Amazon Cognito invokes this function, it passes a JSON payload, which the function receives as input. This payload contains a <code>clientMetadata</code> attribute, which provides the data that you assigned to the ClientMetadata parameter in your GetUserAttributeVerificationCode request. In your function code in Lambda, you can process the <code>clientMetadata</code> value to enhance your workflow for your specific needs.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html"> Using Lambda triggers</a> in the <i>Amazon Cognito Developer Guide</i>.</p><note>  <p>When you use the <code>ClientMetadata</code> parameter, note that Amazon Cognito won't do the following:</p>  <ul>   <li>    <p>Store the <code>ClientMetadata</code> value. This data is available only to Lambda triggers that are assigned to a user pool to support custom workflows. If your user pool configuration doesn't include triggers, the <code>ClientMetadata</code> parameter serves no purpose.</p></li>   <li>    <p>Validate the <code>ClientMetadata</code> value.</p></li>   <li>    <p>Encrypt the <code>ClientMetadata</code> value. Don't send sensitive information in this parameter.</p></li>  </ul> </note><br>
    /// - On success, responds with [`GetUserAttributeVerificationCodeOutput`](crate::operation::get_user_attribute_verification_code::GetUserAttributeVerificationCodeOutput) with field(s):
    ///   - [`code_delivery_details(Option<CodeDeliveryDetailsType>)`](crate::operation::get_user_attribute_verification_code::GetUserAttributeVerificationCodeOutput::code_delivery_details): <p>Information about the delivery destination of the user attribute verification code.</p>
    /// - On failure, responds with [`SdkError<GetUserAttributeVerificationCodeError>`](crate::operation::get_user_attribute_verification_code::GetUserAttributeVerificationCodeError)
    pub fn get_user_attribute_verification_code(
        &self,
    ) -> crate::operation::get_user_attribute_verification_code::builders::GetUserAttributeVerificationCodeFluentBuilder {
        crate::operation::get_user_attribute_verification_code::builders::GetUserAttributeVerificationCodeFluentBuilder::new(self.handle.clone())
    }
}
