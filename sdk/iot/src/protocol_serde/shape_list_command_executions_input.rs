// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_list_command_executions_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::list_command_executions::ListCommandExecutionsInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.command_arn {
        object.key("commandArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.completed_time_filter {
        #[allow(unused_mut)]
        let mut object_3 = object.key("completedTimeFilter").start_object();
        crate::protocol_serde::shape_time_filter::ser_time_filter(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.namespace {
        object.key("namespace").string(var_4.as_str());
    }
    if let Some(var_5) = &input.sort_order {
        object.key("sortOrder").string(var_5.as_str());
    }
    if let Some(var_6) = &input.started_time_filter {
        #[allow(unused_mut)]
        let mut object_7 = object.key("startedTimeFilter").start_object();
        crate::protocol_serde::shape_time_filter::ser_time_filter(&mut object_7, var_6)?;
        object_7.finish();
    }
    if let Some(var_8) = &input.status {
        object.key("status").string(var_8.as_str());
    }
    if let Some(var_9) = &input.target_arn {
        object.key("targetArn").string(var_9.as_str());
    }
    Ok(())
}
