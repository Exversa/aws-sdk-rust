// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateDomainConfiguration`](crate::operation::update_domain_configuration::builders::UpdateDomainConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_configuration_name(impl Into<String>)`](crate::operation::update_domain_configuration::builders::UpdateDomainConfigurationFluentBuilder::domain_configuration_name) / [`set_domain_configuration_name(Option<String>)`](crate::operation::update_domain_configuration::builders::UpdateDomainConfigurationFluentBuilder::set_domain_configuration_name):<br>required: **true**<br><p>The name of the domain configuration to be updated.</p><br>
    ///   - [`authorizer_config(AuthorizerConfig)`](crate::operation::update_domain_configuration::builders::UpdateDomainConfigurationFluentBuilder::authorizer_config) / [`set_authorizer_config(Option<AuthorizerConfig>)`](crate::operation::update_domain_configuration::builders::UpdateDomainConfigurationFluentBuilder::set_authorizer_config):<br>required: **false**<br><p>An object that specifies the authorization service for a domain.</p><br>
    ///   - [`domain_configuration_status(DomainConfigurationStatus)`](crate::operation::update_domain_configuration::builders::UpdateDomainConfigurationFluentBuilder::domain_configuration_status) / [`set_domain_configuration_status(Option<DomainConfigurationStatus>)`](crate::operation::update_domain_configuration::builders::UpdateDomainConfigurationFluentBuilder::set_domain_configuration_status):<br>required: **false**<br><p>The status to which the domain configuration should be updated.</p><br>
    ///   - [`remove_authorizer_config(bool)`](crate::operation::update_domain_configuration::builders::UpdateDomainConfigurationFluentBuilder::remove_authorizer_config) / [`set_remove_authorizer_config(Option<bool>)`](crate::operation::update_domain_configuration::builders::UpdateDomainConfigurationFluentBuilder::set_remove_authorizer_config):<br>required: **false**<br><p>Removes the authorization configuration from a domain.</p><br>
    ///   - [`tls_config(TlsConfig)`](crate::operation::update_domain_configuration::builders::UpdateDomainConfigurationFluentBuilder::tls_config) / [`set_tls_config(Option<TlsConfig>)`](crate::operation::update_domain_configuration::builders::UpdateDomainConfigurationFluentBuilder::set_tls_config):<br>required: **false**<br><p>An object that specifies the TLS configuration for a domain.</p><br>
    ///   - [`server_certificate_config(ServerCertificateConfig)`](crate::operation::update_domain_configuration::builders::UpdateDomainConfigurationFluentBuilder::server_certificate_config) / [`set_server_certificate_config(Option<ServerCertificateConfig>)`](crate::operation::update_domain_configuration::builders::UpdateDomainConfigurationFluentBuilder::set_server_certificate_config):<br>required: **false**<br><p>The server certificate configuration.</p><br>
    ///   - [`authentication_type(AuthenticationType)`](crate::operation::update_domain_configuration::builders::UpdateDomainConfigurationFluentBuilder::authentication_type) / [`set_authentication_type(Option<AuthenticationType>)`](crate::operation::update_domain_configuration::builders::UpdateDomainConfigurationFluentBuilder::set_authentication_type):<br>required: **false**<br><p>An enumerated string that speciﬁes the authentication type.</p> <ul>  <li>   <p><code>CUSTOM_AUTH_X509</code> - Use custom authentication and authorization with additional details from the X.509 client certificate.</p></li> </ul> <ul>  <li>   <p><code>CUSTOM_AUTH</code> - Use custom authentication and authorization. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/custom-authentication.html">Custom authentication and authorization</a>.</p></li> </ul> <ul>  <li>   <p><code>AWS_X509</code> - Use X.509 client certificates without custom authentication and authorization. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/x509-client-certs.html">X.509 client certificates</a>.</p></li> </ul> <ul>  <li>   <p><code>AWS_SIGV4</code> - Use Amazon Web Services Signature Version 4. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/custom-authentication.html">IAM users, groups, and roles</a>.</p></li> </ul> <ul>  <li>   <p><code>DEFAULT </code> - Use a combination of port and Application Layer Protocol Negotiation (ALPN) to specify authentication type. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/protocols.html">Device communication protocols</a>.</p></li> </ul><br>
    ///   - [`application_protocol(ApplicationProtocol)`](crate::operation::update_domain_configuration::builders::UpdateDomainConfigurationFluentBuilder::application_protocol) / [`set_application_protocol(Option<ApplicationProtocol>)`](crate::operation::update_domain_configuration::builders::UpdateDomainConfigurationFluentBuilder::set_application_protocol):<br>required: **false**<br><p>An enumerated string that speciﬁes the application-layer protocol.</p> <ul>  <li>   <p><code>SECURE_MQTT</code> - MQTT over TLS.</p></li> </ul> <ul>  <li>   <p><code>MQTT_WSS</code> - MQTT over WebSocket.</p></li> </ul> <ul>  <li>   <p><code>HTTPS</code> - HTTP over TLS.</p></li> </ul> <ul>  <li>   <p><code>DEFAULT</code> - Use a combination of port and Application Layer Protocol Negotiation (ALPN) to specify application_layer protocol. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/protocols.html">Device communication protocols</a>.</p></li> </ul><br>
    ///   - [`client_certificate_config(ClientCertificateConfig)`](crate::operation::update_domain_configuration::builders::UpdateDomainConfigurationFluentBuilder::client_certificate_config) / [`set_client_certificate_config(Option<ClientCertificateConfig>)`](crate::operation::update_domain_configuration::builders::UpdateDomainConfigurationFluentBuilder::set_client_certificate_config):<br>required: **false**<br><p>An object that speciﬁes the client certificate conﬁguration for a domain.</p><br>
    /// - On success, responds with [`UpdateDomainConfigurationOutput`](crate::operation::update_domain_configuration::UpdateDomainConfigurationOutput) with field(s):
    ///   - [`domain_configuration_name(Option<String>)`](crate::operation::update_domain_configuration::UpdateDomainConfigurationOutput::domain_configuration_name): <p>The name of the domain configuration that was updated.</p>
    ///   - [`domain_configuration_arn(Option<String>)`](crate::operation::update_domain_configuration::UpdateDomainConfigurationOutput::domain_configuration_arn): <p>The ARN of the domain configuration that was updated.</p>
    /// - On failure, responds with [`SdkError<UpdateDomainConfigurationError>`](crate::operation::update_domain_configuration::UpdateDomainConfigurationError)
    pub fn update_domain_configuration(&self) -> crate::operation::update_domain_configuration::builders::UpdateDomainConfigurationFluentBuilder {
        crate::operation::update_domain_configuration::builders::UpdateDomainConfigurationFluentBuilder::new(self.handle.clone())
    }
}
