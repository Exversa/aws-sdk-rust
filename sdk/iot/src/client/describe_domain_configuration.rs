// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeDomainConfiguration`](crate::operation::describe_domain_configuration::builders::DescribeDomainConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_configuration_name(impl Into<String>)`](crate::operation::describe_domain_configuration::builders::DescribeDomainConfigurationFluentBuilder::domain_configuration_name) / [`set_domain_configuration_name(Option<String>)`](crate::operation::describe_domain_configuration::builders::DescribeDomainConfigurationFluentBuilder::set_domain_configuration_name):<br>required: **true**<br><p>The name of the domain configuration.</p><br>
    /// - On success, responds with [`DescribeDomainConfigurationOutput`](crate::operation::describe_domain_configuration::DescribeDomainConfigurationOutput) with field(s):
    ///   - [`domain_configuration_name(Option<String>)`](crate::operation::describe_domain_configuration::DescribeDomainConfigurationOutput::domain_configuration_name): <p>The name of the domain configuration.</p>
    ///   - [`domain_configuration_arn(Option<String>)`](crate::operation::describe_domain_configuration::DescribeDomainConfigurationOutput::domain_configuration_arn): <p>The ARN of the domain configuration.</p>
    ///   - [`domain_name(Option<String>)`](crate::operation::describe_domain_configuration::DescribeDomainConfigurationOutput::domain_name): <p>The name of the domain.</p>
    ///   - [`server_certificates(Option<Vec::<ServerCertificateSummary>>)`](crate::operation::describe_domain_configuration::DescribeDomainConfigurationOutput::server_certificates): <p>A list containing summary information about the server certificate included in the domain configuration.</p>
    ///   - [`authorizer_config(Option<AuthorizerConfig>)`](crate::operation::describe_domain_configuration::DescribeDomainConfigurationOutput::authorizer_config): <p>An object that specifies the authorization service for a domain.</p>
    ///   - [`domain_configuration_status(Option<DomainConfigurationStatus>)`](crate::operation::describe_domain_configuration::DescribeDomainConfigurationOutput::domain_configuration_status): <p>A Boolean value that specifies the current state of the domain configuration.</p>
    ///   - [`service_type(Option<ServiceType>)`](crate::operation::describe_domain_configuration::DescribeDomainConfigurationOutput::service_type): <p>The type of service delivered by the endpoint.</p>
    ///   - [`domain_type(Option<DomainType>)`](crate::operation::describe_domain_configuration::DescribeDomainConfigurationOutput::domain_type): <p>The type of the domain.</p>
    ///   - [`last_status_change_date(Option<DateTime>)`](crate::operation::describe_domain_configuration::DescribeDomainConfigurationOutput::last_status_change_date): <p>The date and time the domain configuration's status was last changed.</p>
    ///   - [`tls_config(Option<TlsConfig>)`](crate::operation::describe_domain_configuration::DescribeDomainConfigurationOutput::tls_config): <p>An object that specifies the TLS configuration for a domain.</p>
    ///   - [`server_certificate_config(Option<ServerCertificateConfig>)`](crate::operation::describe_domain_configuration::DescribeDomainConfigurationOutput::server_certificate_config): <p>The server certificate configuration.</p>
    ///   - [`authentication_type(Option<AuthenticationType>)`](crate::operation::describe_domain_configuration::DescribeDomainConfigurationOutput::authentication_type): <p>An enumerated string that speciﬁes the authentication type.</p> <ul>  <li>   <p><code>CUSTOM_AUTH_X509</code> - Use custom authentication and authorization with additional details from the X.509 client certificate.</p></li> </ul> <ul>  <li>   <p><code>CUSTOM_AUTH</code> - Use custom authentication and authorization. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/custom-authentication.html">Custom authentication and authorization</a>.</p></li> </ul> <ul>  <li>   <p><code>AWS_X509</code> - Use X.509 client certificates without custom authentication and authorization. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/x509-client-certs.html">X.509 client certificates</a>.</p></li> </ul> <ul>  <li>   <p><code>AWS_SIGV4</code> - Use Amazon Web Services Signature Version 4. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/custom-authentication.html">IAM users, groups, and roles</a>.</p></li> </ul> <ul>  <li>   <p><code>DEFAULT</code> - Use a combination of port and Application Layer Protocol Negotiation (ALPN) to specify authentication type. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/protocols.html">Device communication protocols</a>.</p></li> </ul>
    ///   - [`application_protocol(Option<ApplicationProtocol>)`](crate::operation::describe_domain_configuration::DescribeDomainConfigurationOutput::application_protocol): <p>An enumerated string that speciﬁes the application-layer protocol.</p> <ul>  <li>   <p><code>SECURE_MQTT</code> - MQTT over TLS.</p></li> </ul> <ul>  <li>   <p><code>MQTT_WSS</code> - MQTT over WebSocket.</p></li> </ul> <ul>  <li>   <p><code>HTTPS</code> - HTTP over TLS.</p></li> </ul> <ul>  <li>   <p><code>DEFAULT</code> - Use a combination of port and Application Layer Protocol Negotiation (ALPN) to specify application_layer protocol. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/protocols.html">Device communication protocols</a>.</p></li> </ul>
    ///   - [`client_certificate_config(Option<ClientCertificateConfig>)`](crate::operation::describe_domain_configuration::DescribeDomainConfigurationOutput::client_certificate_config): <p>An object that speciﬁes the client certificate conﬁguration for a domain.</p>
    /// - On failure, responds with [`SdkError<DescribeDomainConfigurationError>`](crate::operation::describe_domain_configuration::DescribeDomainConfigurationError)
    pub fn describe_domain_configuration(
        &self,
    ) -> crate::operation::describe_domain_configuration::builders::DescribeDomainConfigurationFluentBuilder {
        crate::operation::describe_domain_configuration::builders::DescribeDomainConfigurationFluentBuilder::new(self.handle.clone())
    }
}
