// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListCommandExecutions`](crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return in this operation.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder::set_next_token):<br>required: **false**<br><p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <code>null</code> to receive the first set of results.</p><br>
    ///   - [`namespace(CommandNamespace)`](crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder::namespace) / [`set_namespace(Option<CommandNamespace>)`](crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder::set_namespace):<br>required: **false**<br><p>The namespace of the command.</p><br>
    ///   - [`status(CommandExecutionStatus)`](crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder::status) / [`set_status(Option<CommandExecutionStatus>)`](crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder::set_status):<br>required: **false**<br><p>List all command executions for the device that have a particular status. For example, you can filter the list to display only command executions that have failed or timed out.</p><br>
    ///   - [`sort_order(SortOrder)`](crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder::sort_order) / [`set_sort_order(Option<SortOrder>)`](crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder::set_sort_order):<br>required: **false**<br><p>Specify whether to list the command executions that were created in the ascending or descending order. By default, the API returns all commands in the descending order based on the start time or completion time of the executions, that are determined by the <code>startTimeFilter</code> and <code>completeTimeFilter</code> parameters.</p><br>
    ///   - [`started_time_filter(TimeFilter)`](crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder::started_time_filter) / [`set_started_time_filter(Option<TimeFilter>)`](crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder::set_started_time_filter):<br>required: **false**<br><p>List all command executions that started any time before or after the date and time that you specify. The date and time uses the format <code>yyyy-MM-dd'T'HH:mm</code>.</p><br>
    ///   - [`completed_time_filter(TimeFilter)`](crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder::completed_time_filter) / [`set_completed_time_filter(Option<TimeFilter>)`](crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder::set_completed_time_filter):<br>required: **false**<br><p>List all command executions that completed any time before or after the date and time that you specify. The date and time uses the format <code>yyyy-MM-dd'T'HH:mm</code>.</p><br>
    ///   - [`target_arn(impl Into<String>)`](crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder::target_arn) / [`set_target_arn(Option<String>)`](crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder::set_target_arn):<br>required: **false**<br><p>The Amazon Resource Number (ARN) of the target device. You can use this information to list all command executions for a particular device.</p><br>
    ///   - [`command_arn(impl Into<String>)`](crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder::command_arn) / [`set_command_arn(Option<String>)`](crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder::set_command_arn):<br>required: **false**<br><p>The Amazon Resource Number (ARN) of the command. You can use this information to list all command executions for a particular command.</p><br>
    /// - On success, responds with [`ListCommandExecutionsOutput`](crate::operation::list_command_executions::ListCommandExecutionsOutput) with field(s):
    ///   - [`command_executions(Option<Vec::<CommandExecutionSummary>>)`](crate::operation::list_command_executions::ListCommandExecutionsOutput::command_executions): <p>The list of command executions.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_command_executions::ListCommandExecutionsOutput::next_token): <p>The token to use to get the next set of results, or <code>null</code> if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<ListCommandExecutionsError>`](crate::operation::list_command_executions::ListCommandExecutionsError)
    pub fn list_command_executions(&self) -> crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder {
        crate::operation::list_command_executions::builders::ListCommandExecutionsFluentBuilder::new(self.handle.clone())
    }
}
