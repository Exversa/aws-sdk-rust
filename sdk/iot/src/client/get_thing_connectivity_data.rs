// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetThingConnectivityData`](crate::operation::get_thing_connectivity_data::builders::GetThingConnectivityDataFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`thing_name(impl Into<String>)`](crate::operation::get_thing_connectivity_data::builders::GetThingConnectivityDataFluentBuilder::thing_name) / [`set_thing_name(Option<String>)`](crate::operation::get_thing_connectivity_data::builders::GetThingConnectivityDataFluentBuilder::set_thing_name):<br>required: **true**<br><p>The name of your IoT thing.</p><br>
    /// - On success, responds with [`GetThingConnectivityDataOutput`](crate::operation::get_thing_connectivity_data::GetThingConnectivityDataOutput) with field(s):
    ///   - [`thing_name(Option<String>)`](crate::operation::get_thing_connectivity_data::GetThingConnectivityDataOutput::thing_name): <p>The name of your IoT thing.</p>
    ///   - [`connected(Option<bool>)`](crate::operation::get_thing_connectivity_data::GetThingConnectivityDataOutput::connected): <p>A Boolean that indicates the connectivity status.</p>
    ///   - [`timestamp(Option<DateTime>)`](crate::operation::get_thing_connectivity_data::GetThingConnectivityDataOutput::timestamp): <p>The timestamp of when the event occurred.</p>
    ///   - [`disconnect_reason(Option<DisconnectReasonValue>)`](crate::operation::get_thing_connectivity_data::GetThingConnectivityDataOutput::disconnect_reason): <p>The reason why the client is disconnecting.</p>
    /// - On failure, responds with [`SdkError<GetThingConnectivityDataError>`](crate::operation::get_thing_connectivity_data::GetThingConnectivityDataError)
    pub fn get_thing_connectivity_data(&self) -> crate::operation::get_thing_connectivity_data::builders::GetThingConnectivityDataFluentBuilder {
        crate::operation::get_thing_connectivity_data::builders::GetThingConnectivityDataFluentBuilder::new(self.handle.clone())
    }
}
