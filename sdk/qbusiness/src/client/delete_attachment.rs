// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteAttachment`](crate::operation::delete_attachment::builders::DeleteAttachmentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::operation::delete_attachment::builders::DeleteAttachmentFluentBuilder::application_id) / [`set_application_id(Option<String>)`](crate::operation::delete_attachment::builders::DeleteAttachmentFluentBuilder::set_application_id):<br>required: **true**<br><p>The unique identifier for the Amazon Q Business application environment.</p><br>
    ///   - [`conversation_id(impl Into<String>)`](crate::operation::delete_attachment::builders::DeleteAttachmentFluentBuilder::conversation_id) / [`set_conversation_id(Option<String>)`](crate::operation::delete_attachment::builders::DeleteAttachmentFluentBuilder::set_conversation_id):<br>required: **true**<br><p>The unique identifier of the conversation.</p><br>
    ///   - [`attachment_id(impl Into<String>)`](crate::operation::delete_attachment::builders::DeleteAttachmentFluentBuilder::attachment_id) / [`set_attachment_id(Option<String>)`](crate::operation::delete_attachment::builders::DeleteAttachmentFluentBuilder::set_attachment_id):<br>required: **true**<br><p>The unique identifier for the attachment.</p><br>
    ///   - [`user_id(impl Into<String>)`](crate::operation::delete_attachment::builders::DeleteAttachmentFluentBuilder::user_id) / [`set_user_id(Option<String>)`](crate::operation::delete_attachment::builders::DeleteAttachmentFluentBuilder::set_user_id):<br>required: **false**<br><p>The unique identifier of the user involved in the conversation.</p><br>
    /// - On success, responds with [`DeleteAttachmentOutput`](crate::operation::delete_attachment::DeleteAttachmentOutput)
    /// - On failure, responds with [`SdkError<DeleteAttachmentError>`](crate::operation::delete_attachment::DeleteAttachmentError)
    pub fn delete_attachment(&self) -> crate::operation::delete_attachment::builders::DeleteAttachmentFluentBuilder {
        crate::operation::delete_attachment::builders::DeleteAttachmentFluentBuilder::new(self.handle.clone())
    }
}
