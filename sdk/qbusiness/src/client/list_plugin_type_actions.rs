// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListPluginTypeActions`](crate::operation::list_plugin_type_actions::builders::ListPluginTypeActionsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_plugin_type_actions::builders::ListPluginTypeActionsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`plugin_type(PluginType)`](crate::operation::list_plugin_type_actions::builders::ListPluginTypeActionsFluentBuilder::plugin_type) / [`set_plugin_type(Option<PluginType>)`](crate::operation::list_plugin_type_actions::builders::ListPluginTypeActionsFluentBuilder::set_plugin_type):<br>required: **true**<br><p>The type of the plugin.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_plugin_type_actions::builders::ListPluginTypeActionsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_plugin_type_actions::builders::ListPluginTypeActionsFluentBuilder::set_next_token):<br>required: **false**<br><p>If the number of plugins returned exceeds <code>maxResults</code>, Amazon Q Business returns a next token as a pagination token to retrieve the next set of plugins.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_plugin_type_actions::builders::ListPluginTypeActionsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_plugin_type_actions::builders::ListPluginTypeActionsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of plugins to return.</p><br>
    /// - On success, responds with [`ListPluginTypeActionsOutput`](crate::operation::list_plugin_type_actions::ListPluginTypeActionsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::operation::list_plugin_type_actions::ListPluginTypeActionsOutput::next_token): <p>If the response is truncated, Amazon Q Business returns this token, which you can use in a later request to list the next set of plugins.</p>
    ///   - [`items(Option<Vec::<ActionSummary>>)`](crate::operation::list_plugin_type_actions::ListPluginTypeActionsOutput::items): <p>An array of information on one or more plugins.</p>
    /// - On failure, responds with [`SdkError<ListPluginTypeActionsError>`](crate::operation::list_plugin_type_actions::ListPluginTypeActionsError)
    pub fn list_plugin_type_actions(&self) -> crate::operation::list_plugin_type_actions::builders::ListPluginTypeActionsFluentBuilder {
        crate::operation::list_plugin_type_actions::builders::ListPluginTypeActionsFluentBuilder::new(self.handle.clone())
    }
}
