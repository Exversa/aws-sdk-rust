// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CancelSubscription`](crate::operation::cancel_subscription::builders::CancelSubscriptionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::operation::cancel_subscription::builders::CancelSubscriptionFluentBuilder::application_id) / [`set_application_id(Option<String>)`](crate::operation::cancel_subscription::builders::CancelSubscriptionFluentBuilder::set_application_id):<br>required: **true**<br><p>The identifier of the Amazon Q Business application for which the subscription is being cancelled.</p><br>
    ///   - [`subscription_id(impl Into<String>)`](crate::operation::cancel_subscription::builders::CancelSubscriptionFluentBuilder::subscription_id) / [`set_subscription_id(Option<String>)`](crate::operation::cancel_subscription::builders::CancelSubscriptionFluentBuilder::set_subscription_id):<br>required: **true**<br><p>The identifier of the Amazon Q Business subscription being cancelled.</p><br>
    /// - On success, responds with [`CancelSubscriptionOutput`](crate::operation::cancel_subscription::CancelSubscriptionOutput) with field(s):
    ///   - [`subscription_arn(Option<String>)`](crate::operation::cancel_subscription::CancelSubscriptionOutput::subscription_arn): <p>The Amazon Resource Name (ARN) of the Amazon Q Business subscription being cancelled.</p>
    ///   - [`current_subscription(Option<SubscriptionDetails>)`](crate::operation::cancel_subscription::CancelSubscriptionOutput::current_subscription): <p>The type of your current Amazon Q Business subscription.</p>
    ///   - [`next_subscription(Option<SubscriptionDetails>)`](crate::operation::cancel_subscription::CancelSubscriptionOutput::next_subscription): <p>The type of the Amazon Q Business subscription for the next month.</p>
    /// - On failure, responds with [`SdkError<CancelSubscriptionError>`](crate::operation::cancel_subscription::CancelSubscriptionError)
    pub fn cancel_subscription(&self) -> crate::operation::cancel_subscription::builders::CancelSubscriptionFluentBuilder {
        crate::operation::cancel_subscription::builders::CancelSubscriptionFluentBuilder::new(self.handle.clone())
    }
}
