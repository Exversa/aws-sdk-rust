// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_get_entity_records_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::get_entity_records::GetEntityRecordsInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.connection_name {
        object.key("ConnectionName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.catalog_id {
        object.key("CatalogId").string(var_2.as_str());
    }
    if let Some(var_3) = &input.entity_name {
        object.key("EntityName").string(var_3.as_str());
    }
    if let Some(var_4) = &input.next_token {
        object.key("NextToken").string(var_4.as_str());
    }
    if let Some(var_5) = &input.data_store_api_version {
        object.key("DataStoreApiVersion").string(var_5.as_str());
    }
    if let Some(var_6) = &input.connection_options {
        #[allow(unused_mut)]
        let mut object_7 = object.key("ConnectionOptions").start_object();
        for (key_8, value_9) in var_6 {
            {
                object_7.key(key_8.as_str()).string(value_9.as_str());
            }
        }
        object_7.finish();
    }
    if let Some(var_10) = &input.filter_predicate {
        object.key("FilterPredicate").string(var_10.as_str());
    }
    if let Some(var_11) = &input.limit {
        object.key("Limit").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_11).into()),
        );
    }
    if let Some(var_12) = &input.order_by {
        object.key("OrderBy").string(var_12.as_str());
    }
    if let Some(var_13) = &input.selected_fields {
        let mut array_14 = object.key("SelectedFields").start_array();
        for item_15 in var_13 {
            {
                array_14.value().string(item_15.as_str());
            }
        }
        array_14.finish();
    }
    Ok(())
}
