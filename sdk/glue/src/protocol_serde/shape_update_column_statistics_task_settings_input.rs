// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_column_statistics_task_settings_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_column_statistics_task_settings::UpdateColumnStatisticsTaskSettingsInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.database_name {
        object.key("DatabaseName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.table_name {
        object.key("TableName").string(var_2.as_str());
    }
    if let Some(var_3) = &input.role {
        object.key("Role").string(var_3.as_str());
    }
    if let Some(var_4) = &input.schedule {
        object.key("Schedule").string(var_4.as_str());
    }
    if let Some(var_5) = &input.column_name_list {
        let mut array_6 = object.key("ColumnNameList").start_array();
        for item_7 in var_5 {
            {
                array_6.value().string(item_7.as_str());
            }
        }
        array_6.finish();
    }
    if let Some(var_8) = &input.sample_size {
        object.key("SampleSize").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::Float((*var_8).into()),
        );
    }
    if let Some(var_9) = &input.catalog_id {
        object.key("CatalogID").string(var_9.as_str());
    }
    if let Some(var_10) = &input.security_configuration {
        object.key("SecurityConfiguration").string(var_10.as_str());
    }
    Ok(())
}
