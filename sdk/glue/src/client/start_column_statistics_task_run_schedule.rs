// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartColumnStatisticsTaskRunSchedule`](crate::operation::start_column_statistics_task_run_schedule::builders::StartColumnStatisticsTaskRunScheduleFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`database_name(impl Into<String>)`](crate::operation::start_column_statistics_task_run_schedule::builders::StartColumnStatisticsTaskRunScheduleFluentBuilder::database_name) / [`set_database_name(Option<String>)`](crate::operation::start_column_statistics_task_run_schedule::builders::StartColumnStatisticsTaskRunScheduleFluentBuilder::set_database_name):<br>required: **true**<br><p>The name of the database where the table resides.</p><br>
    ///   - [`table_name(impl Into<String>)`](crate::operation::start_column_statistics_task_run_schedule::builders::StartColumnStatisticsTaskRunScheduleFluentBuilder::table_name) / [`set_table_name(Option<String>)`](crate::operation::start_column_statistics_task_run_schedule::builders::StartColumnStatisticsTaskRunScheduleFluentBuilder::set_table_name):<br>required: **true**<br><p>The name of the table for which to start a column statistic task run schedule.</p><br>
    /// - On success, responds with [`StartColumnStatisticsTaskRunScheduleOutput`](crate::operation::start_column_statistics_task_run_schedule::StartColumnStatisticsTaskRunScheduleOutput)
    /// - On failure, responds with [`SdkError<StartColumnStatisticsTaskRunScheduleError>`](crate::operation::start_column_statistics_task_run_schedule::StartColumnStatisticsTaskRunScheduleError)
    pub fn start_column_statistics_task_run_schedule(
        &self,
    ) -> crate::operation::start_column_statistics_task_run_schedule::builders::StartColumnStatisticsTaskRunScheduleFluentBuilder {
        crate::operation::start_column_statistics_task_run_schedule::builders::StartColumnStatisticsTaskRunScheduleFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
