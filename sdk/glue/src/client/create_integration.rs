// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateIntegration`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`integration_name(impl Into<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::integration_name) / [`set_integration_name(Option<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::set_integration_name):<br>required: **true**<br><p>A unique name for an integration in Glue.</p><br>
    ///   - [`source_arn(impl Into<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::source_arn) / [`set_source_arn(Option<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::set_source_arn):<br>required: **true**<br><p>The ARN of the source resource for the integration.</p><br>
    ///   - [`target_arn(impl Into<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::target_arn) / [`set_target_arn(Option<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::set_target_arn):<br>required: **true**<br><p>The ARN of the target resource for the integration.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::set_description):<br>required: **false**<br><p>A description of the integration.</p><br>
    ///   - [`data_filter(impl Into<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::data_filter) / [`set_data_filter(Option<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::set_data_filter):<br>required: **false**<br><p>Selects source tables for the integration using Maxwell filter syntax.</p><br>
    ///   - [`kms_key_id(impl Into<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::set_kms_key_id):<br>required: **false**<br><p>The ARN of a KMS key used for encrypting the channel.</p><br>
    ///   - [`additional_encryption_context(impl Into<String>, impl Into<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::additional_encryption_context) / [`set_additional_encryption_context(Option<HashMap::<String, String>>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::set_additional_encryption_context):<br>required: **false**<br><p>An optional set of non-secret key–value pairs that contains additional contextual information for encryption. This can only be provided if <code>KMSKeyId</code> is provided.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::set_tags):<br>required: **false**<br><p>Metadata assigned to the resource consisting of a list of key-value pairs.</p><br>
    /// - On success, responds with [`CreateIntegrationOutput`](crate::operation::create_integration::CreateIntegrationOutput) with field(s):
    ///   - [`source_arn(String)`](crate::operation::create_integration::CreateIntegrationOutput::source_arn): <p>The ARN of the source resource for the integration.</p>
    ///   - [`target_arn(String)`](crate::operation::create_integration::CreateIntegrationOutput::target_arn): <p>The ARN of the target resource for the integration.</p>
    ///   - [`integration_name(String)`](crate::operation::create_integration::CreateIntegrationOutput::integration_name): <p>A unique name for an integration in Glue.</p>
    ///   - [`description(Option<String>)`](crate::operation::create_integration::CreateIntegrationOutput::description): <p>A description of the integration.</p>
    ///   - [`integration_arn(String)`](crate::operation::create_integration::CreateIntegrationOutput::integration_arn): <p>The Amazon Resource Name (ARN) for the created integration.</p>
    ///   - [`kms_key_id(Option<String>)`](crate::operation::create_integration::CreateIntegrationOutput::kms_key_id): <p>The ARN of a KMS key used for encrypting the channel.</p>
    ///   - [`additional_encryption_context(Option<HashMap::<String, String>>)`](crate::operation::create_integration::CreateIntegrationOutput::additional_encryption_context): <p>An optional set of non-secret key–value pairs that contains additional contextual information for encryption.</p>
    ///   - [`tags(Option<Vec::<Tag>>)`](crate::operation::create_integration::CreateIntegrationOutput::tags): <p>Metadata assigned to the resource consisting of a list of key-value pairs.</p>
    ///   - [`status(IntegrationStatus)`](crate::operation::create_integration::CreateIntegrationOutput::status): <p>The status of the integration being created.</p> <p>The possible statuses are:</p> <ul>  <li>   <p>CREATING: The integration is being created.</p></li>  <li>   <p>ACTIVE: The integration creation succeeds.</p></li>  <li>   <p>MODIFYING: The integration is being modified.</p></li>  <li>   <p>FAILED: The integration creation fails.</p></li>  <li>   <p>DELETING: The integration is deleted.</p></li>  <li>   <p>SYNCING: The integration is synchronizing.</p></li>  <li>   <p>NEEDS_ATTENTION: The integration needs attention, such as synchronization.</p></li> </ul>
    ///   - [`create_time(DateTime)`](crate::operation::create_integration::CreateIntegrationOutput::create_time): <p>The time when the integration was created, in UTC.</p>
    ///   - [`errors(Option<Vec::<IntegrationError>>)`](crate::operation::create_integration::CreateIntegrationOutput::errors): <p>A list of errors associated with the integration creation.</p>
    ///   - [`data_filter(Option<String>)`](crate::operation::create_integration::CreateIntegrationOutput::data_filter): <p>Selects source tables for the integration using Maxwell filter syntax.</p>
    /// - On failure, responds with [`SdkError<CreateIntegrationError>`](crate::operation::create_integration::CreateIntegrationError)
    pub fn create_integration(&self) -> crate::operation::create_integration::builders::CreateIntegrationFluentBuilder {
        crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::new(self.handle.clone())
    }
}
