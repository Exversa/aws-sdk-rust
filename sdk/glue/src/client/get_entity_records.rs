// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetEntityRecords`](crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`connection_name(impl Into<String>)`](crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder::connection_name) / [`set_connection_name(Option<String>)`](crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder::set_connection_name):<br>required: **false**<br><p>The name of the connection that contains the connection type credentials.</p><br>
    ///   - [`catalog_id(impl Into<String>)`](crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder::catalog_id) / [`set_catalog_id(Option<String>)`](crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder::set_catalog_id):<br>required: **false**<br><p>The catalog ID of the catalog that contains the connection. This can be null, By default, the Amazon Web Services Account ID is the catalog ID.</p><br>
    ///   - [`entity_name(impl Into<String>)`](crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder::entity_name) / [`set_entity_name(Option<String>)`](crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder::set_entity_name):<br>required: **true**<br><p>Name of the entity that we want to query the preview data from the given connection type.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder::set_next_token):<br>required: **false**<br><p>A continuation token, included if this is a continuation call.</p><br>
    ///   - [`data_store_api_version(impl Into<String>)`](crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder::data_store_api_version) / [`set_data_store_api_version(Option<String>)`](crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder::set_data_store_api_version):<br>required: **false**<br><p>The API version of the SaaS connector.</p><br>
    ///   - [`connection_options(impl Into<String>, impl Into<String>)`](crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder::connection_options) / [`set_connection_options(Option<HashMap::<String, String>>)`](crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder::set_connection_options):<br>required: **false**<br><p>Connector options that are required to query the data.</p><br>
    ///   - [`filter_predicate(impl Into<String>)`](crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder::filter_predicate) / [`set_filter_predicate(Option<String>)`](crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder::set_filter_predicate):<br>required: **false**<br><p>A filter predicate that you can apply in the query request.</p><br>
    ///   - [`limit(i64)`](crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder::limit) / [`set_limit(Option<i64>)`](crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder::set_limit):<br>required: **true**<br><p>Limits the number of records fetched with the request.</p><br>
    ///   - [`order_by(impl Into<String>)`](crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder::order_by) / [`set_order_by(Option<String>)`](crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder::set_order_by):<br>required: **false**<br><p>A parameter that orders the response preview data.</p><br>
    ///   - [`selected_fields(impl Into<String>)`](crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder::selected_fields) / [`set_selected_fields(Option<Vec::<String>>)`](crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder::set_selected_fields):<br>required: **false**<br><p>List of fields that we want to fetch as part of preview data.</p><br>
    /// - On success, responds with [`GetEntityRecordsOutput`](crate::operation::get_entity_records::GetEntityRecordsOutput) with field(s):
    ///   - [`records(Option<Vec::<Document>>)`](crate::operation::get_entity_records::GetEntityRecordsOutput::records): <p>A list of the requested objects.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::get_entity_records::GetEntityRecordsOutput::next_token): <p>A continuation token, present if the current segment is not the last.</p>
    /// - On failure, responds with [`SdkError<GetEntityRecordsError>`](crate::operation::get_entity_records::GetEntityRecordsError)
    pub fn get_entity_records(&self) -> crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder {
        crate::operation::get_entity_records::builders::GetEntityRecordsFluentBuilder::new(self.handle.clone())
    }
}
