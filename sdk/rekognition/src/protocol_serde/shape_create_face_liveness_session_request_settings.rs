// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_face_liveness_session_request_settings(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::CreateFaceLivenessSessionRequestSettings,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.output_config {
        #[allow(unused_mut)]
        let mut object_2 = object.key("OutputConfig").start_object();
        crate::protocol_serde::shape_liveness_output_config::ser_liveness_output_config(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.audit_images_limit {
        object.key("AuditImagesLimit").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_3).into()),
        );
    }
    if let Some(var_4) = &input.challenge_preferences {
        let mut array_5 = object.key("ChallengePreferences").start_array();
        for item_6 in var_4 {
            {
                #[allow(unused_mut)]
                let mut object_7 = array_5.value().start_object();
                crate::protocol_serde::shape_challenge_preference::ser_challenge_preference(&mut object_7, item_6)?;
                object_7.finish();
            }
        }
        array_5.finish();
    }
    Ok(())
}
