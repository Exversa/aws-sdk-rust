// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::aws_smithy_runtime_api::http::Headers,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_create_namespace;

pub(crate) mod shape_create_table;

pub(crate) mod shape_create_table_bucket;

pub(crate) mod shape_delete_namespace;

pub(crate) mod shape_delete_table;

pub(crate) mod shape_delete_table_bucket;

pub(crate) mod shape_delete_table_bucket_policy;

pub(crate) mod shape_delete_table_policy;

pub(crate) mod shape_get_namespace;

pub(crate) mod shape_get_table;

pub(crate) mod shape_get_table_bucket;

pub(crate) mod shape_get_table_bucket_maintenance_configuration;

pub(crate) mod shape_get_table_bucket_policy;

pub(crate) mod shape_get_table_maintenance_configuration;

pub(crate) mod shape_get_table_maintenance_job_status;

pub(crate) mod shape_get_table_metadata_location;

pub(crate) mod shape_get_table_policy;

pub(crate) mod shape_list_namespaces;

pub(crate) mod shape_list_table_buckets;

pub(crate) mod shape_list_tables;

pub(crate) mod shape_put_table_bucket_maintenance_configuration;

pub(crate) mod shape_put_table_bucket_policy;

pub(crate) mod shape_put_table_maintenance_configuration;

pub(crate) mod shape_put_table_policy;

pub(crate) mod shape_rename_table;

pub(crate) mod shape_update_table_metadata_location;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_bad_request_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_namespace_input;

pub(crate) mod shape_create_table_bucket_input;

pub(crate) mod shape_create_table_input;

pub(crate) mod shape_forbidden_exception;

pub(crate) mod shape_internal_server_error_exception;

pub(crate) mod shape_not_found_exception;

pub(crate) mod shape_put_table_bucket_maintenance_configuration_input;

pub(crate) mod shape_put_table_bucket_policy_input;

pub(crate) mod shape_put_table_maintenance_configuration_input;

pub(crate) mod shape_put_table_policy_input;

pub(crate) mod shape_rename_table_input;

pub(crate) mod shape_too_many_requests_exception;

pub(crate) mod shape_update_table_metadata_location_input;

pub(crate) mod shape_namespace_list;

pub(crate) mod shape_namespace_summary_list;

pub(crate) mod shape_table_bucket_maintenance_configuration;

pub(crate) mod shape_table_bucket_maintenance_configuration_value;

pub(crate) mod shape_table_bucket_summary_list;

pub(crate) mod shape_table_maintenance_configuration;

pub(crate) mod shape_table_maintenance_configuration_value;

pub(crate) mod shape_table_maintenance_job_status;

pub(crate) mod shape_table_summary_list;

pub(crate) mod shape_namespace_summary;

pub(crate) mod shape_table_bucket_maintenance_settings;

pub(crate) mod shape_table_bucket_summary;

pub(crate) mod shape_table_maintenance_job_status_value;

pub(crate) mod shape_table_maintenance_settings;

pub(crate) mod shape_table_summary;

pub(crate) mod shape_iceberg_compaction_settings;

pub(crate) mod shape_iceberg_snapshot_management_settings;

pub(crate) mod shape_iceberg_unreferenced_file_removal_settings;
