// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateIdentitySource`](crate::operation::create_identity_source::builders::CreateIdentitySourceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`identity_source_parameters(IdentitySourceParameters)`](crate::operation::create_identity_source::builders::CreateIdentitySourceFluentBuilder::identity_source_parameters) / [`set_identity_source_parameters(Option<IdentitySourceParameters>)`](crate::operation::create_identity_source::builders::CreateIdentitySourceFluentBuilder::set_identity_source_parameters):<br>required: **true**<br><p>A <code> IdentitySourceParameters</code> object. Contains details for the resource that provides identities to the identity source. For example, an IAM Identity Center instance.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_identity_source::builders::CreateIdentitySourceFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_identity_source::builders::CreateIdentitySourceFluentBuilder::set_client_token):<br>required: **false**<br><p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services populates this field.</p><note>  <p><b>What is idempotency?</b></p>  <p>When you make a mutating API request, the request typically returns a result before the operation's asynchronous workflows have completed. Operations might also time out or encounter other server issues before they complete, even though the request has already returned a result. This could make it difficult to determine whether the request succeeded or not, and could lead to multiple retries to ensure that the operation completes successfully. However, if the original request and the subsequent retries are successful, the operation is completed multiple times. This means that you might create more resources than you intended.</p>  <p><i>Idempotency</i> ensures that an API request completes no more than one time. With an idempotent request, if the original request completes successfully, any subsequent retries complete successfully without performing any further actions.</p> </note><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_identity_source::builders::CreateIdentitySourceFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_identity_source::builders::CreateIdentitySourceFluentBuilder::set_tags):<br>required: **false**<br><p>Tag you want to attach to the identity source.</p><br>
    /// - On success, responds with [`CreateIdentitySourceOutput`](crate::operation::create_identity_source::CreateIdentitySourceOutput) with field(s):
    ///   - [`identity_source_type(Option<IdentitySourceType>)`](crate::operation::create_identity_source::CreateIdentitySourceOutput::identity_source_type): <p>The type of resource that provided identities to the identity source. For example, an IAM Identity Center instance.</p>
    ///   - [`identity_source_arn(Option<String>)`](crate::operation::create_identity_source::CreateIdentitySourceOutput::identity_source_arn): <p>Amazon Resource Name (ARN) for the identity source that was created.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::operation::create_identity_source::CreateIdentitySourceOutput::creation_time): <p>Timestamp when the identity source was created.</p>
    /// - On failure, responds with [`SdkError<CreateIdentitySourceError>`](crate::operation::create_identity_source::CreateIdentitySourceError)
    pub fn create_identity_source(&self) -> crate::operation::create_identity_source::builders::CreateIdentitySourceFluentBuilder {
        crate::operation::create_identity_source::builders::CreateIdentitySourceFluentBuilder::new(self.handle.clone())
    }
}
