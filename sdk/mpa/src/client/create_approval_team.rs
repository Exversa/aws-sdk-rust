// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateApprovalTeam`](crate::operation::create_approval_team::builders::CreateApprovalTeamFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_approval_team::builders::CreateApprovalTeamFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_approval_team::builders::CreateApprovalTeamFluentBuilder::set_client_token):<br>required: **false**<br><p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services populates this field.</p><note>  <p><b>What is idempotency?</b></p>  <p>When you make a mutating API request, the request typically returns a result before the operation's asynchronous workflows have completed. Operations might also time out or encounter other server issues before they complete, even though the request has already returned a result. This could make it difficult to determine whether the request succeeded or not, and could lead to multiple retries to ensure that the operation completes successfully. However, if the original request and the subsequent retries are successful, the operation is completed multiple times. This means that you might create more resources than you intended.</p>  <p><i>Idempotency</i> ensures that an API request completes no more than one time. With an idempotent request, if the original request completes successfully, any subsequent retries complete successfully without performing any further actions.</p> </note><br>
    ///   - [`approval_strategy(ApprovalStrategy)`](crate::operation::create_approval_team::builders::CreateApprovalTeamFluentBuilder::approval_strategy) / [`set_approval_strategy(Option<ApprovalStrategy>)`](crate::operation::create_approval_team::builders::CreateApprovalTeamFluentBuilder::set_approval_strategy):<br>required: **true**<br><p>An <code>ApprovalStrategy</code> object. Contains details for how the team grants approval.</p><br>
    ///   - [`approvers(ApprovalTeamRequestApprover)`](crate::operation::create_approval_team::builders::CreateApprovalTeamFluentBuilder::approvers) / [`set_approvers(Option<Vec::<ApprovalTeamRequestApprover>>)`](crate::operation::create_approval_team::builders::CreateApprovalTeamFluentBuilder::set_approvers):<br>required: **true**<br><p>An array of <code>ApprovalTeamRequesterApprovers</code> objects. Contains details for the approvers in the team.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_approval_team::builders::CreateApprovalTeamFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_approval_team::builders::CreateApprovalTeamFluentBuilder::set_description):<br>required: **true**<br><p>Description for the team.</p><br>
    ///   - [`policies(PolicyReference)`](crate::operation::create_approval_team::builders::CreateApprovalTeamFluentBuilder::policies) / [`set_policies(Option<Vec::<PolicyReference>>)`](crate::operation::create_approval_team::builders::CreateApprovalTeamFluentBuilder::set_policies):<br>required: **true**<br><p>An array of <code>PolicyReference</code> objects. Contains a list of policies that define the permissions for team resources.</p> <p>The protected operation for a service integration might require specific permissions. For more information, see <a href="https://docs.aws.amazon.com/mpa/latest/userguide/mpa-integrations.html">How other services work with Multi-party approval</a> in the <i>Multi-party approval User Guide</i>.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_approval_team::builders::CreateApprovalTeamFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_approval_team::builders::CreateApprovalTeamFluentBuilder::set_name):<br>required: **true**<br><p>Name of the team.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_approval_team::builders::CreateApprovalTeamFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_approval_team::builders::CreateApprovalTeamFluentBuilder::set_tags):<br>required: **false**<br><p>Tags you want to attach to the team.</p><br>
    /// - On success, responds with [`CreateApprovalTeamOutput`](crate::operation::create_approval_team::CreateApprovalTeamOutput) with field(s):
    ///   - [`creation_time(Option<DateTime>)`](crate::operation::create_approval_team::CreateApprovalTeamOutput::creation_time): <p>Timestamp when the team was created.</p>
    ///   - [`arn(Option<String>)`](crate::operation::create_approval_team::CreateApprovalTeamOutput::arn): <p>Amazon Resource Name (ARN) for the team that was created.</p>
    ///   - [`name(Option<String>)`](crate::operation::create_approval_team::CreateApprovalTeamOutput::name): <p>Name of the team that was created.</p>
    ///   - [`version_id(Option<String>)`](crate::operation::create_approval_team::CreateApprovalTeamOutput::version_id): <p>Version ID for the team that was created. When a team is updated, the version ID changes.</p>
    /// - On failure, responds with [`SdkError<CreateApprovalTeamError>`](crate::operation::create_approval_team::CreateApprovalTeamError)
    pub fn create_approval_team(&self) -> crate::operation::create_approval_team::builders::CreateApprovalTeamFluentBuilder {
        crate::operation::create_approval_team::builders::CreateApprovalTeamFluentBuilder::new(self.handle.clone())
    }
}
