// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListExportTasks`](crate::operation::list_export_tasks::builders::ListExportTasksFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_export_tasks::builders::ListExportTasksFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_export_tasks::builders::ListExportTasksFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_export_tasks::builders::ListExportTasksFluentBuilder::set_next_token):<br>required: **false**<br><p>Pagination token used to paginate input.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_export_tasks::builders::ListExportTasksFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_export_tasks::builders::ListExportTasksFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of export tasks to return.</p><br>
    /// - On success, responds with [`ListExportTasksOutput`](crate::operation::list_export_tasks::ListExportTasksOutput) with field(s):
    ///   - [`tasks(Vec::<ExportTaskSummary>)`](crate::operation::list_export_tasks::ListExportTasksOutput::tasks): <p>The requested list of export tasks.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_export_tasks::ListExportTasksOutput::next_token): <p>Pagination token used to paginate output.</p>
    /// - On failure, responds with [`SdkError<ListExportTasksError>`](crate::operation::list_export_tasks::ListExportTasksError)
    pub fn list_export_tasks(&self) -> crate::operation::list_export_tasks::builders::ListExportTasksFluentBuilder {
        crate::operation::list_export_tasks::builders::ListExportTasksFluentBuilder::new(self.handle.clone())
    }
}
