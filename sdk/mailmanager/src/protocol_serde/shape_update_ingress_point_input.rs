// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_ingress_point_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_ingress_point::UpdateIngressPointInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.ingress_point_id {
        object.key("IngressPointId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.ingress_point_name {
        object.key("IngressPointName").string(var_2.as_str());
    }
    if let Some(var_3) = &input.status_to_update {
        object.key("StatusToUpdate").string(var_3.as_str());
    }
    if let Some(var_4) = &input.rule_set_id {
        object.key("RuleSetId").string(var_4.as_str());
    }
    if let Some(var_5) = &input.traffic_policy_id {
        object.key("TrafficPolicyId").string(var_5.as_str());
    }
    if let Some(var_6) = &input.ingress_point_configuration {
        #[allow(unused_mut)]
        let mut object_7 = object.key("IngressPointConfiguration").start_object();
        crate::protocol_serde::shape_ingress_point_configuration::ser_ingress_point_configuration(&mut object_7, var_6)?;
        object_7.finish();
    }
    Ok(())
}
