// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::aws_smithy_runtime_api::http::Headers,
    response_body: &[u8],
) -> ::std::result::Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_create_addon_instance;

pub(crate) mod shape_create_addon_subscription;

pub(crate) mod shape_create_address_list;

pub(crate) mod shape_create_address_list_import_job;

pub(crate) mod shape_create_archive;

pub(crate) mod shape_create_ingress_point;

pub(crate) mod shape_create_relay;

pub(crate) mod shape_create_rule_set;

pub(crate) mod shape_create_traffic_policy;

pub(crate) mod shape_delete_addon_instance;

pub(crate) mod shape_delete_addon_subscription;

pub(crate) mod shape_delete_address_list;

pub(crate) mod shape_delete_archive;

pub(crate) mod shape_delete_ingress_point;

pub(crate) mod shape_delete_relay;

pub(crate) mod shape_delete_rule_set;

pub(crate) mod shape_delete_traffic_policy;

pub(crate) mod shape_deregister_member_from_address_list;

pub(crate) mod shape_get_addon_instance;

pub(crate) mod shape_get_addon_subscription;

pub(crate) mod shape_get_address_list;

pub(crate) mod shape_get_address_list_import_job;

pub(crate) mod shape_get_archive;

pub(crate) mod shape_get_archive_export;

pub(crate) mod shape_get_archive_message;

pub(crate) mod shape_get_archive_message_content;

pub(crate) mod shape_get_archive_search;

pub(crate) mod shape_get_archive_search_results;

pub(crate) mod shape_get_ingress_point;

pub(crate) mod shape_get_member_of_address_list;

pub(crate) mod shape_get_relay;

pub(crate) mod shape_get_rule_set;

pub(crate) mod shape_get_traffic_policy;

pub(crate) mod shape_list_addon_instances;

pub(crate) mod shape_list_addon_subscriptions;

pub(crate) mod shape_list_address_list_import_jobs;

pub(crate) mod shape_list_address_lists;

pub(crate) mod shape_list_archive_exports;

pub(crate) mod shape_list_archive_searches;

pub(crate) mod shape_list_archives;

pub(crate) mod shape_list_ingress_points;

pub(crate) mod shape_list_members_of_address_list;

pub(crate) mod shape_list_relays;

pub(crate) mod shape_list_rule_sets;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_list_traffic_policies;

pub(crate) mod shape_register_member_to_address_list;

pub(crate) mod shape_start_address_list_import_job;

pub(crate) mod shape_start_archive_export;

pub(crate) mod shape_start_archive_search;

pub(crate) mod shape_stop_address_list_import_job;

pub(crate) mod shape_stop_archive_export;

pub(crate) mod shape_stop_archive_search;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_archive;

pub(crate) mod shape_update_ingress_point;

pub(crate) mod shape_update_relay;

pub(crate) mod shape_update_rule_set;

pub(crate) mod shape_update_traffic_policy;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_addon_instance_input;

pub(crate) mod shape_create_addon_subscription_input;

pub(crate) mod shape_create_address_list_import_job_input;

pub(crate) mod shape_create_address_list_input;

pub(crate) mod shape_create_archive_input;

pub(crate) mod shape_create_ingress_point_input;

pub(crate) mod shape_create_relay_input;

pub(crate) mod shape_create_rule_set_input;

pub(crate) mod shape_create_traffic_policy_input;

pub(crate) mod shape_delete_addon_instance_input;

pub(crate) mod shape_delete_addon_subscription_input;

pub(crate) mod shape_delete_address_list_input;

pub(crate) mod shape_delete_archive_input;

pub(crate) mod shape_delete_ingress_point_input;

pub(crate) mod shape_delete_relay_input;

pub(crate) mod shape_delete_rule_set_input;

pub(crate) mod shape_delete_traffic_policy_input;

pub(crate) mod shape_deregister_member_from_address_list_input;

pub(crate) mod shape_get_addon_instance_input;

pub(crate) mod shape_get_addon_subscription_input;

pub(crate) mod shape_get_address_list_import_job_input;

pub(crate) mod shape_get_address_list_input;

pub(crate) mod shape_get_archive_export_input;

pub(crate) mod shape_get_archive_input;

pub(crate) mod shape_get_archive_message_content_input;

pub(crate) mod shape_get_archive_message_input;

pub(crate) mod shape_get_archive_search_input;

pub(crate) mod shape_get_archive_search_results_input;

pub(crate) mod shape_get_ingress_point_input;

pub(crate) mod shape_get_member_of_address_list_input;

pub(crate) mod shape_get_relay_input;

pub(crate) mod shape_get_rule_set_input;

pub(crate) mod shape_get_traffic_policy_input;

pub(crate) mod shape_list_addon_instances_input;

pub(crate) mod shape_list_addon_subscriptions_input;

pub(crate) mod shape_list_address_list_import_jobs_input;

pub(crate) mod shape_list_address_lists_input;

pub(crate) mod shape_list_archive_exports_input;

pub(crate) mod shape_list_archive_searches_input;

pub(crate) mod shape_list_archives_input;

pub(crate) mod shape_list_ingress_points_input;

pub(crate) mod shape_list_members_of_address_list_input;

pub(crate) mod shape_list_relays_input;

pub(crate) mod shape_list_rule_sets_input;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_list_traffic_policies_input;

pub(crate) mod shape_register_member_to_address_list_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_start_address_list_import_job_input;

pub(crate) mod shape_start_archive_export_input;

pub(crate) mod shape_start_archive_search_input;

pub(crate) mod shape_stop_address_list_import_job_input;

pub(crate) mod shape_stop_archive_export_input;

pub(crate) mod shape_stop_archive_search_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_update_archive_input;

pub(crate) mod shape_update_ingress_point_input;

pub(crate) mod shape_update_relay_input;

pub(crate) mod shape_update_rule_set_input;

pub(crate) mod shape_update_traffic_policy_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_addon_instances;

pub(crate) mod shape_addon_subscriptions;

pub(crate) mod shape_address_filter;

pub(crate) mod shape_address_lists;

pub(crate) mod shape_archive_filters;

pub(crate) mod shape_archive_retention;

pub(crate) mod shape_archives_list;

pub(crate) mod shape_envelope;

pub(crate) mod shape_export_destination_configuration;

pub(crate) mod shape_export_status;

pub(crate) mod shape_export_summary_list;

pub(crate) mod shape_import_data_format;

pub(crate) mod shape_import_jobs;

pub(crate) mod shape_ingress_point_auth_configuration;

pub(crate) mod shape_ingress_point_configuration;

pub(crate) mod shape_ingress_points_list;

pub(crate) mod shape_message_body;

pub(crate) mod shape_metadata;

pub(crate) mod shape_policy_statement;

pub(crate) mod shape_policy_statement_list;

pub(crate) mod shape_relay_authentication;

pub(crate) mod shape_relays;

pub(crate) mod shape_rows_list;

pub(crate) mod shape_rule;

pub(crate) mod shape_rule_sets;

pub(crate) mod shape_rules;

pub(crate) mod shape_saved_addresses;

pub(crate) mod shape_search_status;

pub(crate) mod shape_search_summary_list;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_traffic_policy_list;

pub(crate) mod shape_addon_instance;

pub(crate) mod shape_addon_subscription;

pub(crate) mod shape_address_list;

pub(crate) mod shape_archive;

pub(crate) mod shape_archive_filter_condition;

pub(crate) mod shape_archive_filter_conditions;

pub(crate) mod shape_export_summary;

pub(crate) mod shape_import_job;

pub(crate) mod shape_ingress_point;

pub(crate) mod shape_ingress_point_password_configuration;

pub(crate) mod shape_no_authentication;

pub(crate) mod shape_policy_condition;

pub(crate) mod shape_relay;

pub(crate) mod shape_row;

pub(crate) mod shape_rule_action;

pub(crate) mod shape_rule_condition;

pub(crate) mod shape_rule_set;

pub(crate) mod shape_s3_export_destination_configuration;

pub(crate) mod shape_saved_address;

pub(crate) mod shape_search_summary;

pub(crate) mod shape_string_list;

pub(crate) mod shape_traffic_policy;

pub(crate) mod shape_add_header_action;

pub(crate) mod shape_archive_action;

pub(crate) mod shape_archive_boolean_expression;

pub(crate) mod shape_archive_string_expression;

pub(crate) mod shape_deliver_to_mailbox_action;

pub(crate) mod shape_deliver_to_q_business_action;

pub(crate) mod shape_drop_action;

pub(crate) mod shape_email_received_headers_list;

pub(crate) mod shape_ingress_boolean_expression;

pub(crate) mod shape_ingress_ipv4_expression;

pub(crate) mod shape_ingress_string_expression;

pub(crate) mod shape_ingress_tls_protocol_expression;

pub(crate) mod shape_policy_conditions;

pub(crate) mod shape_relay_action;

pub(crate) mod shape_replace_recipient_action;

pub(crate) mod shape_rule_actions;

pub(crate) mod shape_rule_boolean_expression;

pub(crate) mod shape_rule_conditions;

pub(crate) mod shape_rule_dmarc_expression;

pub(crate) mod shape_rule_ip_expression;

pub(crate) mod shape_rule_number_expression;

pub(crate) mod shape_rule_string_expression;

pub(crate) mod shape_rule_verdict_expression;

pub(crate) mod shape_s3_action;

pub(crate) mod shape_send_action;

pub(crate) mod shape_archive_boolean_to_evaluate;

pub(crate) mod shape_archive_string_to_evaluate;

pub(crate) mod shape_ingress_boolean_to_evaluate;

pub(crate) mod shape_ingress_ip_to_evaluate;

pub(crate) mod shape_ingress_string_to_evaluate;

pub(crate) mod shape_ingress_tls_protocol_to_evaluate;

pub(crate) mod shape_rule_boolean_to_evaluate;

pub(crate) mod shape_rule_ip_to_evaluate;

pub(crate) mod shape_rule_number_to_evaluate;

pub(crate) mod shape_rule_string_to_evaluate;

pub(crate) mod shape_rule_verdict_to_evaluate;

pub(crate) mod shape_analysis;

pub(crate) mod shape_ingress_analysis;

pub(crate) mod shape_ingress_is_in_address_list;

pub(crate) mod shape_rule_is_in_address_list;

pub(crate) mod shape_string_value_list;

pub(crate) mod shape_ipv4_cidrs;

pub(crate) mod shape_recipients;

pub(crate) mod shape_rule_dmarc_value_list;

pub(crate) mod shape_rule_ip_value_list;

pub(crate) mod shape_rule_string_list;

pub(crate) mod shape_rule_verdict_value_list;

pub(crate) mod shape_ingress_address_list_arn_list;

pub(crate) mod shape_rule_address_list_arn_list;
