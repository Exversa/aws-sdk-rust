// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateIngressPoint`](crate::operation::create_ingress_point::builders::CreateIngressPointFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_ingress_point::builders::CreateIngressPointFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_ingress_point::builders::CreateIngressPointFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique token that Amazon SES uses to recognize subsequent retries of the same request.</p><br>
    ///   - [`ingress_point_name(impl Into<String>)`](crate::operation::create_ingress_point::builders::CreateIngressPointFluentBuilder::ingress_point_name) / [`set_ingress_point_name(Option<String>)`](crate::operation::create_ingress_point::builders::CreateIngressPointFluentBuilder::set_ingress_point_name):<br>required: **true**<br><p>A user friendly name for an ingress endpoint resource.</p><br>
    ///   - [`r#type(IngressPointType)`](crate::operation::create_ingress_point::builders::CreateIngressPointFluentBuilder::type) / [`set_type(Option<IngressPointType>)`](crate::operation::create_ingress_point::builders::CreateIngressPointFluentBuilder::set_type):<br>required: **true**<br><p>The type of the ingress endpoint to create.</p><br>
    ///   - [`rule_set_id(impl Into<String>)`](crate::operation::create_ingress_point::builders::CreateIngressPointFluentBuilder::rule_set_id) / [`set_rule_set_id(Option<String>)`](crate::operation::create_ingress_point::builders::CreateIngressPointFluentBuilder::set_rule_set_id):<br>required: **true**<br><p>The identifier of an existing rule set that you attach to an ingress endpoint resource.</p><br>
    ///   - [`traffic_policy_id(impl Into<String>)`](crate::operation::create_ingress_point::builders::CreateIngressPointFluentBuilder::traffic_policy_id) / [`set_traffic_policy_id(Option<String>)`](crate::operation::create_ingress_point::builders::CreateIngressPointFluentBuilder::set_traffic_policy_id):<br>required: **true**<br><p>The identifier of an existing traffic policy that you attach to an ingress endpoint resource.</p><br>
    ///   - [`ingress_point_configuration(IngressPointConfiguration)`](crate::operation::create_ingress_point::builders::CreateIngressPointFluentBuilder::ingress_point_configuration) / [`set_ingress_point_configuration(Option<IngressPointConfiguration>)`](crate::operation::create_ingress_point::builders::CreateIngressPointFluentBuilder::set_ingress_point_configuration):<br>required: **false**<br><p>If you choose an Authenticated ingress endpoint, you must configure either an SMTP password or a secret ARN.</p><br>
    ///   - [`network_configuration(NetworkConfiguration)`](crate::operation::create_ingress_point::builders::CreateIngressPointFluentBuilder::network_configuration) / [`set_network_configuration(Option<NetworkConfiguration>)`](crate::operation::create_ingress_point::builders::CreateIngressPointFluentBuilder::set_network_configuration):<br>required: **false**<br><p>Specifies the network configuration for the ingress point. This allows you to create an IPv4-only, Dual-Stack, or PrivateLink type of ingress point. If not specified, the default network type is IPv4-only.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_ingress_point::builders::CreateIngressPointFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_ingress_point::builders::CreateIngressPointFluentBuilder::set_tags):<br>required: **false**<br><p>The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.</p><br>
    /// - On success, responds with [`CreateIngressPointOutput`](crate::operation::create_ingress_point::CreateIngressPointOutput) with field(s):
    ///   - [`ingress_point_id(String)`](crate::operation::create_ingress_point::CreateIngressPointOutput::ingress_point_id): <p>The unique identifier for a previously created ingress endpoint.</p>
    /// - On failure, responds with [`SdkError<CreateIngressPointError>`](crate::operation::create_ingress_point::CreateIngressPointError)
    pub fn create_ingress_point(&self) -> crate::operation::create_ingress_point::builders::CreateIngressPointFluentBuilder {
        crate::operation::create_ingress_point::builders::CreateIngressPointFluentBuilder::new(self.handle.clone())
    }
}
