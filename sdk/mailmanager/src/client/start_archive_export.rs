// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartArchiveExport`](crate::operation::start_archive_export::builders::StartArchiveExportFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`archive_id(impl Into<String>)`](crate::operation::start_archive_export::builders::StartArchiveExportFluentBuilder::archive_id) / [`set_archive_id(Option<String>)`](crate::operation::start_archive_export::builders::StartArchiveExportFluentBuilder::set_archive_id):<br>required: **true**<br><p>The identifier of the archive to export emails from.</p><br>
    ///   - [`filters(ArchiveFilters)`](crate::operation::start_archive_export::builders::StartArchiveExportFluentBuilder::filters) / [`set_filters(Option<ArchiveFilters>)`](crate::operation::start_archive_export::builders::StartArchiveExportFluentBuilder::set_filters):<br>required: **false**<br><p>Criteria to filter which emails are included in the export.</p><br>
    ///   - [`from_timestamp(DateTime)`](crate::operation::start_archive_export::builders::StartArchiveExportFluentBuilder::from_timestamp) / [`set_from_timestamp(Option<DateTime>)`](crate::operation::start_archive_export::builders::StartArchiveExportFluentBuilder::set_from_timestamp):<br>required: **true**<br><p>The start of the timestamp range to include emails from.</p><br>
    ///   - [`to_timestamp(DateTime)`](crate::operation::start_archive_export::builders::StartArchiveExportFluentBuilder::to_timestamp) / [`set_to_timestamp(Option<DateTime>)`](crate::operation::start_archive_export::builders::StartArchiveExportFluentBuilder::set_to_timestamp):<br>required: **true**<br><p>The end of the timestamp range to include emails from.</p><br>
    ///   - [`max_results(i32)`](crate::operation::start_archive_export::builders::StartArchiveExportFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::start_archive_export::builders::StartArchiveExportFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of email items to include in the export.</p><br>
    ///   - [`export_destination_configuration(ExportDestinationConfiguration)`](crate::operation::start_archive_export::builders::StartArchiveExportFluentBuilder::export_destination_configuration) / [`set_export_destination_configuration(Option<ExportDestinationConfiguration>)`](crate::operation::start_archive_export::builders::StartArchiveExportFluentBuilder::set_export_destination_configuration):<br>required: **true**<br><p>Details on where to deliver the exported email data.</p><br>
    ///   - [`include_metadata(bool)`](crate::operation::start_archive_export::builders::StartArchiveExportFluentBuilder::include_metadata) / [`set_include_metadata(Option<bool>)`](crate::operation::start_archive_export::builders::StartArchiveExportFluentBuilder::set_include_metadata):<br>required: **false**<br><p>Whether to include message metadata as JSON files in the export.</p><br>
    /// - On success, responds with [`StartArchiveExportOutput`](crate::operation::start_archive_export::StartArchiveExportOutput) with field(s):
    ///   - [`export_id(Option<String>)`](crate::operation::start_archive_export::StartArchiveExportOutput::export_id): <p>The unique identifier for the initiated export job.</p>
    /// - On failure, responds with [`SdkError<StartArchiveExportError>`](crate::operation::start_archive_export::StartArchiveExportError)
    pub fn start_archive_export(&self) -> crate::operation::start_archive_export::builders::StartArchiveExportFluentBuilder {
        crate::operation::start_archive_export::builders::StartArchiveExportFluentBuilder::new(self.handle.clone())
    }
}
