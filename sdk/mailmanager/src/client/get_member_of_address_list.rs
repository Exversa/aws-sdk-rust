// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetMemberOfAddressList`](crate::operation::get_member_of_address_list::builders::GetMemberOfAddressListFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`address_list_id(impl Into<String>)`](crate::operation::get_member_of_address_list::builders::GetMemberOfAddressListFluentBuilder::address_list_id) / [`set_address_list_id(Option<String>)`](crate::operation::get_member_of_address_list::builders::GetMemberOfAddressListFluentBuilder::set_address_list_id):<br>required: **true**<br><p>The unique identifier of the address list to retrieve the address from.</p><br>
    ///   - [`address(impl Into<String>)`](crate::operation::get_member_of_address_list::builders::GetMemberOfAddressListFluentBuilder::address) / [`set_address(Option<String>)`](crate::operation::get_member_of_address_list::builders::GetMemberOfAddressListFluentBuilder::set_address):<br>required: **true**<br><p>The address to be retrieved from the address list.</p><br>
    /// - On success, responds with [`GetMemberOfAddressListOutput`](crate::operation::get_member_of_address_list::GetMemberOfAddressListOutput) with field(s):
    ///   - [`address(String)`](crate::operation::get_member_of_address_list::GetMemberOfAddressListOutput::address): <p>The address retrieved from the address list.</p>
    ///   - [`created_timestamp(DateTime)`](crate::operation::get_member_of_address_list::GetMemberOfAddressListOutput::created_timestamp): <p>The timestamp of when the address was created.</p>
    /// - On failure, responds with [`SdkError<GetMemberOfAddressListError>`](crate::operation::get_member_of_address_list::GetMemberOfAddressListError)
    pub fn get_member_of_address_list(&self) -> crate::operation::get_member_of_address_list::builders::GetMemberOfAddressListFluentBuilder {
        crate::operation::get_member_of_address_list::builders::GetMemberOfAddressListFluentBuilder::new(self.handle.clone())
    }
}
