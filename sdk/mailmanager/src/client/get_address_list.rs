// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetAddressList`](crate::operation::get_address_list::builders::GetAddressListFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`address_list_id(impl Into<String>)`](crate::operation::get_address_list::builders::GetAddressListFluentBuilder::address_list_id) / [`set_address_list_id(Option<String>)`](crate::operation::get_address_list::builders::GetAddressListFluentBuilder::set_address_list_id):<br>required: **true**<br><p>The identifier of an existing address list resource to be retrieved.</p><br>
    /// - On success, responds with [`GetAddressListOutput`](crate::operation::get_address_list::GetAddressListOutput) with field(s):
    ///   - [`address_list_id(String)`](crate::operation::get_address_list::GetAddressListOutput::address_list_id): <p>The identifier of the address list resource.</p>
    ///   - [`address_list_arn(String)`](crate::operation::get_address_list::GetAddressListOutput::address_list_arn): <p>The Amazon Resource Name (ARN) of the address list resource.</p>
    ///   - [`address_list_name(String)`](crate::operation::get_address_list::GetAddressListOutput::address_list_name): <p>A user-friendly name for the address list resource.</p>
    ///   - [`created_timestamp(DateTime)`](crate::operation::get_address_list::GetAddressListOutput::created_timestamp): <p>The date of when then address list was created.</p>
    ///   - [`last_updated_timestamp(DateTime)`](crate::operation::get_address_list::GetAddressListOutput::last_updated_timestamp): <p>The date of when the address list was last updated.</p>
    /// - On failure, responds with [`SdkError<GetAddressListError>`](crate::operation::get_address_list::GetAddressListError)
    pub fn get_address_list(&self) -> crate::operation::get_address_list::builders::GetAddressListFluentBuilder {
        crate::operation::get_address_list::builders::GetAddressListFluentBuilder::new(self.handle.clone())
    }
}
