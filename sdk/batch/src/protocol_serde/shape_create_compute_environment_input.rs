// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_compute_environment_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_compute_environment::CreateComputeEnvironmentInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.compute_environment_name {
        object.key("computeEnvironmentName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.compute_resources {
        #[allow(unused_mut)]
        let mut object_3 = object.key("computeResources").start_object();
        crate::protocol_serde::shape_compute_resource::ser_compute_resource(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.context {
        object.key("context").string(var_4.as_str());
    }
    if let Some(var_5) = &input.eks_configuration {
        #[allow(unused_mut)]
        let mut object_6 = object.key("eksConfiguration").start_object();
        crate::protocol_serde::shape_eks_configuration::ser_eks_configuration(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.service_role {
        object.key("serviceRole").string(var_7.as_str());
    }
    if let Some(var_8) = &input.state {
        object.key("state").string(var_8.as_str());
    }
    if let Some(var_9) = &input.tags {
        #[allow(unused_mut)]
        let mut object_10 = object.key("tags").start_object();
        for (key_11, value_12) in var_9 {
            {
                object_10.key(key_11.as_str()).string(value_12.as_str());
            }
        }
        object_10.finish();
    }
    if let Some(var_13) = &input.r#type {
        object.key("type").string(var_13.as_str());
    }
    if let Some(var_14) = &input.unmanagedv_cpus {
        object.key("unmanagedvCpus").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_14).into()),
        );
    }
    Ok(())
}
