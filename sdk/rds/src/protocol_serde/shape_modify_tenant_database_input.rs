// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_modify_tenant_database_input_input_input(
    input: &crate::operation::modify_tenant_database::ModifyTenantDatabaseInput,
) -> ::std::result::Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = ::aws_smithy_query::QueryWriter::new(&mut out, "ModifyTenantDatabase", "2014-10-31");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("DBInstanceIdentifier");
    if let Some(var_2) = &input.db_instance_identifier {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("TenantDBName");
    if let Some(var_4) = &input.tenant_db_name {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("MasterUserPassword");
    if let Some(var_6) = &input.master_user_password {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("NewTenantDBName");
    if let Some(var_8) = &input.new_tenant_db_name {
        scope_7.string(var_8);
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("ManageMasterUserPassword");
    if let Some(var_10) = &input.manage_master_user_password {
        scope_9.boolean(*var_10);
    }
    #[allow(unused_mut)]
    let mut scope_11 = writer.prefix("RotateMasterUserPassword");
    if let Some(var_12) = &input.rotate_master_user_password {
        scope_11.boolean(*var_12);
    }
    #[allow(unused_mut)]
    let mut scope_13 = writer.prefix("MasterUserSecretKmsKeyId");
    if let Some(var_14) = &input.master_user_secret_kms_key_id {
        scope_13.string(var_14);
    }
    writer.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}
