// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateTenantDatabase`](crate::operation::create_tenant_database::builders::CreateTenantDatabaseFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`db_instance_identifier(impl Into<String>)`](crate::operation::create_tenant_database::builders::CreateTenantDatabaseFluentBuilder::db_instance_identifier) / [`set_db_instance_identifier(Option<String>)`](crate::operation::create_tenant_database::builders::CreateTenantDatabaseFluentBuilder::set_db_instance_identifier):<br>required: **true**<br><p>The user-supplied DB instance identifier. RDS creates your tenant database in this DB instance. This parameter isn't case-sensitive.</p><br>
    ///   - [`tenant_db_name(impl Into<String>)`](crate::operation::create_tenant_database::builders::CreateTenantDatabaseFluentBuilder::tenant_db_name) / [`set_tenant_db_name(Option<String>)`](crate::operation::create_tenant_database::builders::CreateTenantDatabaseFluentBuilder::set_tenant_db_name):<br>required: **true**<br><p>The user-supplied name of the tenant database that you want to create in your DB instance. This parameter has the same constraints as <code>DBName</code> in <code>CreateDBInstance</code>.</p><br>
    ///   - [`master_username(impl Into<String>)`](crate::operation::create_tenant_database::builders::CreateTenantDatabaseFluentBuilder::master_username) / [`set_master_username(Option<String>)`](crate::operation::create_tenant_database::builders::CreateTenantDatabaseFluentBuilder::set_master_username):<br>required: **true**<br><p>The name for the master user account in your tenant database. RDS creates this user account in the tenant database and grants privileges to the master user. This parameter is case-sensitive.</p> <p>Constraints:</p> <ul>  <li>   <p>Must be 1 to 16 letters, numbers, or underscores.</p></li>  <li>   <p>First character must be a letter.</p></li>  <li>   <p>Can't be a reserved word for the chosen database engine.</p></li> </ul><br>
    ///   - [`master_user_password(impl Into<String>)`](crate::operation::create_tenant_database::builders::CreateTenantDatabaseFluentBuilder::master_user_password) / [`set_master_user_password(Option<String>)`](crate::operation::create_tenant_database::builders::CreateTenantDatabaseFluentBuilder::set_master_user_password):<br>required: **false**<br><p>The password for the master user in your tenant database.</p> <p>Constraints:</p> <ul>  <li>   <p>Must be 8 to 30 characters.</p></li>  <li>   <p>Can include any printable ASCII character except forward slash (<code>/</code>), double quote (<code>"</code>), at symbol (<code>@</code>), ampersand (<code>&amp;</code>), or single quote (<code>'</code>).</p></li>  <li>   <p>Can't be specified when <code>ManageMasterUserPassword</code> is enabled.</p></li> </ul><br>
    ///   - [`character_set_name(impl Into<String>)`](crate::operation::create_tenant_database::builders::CreateTenantDatabaseFluentBuilder::character_set_name) / [`set_character_set_name(Option<String>)`](crate::operation::create_tenant_database::builders::CreateTenantDatabaseFluentBuilder::set_character_set_name):<br>required: **false**<br><p>The character set for your tenant database. If you don't specify a value, the character set name defaults to <code>AL32UTF8</code>.</p><br>
    ///   - [`nchar_character_set_name(impl Into<String>)`](crate::operation::create_tenant_database::builders::CreateTenantDatabaseFluentBuilder::nchar_character_set_name) / [`set_nchar_character_set_name(Option<String>)`](crate::operation::create_tenant_database::builders::CreateTenantDatabaseFluentBuilder::set_nchar_character_set_name):<br>required: **false**<br><p>The <code>NCHAR</code> value for the tenant database.</p><br>
    ///   - [`manage_master_user_password(bool)`](crate::operation::create_tenant_database::builders::CreateTenantDatabaseFluentBuilder::manage_master_user_password) / [`set_manage_master_user_password(Option<bool>)`](crate::operation::create_tenant_database::builders::CreateTenantDatabaseFluentBuilder::set_manage_master_user_password):<br>required: **false**<br><p>Specifies whether to manage the master user password with Amazon Web Services Secrets Manager.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide.</i></p> <p>Constraints:</p> <ul>  <li>   <p>Can't manage the master user password with Amazon Web Services Secrets Manager if <code>MasterUserPassword</code> is specified.</p></li> </ul><br>
    ///   - [`master_user_secret_kms_key_id(impl Into<String>)`](crate::operation::create_tenant_database::builders::CreateTenantDatabaseFluentBuilder::master_user_secret_kms_key_id) / [`set_master_user_secret_kms_key_id(Option<String>)`](crate::operation::create_tenant_database::builders::CreateTenantDatabaseFluentBuilder::set_master_user_secret_kms_key_id):<br>required: **false**<br><p>The Amazon Web Services KMS key identifier to encrypt a secret that is automatically generated and managed in Amazon Web Services Secrets Manager.</p> <p>This setting is valid only if the master user password is managed by RDS in Amazon Web Services Secrets Manager for the DB instance.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>If you don't specify <code>MasterUserSecretKmsKeyId</code>, then the <code>aws/secretsmanager</code> KMS key is used to encrypt the secret. If the secret is in a different Amazon Web Services account, then you can't use the <code>aws/secretsmanager</code> KMS key to encrypt the secret, and you must use a customer managed KMS key.</p> <p>There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_tenant_database::builders::CreateTenantDatabaseFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_tenant_database::builders::CreateTenantDatabaseFluentBuilder::set_tags):<br>required: **false**<br><p>A list of tags.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS resources</a> in the <i>Amazon RDS User Guide</i> or <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html">Tagging Amazon Aurora and Amazon RDS resources</a> in the <i>Amazon Aurora User Guide</i>.</p><br>
    /// - On success, responds with [`CreateTenantDatabaseOutput`](crate::operation::create_tenant_database::CreateTenantDatabaseOutput) with field(s):
    ///   - [`tenant_database(Option<TenantDatabase>)`](crate::operation::create_tenant_database::CreateTenantDatabaseOutput::tenant_database): <p>A tenant database in the DB instance. This data type is an element in the response to the <code>DescribeTenantDatabases</code> action.</p>
    /// - On failure, responds with [`SdkError<CreateTenantDatabaseError>`](crate::operation::create_tenant_database::CreateTenantDatabaseError)
    pub fn create_tenant_database(&self) -> crate::operation::create_tenant_database::builders::CreateTenantDatabaseFluentBuilder {
        crate::operation::create_tenant_database::builders::CreateTenantDatabaseFluentBuilder::new(self.handle.clone())
    }
}
